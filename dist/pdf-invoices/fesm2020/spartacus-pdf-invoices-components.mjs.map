{"version":3,"file":"spartacus-pdf-invoices-components.mjs","sources":["../../../feature-libs/pdf-invoices/components/invoices-list/invoices-list.component.ts","../../../feature-libs/pdf-invoices/components/invoices-list/invoices-list.component.html","../../../feature-libs/pdf-invoices/components/pdf-invoices-components.module.ts","../../../feature-libs/pdf-invoices/components/public_api.ts","../../../feature-libs/pdf-invoices/components/spartacus-pdf-invoices-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageService,\n  GlobalMessageType,\n  HttpErrorModel,\n  LanguageService,\n  PaginationModel,\n  SortModel,\n  TranslationService,\n} from '@spartacus/core';\nimport {\n  InvoiceQueryParams,\n  InvoicesFields,\n  OrderInvoiceList,\n  PDFInvoicesFacade,\n} from '@spartacus/pdf-invoices/root';\nimport { FileDownloadService, ICON_TYPE } from '@spartacus/storefront';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  EMPTY,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport { catchError, skip, switchMap, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-invoices-list',\n  templateUrl: './invoices-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InvoicesListComponent implements OnInit, OnDestroy {\n  /* For Enum use in HTML */\n  ICON_TYPE = ICON_TYPE;\n\n  protected PAGE_SIZE = 5; //Default page size\n\n  sortOptions: SortModel[];\n  sort = 'byInvoiceIdAsc';\n\n  protected sortMapping: { [key: string]: string } = {\n    byCreatedAtAsc: 'invoiceDate:asc', //TODO: (CXINT-2438) update the sort code after the API is changed\n    byCreatedAtDesc: 'invoiceDate:desc', //TODO: (CXINT-2438) update the sort code after the API is changed\n    byInvoiceIdAsc: 'invoiceId:asc',\n    byInvoiceIdDesc: 'invoiceId:desc',\n    byNetAmountAsc: 'netAmount:asc',\n    byNetAmountDesc: 'netAmount:desc',\n    byTotalAmountAsc: 'totalAmount:asc',\n    byTotalAmountDesc: 'totalAmount:desc',\n  };\n  pagination: PaginationModel;\n\n  // Contains the initial query parameters and will be updated with current state of filters\n  _initQueryParams: InvoiceQueryParams = {\n    currentPage: 0,\n    pageSize: this.PAGE_SIZE,\n    fields: InvoicesFields.FULL,\n    sort: this.sortMapping[this.sort], //backend supports sort codes like invoiceId:asc\n  };\n\n  // Triggers events on chaning the page, sort options\n  queryParams$ = new BehaviorSubject<InvoiceQueryParams>(this._initQueryParams);\n\n  // Used by template to subscribe to data from documents api\n  invoicesList$: Observable<OrderInvoiceList> = this.queryParams$.pipe(\n    switchMap((param) => this.pdfInvoicesFacade.getInvoicesForOrder(param)),\n    tap(\n      (invoicesList) =>\n        (this.pagination = {\n          currentPage: invoicesList.pagination?.page,\n          pageSize: invoicesList.pagination?.count,\n          totalPages: invoicesList.pagination?.totalPages,\n          totalResults: invoicesList.pagination?.totalCount,\n          sort: this.sortMapping[this.sort],\n        })\n    ),\n    catchError((error) => {\n      if (error && this.getNotEnabledError(error)?.length) {\n        this.globalMessageService.add(\n          { key: 'pdfInvoices.featureNotEnabled' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      }\n      return EMPTY;\n    })\n  );\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected pdfInvoicesFacade: PDFInvoicesFacade,\n    protected translationService: TranslationService,\n    protected downloadService: FileDownloadService,\n    protected languageService: LanguageService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .pipe(skip(1))\n        .subscribe(() =>\n          this.updateQueryParams({ fields: InvoicesFields.FULL })\n        )\n    );\n\n    this.getSortOptions();\n  }\n\n  protected updateQueryParams(partialParams: InvoiceQueryParams) {\n    // Overwrite each value present in partialParams to _queryParams\n    Object.keys(partialParams).forEach(\n      (key) =>\n        ((this._initQueryParams as any)[key] = (partialParams as any)[key])\n    );\n\n    // Every request that doesn't specify fields should be set to DEFAULT\n    if (!partialParams.fields) {\n      this._initQueryParams.fields = InvoicesFields.DEFAULT;\n    }\n\n    this.queryParams$.next(this._initQueryParams);\n  }\n\n  pageChange(currentPage: number): void {\n    this.updateQueryParams({\n      currentPage: currentPage,\n    });\n  }\n\n  sortChange(sortCode: string): void {\n    this.sort = sortCode;\n    this.updateQueryParams({\n      sort: this.sortMapping[sortCode], //backend supports sort codes like invoiceId:asc\n      currentPage: 0,\n    });\n  }\n\n  downloadPDFInvoice(invoiceId: string, externalSystemId?: string): void {\n    this.pdfInvoicesFacade\n      .getInvoicePDF(invoiceId, externalSystemId)\n      .pipe(take(1))\n      .subscribe({\n        next: (data) => {\n          const file = new Blob([data], { type: data.type });\n          const url = URL.createObjectURL(file);\n          this.downloadService.download(url, `${invoiceId}.pdf`);\n        },\n      });\n  }\n\n  getSortOptions() {\n    this.sortOptions = [];\n    Object.keys(this.sortMapping).forEach((sortKey) =>\n      this.sortOptions.push({ code: sortKey, selected: false })\n    );\n\n    const translations = this.sortOptions.map((sort) =>\n      this.translationService.translate(`pdfInvoices.sorts.${sort.code}`)\n    );\n\n    combineLatest(translations)\n      .pipe(take(1))\n      .subscribe((translated) =>\n        this.sortOptions.forEach(\n          (sort, index) => (sort.name = translated[index])\n        )\n      );\n  }\n\n  getNotEnabledError(response: HttpErrorModel): ErrorModel[] {\n    return response?.details\n      ? response.details.filter(\n          (error: any) => error?.type === 'UnknownResourceError'\n        )\n      : [];\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"invoicesList$ | async as invoicesList\">\n  <ng-container\n    *ngIf=\"\n      invoicesList.pagination &&\n      invoicesList.pagination.totalCount &&\n      invoicesList.pagination.totalCount > 0\n    \"\n  >\n    <div>\n      <!-- HEADER -->\n      <div class=\"cx-invoices-list-header\">\n        <h2>\n          {{ 'pdfInvoices.invoicesTable.header' | cxTranslate }}\n        </h2>\n      </div>\n\n      <!-- BODY -->\n      <div class=\"cx-invoices-list-body\">\n        <div class=\"cx-invoices-list-sort top\">\n          <label class=\"cx-invoices-list-form-group form-group\">\n            <span>\n              {{ 'pdfInvoices.sortBy' | cxTranslate }}\n            </span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              (sortListEvent)=\"sortChange($event)\"\n              [selectedOption]=\"sort\"\n              placeholder=\"{{ 'pdfInvoices.sortBy' | cxTranslate }}\"\n              [ariaLabel]=\"'pdfInvoices.sortInvoices' | cxTranslate\"\n              ariaControls=\"cx-invoices-list-table\"\n            ></cx-sorting>\n          </label>\n          <div\n            class=\"cx-invoices-list-pagination\"\n            *ngIf=\"\n              invoicesList.pagination &&\n              invoicesList.pagination.totalPages &&\n              invoicesList.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <!-- TABLE -->\n        <table\n          id=\"cx-invoices-list-table\"\n          class=\"table cx-invoices-list-table\"\n          attr.aria-label=\"{{\n            'pdfInvoices.invoicesTable.label' | cxTranslate\n          }}\"\n        >\n          <thead class=\"cx-invoices-list-thead-mobile\">\n            <th scope=\"col\">\n              {{ 'pdfInvoices.invoicesTable.invoiceId' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'pdfInvoices.invoicesTable.createdAt' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'pdfInvoices.invoicesTable.netAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'pdfInvoices.invoicesTable.totalAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              <cx-icon\n                [type]=\"ICON_TYPE.DOWNLOAD\"\n                class=\"cx-invoices-list-attachment-icon\"\n                title=\"{{\n                  'pdfInvoices.invoicesTable.attachment' | cxTranslate\n                }}\"\n              ></cx-icon>\n            </th>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let invoice of invoicesList.invoices\"\n              class=\"cx-invoices-list-row\"\n            >\n              <td class=\"cx-invoices-list-code\">\n                <div class=\"cx-invoices-list-label\">\n                  {{ 'pdfInvoices.invoicesTable.invoiceId' | cxTranslate }}\n                </div>\n                <div class=\"cx-invoices-list-value\">\n                  {{ invoice.invoiceId }}\n                </div>\n              </td>\n              <td class=\"cx-invoices-list-date\">\n                <div class=\"cx-invoices-list-label\">\n                  {{ 'pdfInvoices.invoicesTable.createdAt' | cxTranslate }}\n                </div>\n                <div class=\"cx-invoices-list-value\">\n                  {{ invoice.createdAt | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-invoices-list-monetary\">\n                <div class=\"cx-invoices-list-label\">\n                  {{ 'pdfInvoices.invoicesTable.netAmount' | cxTranslate }}\n                </div>\n                <div class=\"cx-invoices-list-value\">\n                  {{\n                    invoice.netAmount?.formattedValue\n                      ? invoice.netAmount?.formattedValue\n                      : invoice.netAmount?.currencyIso +\n                        '&nbsp;' +\n                        invoice.netAmount?.value\n                  }}\n                </div>\n              </td>\n              <td class=\"cx-invoices-list-monetary\">\n                <div class=\"cx-invoices-list-label\">\n                  {{ 'pdfInvoices.invoicesTable.totalAmount' | cxTranslate }}\n                </div>\n                <div class=\"cx-invoices-list-value\">\n                  {{\n                    invoice.totalAmount?.formattedValue\n                      ? invoice.totalAmount?.formattedValue\n                      : invoice.totalAmount?.currencyIso +\n                        '&nbsp;' +\n                        invoice.totalAmount?.value\n                  }}\n                </div>\n              </td>\n              <td class=\"cx-invoices-list-attachment\">\n                <div class=\"cx-invoices-list-label\">\n                  {{ 'pdfInvoices.invoicesTable.attachment' | cxTranslate }}\n                </div>\n                <div class=\"cx-invoices-list-value\">\n                  <button\n                    *ngIf=\"invoice.invoiceId\"\n                    class=\"cx-invoices-list-attachment-btn\"\n                    (click)=\"\n                      downloadPDFInvoice(\n                        invoice.invoiceId,\n                        invoice.externalSystemId\n                      )\n                    \"\n                    attr.aria-label=\"{{\n                      'pdfInvoices.invoicesTable.attachmentDescription'\n                        | cxTranslate\n                          : {\n                              id: invoice.invoiceId\n                            }\n                    }}\"\n                  >\n                    <cx-icon\n                      [type]=\"ICON_TYPE.FILE\"\n                      class=\"cx-invoices-list-attachment-icon\"\n                      title=\"{{\n                        'pdfInvoices.invoicesTable.download' | cxTranslate\n                      }}\"\n                    >\n                    </cx-icon>\n                    <span\n                      class=\"cx-invoices-list-attachment-text\"\n                      [innerText]=\"\n                        'pdfInvoices.invoicesTable.download' | cxTranslate\n                      \"\n                    >\n                    </span>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-invoices-list-sort bottom\">\n          <div\n            class=\"cx-invoices-list-pagination\"\n            *ngIf=\"\n              invoicesList.pagination &&\n              invoicesList.pagination.totalPages &&\n              invoicesList.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  DatePickerModule,\n  IconModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { InvoicesListComponent } from './invoices-list/invoices-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DatePickerModule,\n    I18nModule,\n    ReactiveFormsModule,\n    ListNavigationModule,\n    UrlModule,\n    IconModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  declarations: [InvoicesListComponent],\n  exports: [InvoicesListComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderDetailsPDFInvoicesComponent: {\n          component: InvoicesListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class PDFInvoicesComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './invoices-list/invoices-list.component';\nexport * from './pdf-invoices-components.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}