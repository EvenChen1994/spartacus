/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, Optional } from '@angular/core';
import { CxDatePipe } from '@spartacus/core';
import { EMPTY } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/base/root";
import * as i2 from "@spartacus/core";
import * as i3 from "@angular/common";
export class ScheduleLinesComponent {
    constructor(cartItemContext, translationService, datePipe) {
        this.cartItemContext = cartItemContext;
        this.translationService = translationService;
        this.datePipe = datePipe;
        this.orderEntry$ = this.cartItemContext?.item$ ?? EMPTY;
    }
    /**
     * Verifies whether the Schedule Line infos have any entries.
     * Only in this case we want to display the schedule line summary
     *
     * @param {OrderEntry} item - Cart item
     * @returns {boolean} - whether the Schedule Line information is present for the order
     */
    hasScheduleLines(item) {
        const scheduleLines = item.scheduleLines;
        return scheduleLines != null && scheduleLines.length > 0;
    }
    getScheduleLineInfoId(index) {
        return 'cx-schedule-line-info-' + index.toString();
    }
    getLongDate(date) {
        if (!date) {
            return '';
        }
        return this.datePipe.transform(date);
    }
}
ScheduleLinesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ScheduleLinesComponent, deps: [{ token: i1.CartItemContext, optional: true }, { token: i2.TranslationService }, { token: i2.CxDatePipe }], target: i0.ɵɵFactoryTarget.Component });
ScheduleLinesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ScheduleLinesComponent, selector: "cx-schedule-lines", providers: [CxDatePipe], ngImport: i0, template: "<ng-container *ngIf=\"orderEntry$ | async as orderEntry\">\n  <ng-container *ngIf=\"hasScheduleLines(orderEntry)\">\n    <div class=\"cx-code\">\n      <div\n        *ngFor=\"let scheduleLine of orderEntry.scheduleLines; let i = index\"\n        class=\"cx-schedule-line-info\"\n        attr.aria-describedby=\"{{ getScheduleLineInfoId(i) }}\"\n      >\n        <div id=\"{{ getScheduleLineInfoId(i) }}\" class=\"cx-visually-hidden\">\n          {{\n            's4omScheduleLines.a11y.scheduleLineEntryInfo'\n              | cxTranslate\n                : {\n                    quantity: scheduleLine.confirmedQuantity,\n                    date: getLongDate(scheduleLine.confirmedAt)\n                  }\n          }}\n        </div>\n        <div class=\"cx-value\" aria-hidden=\"true\">\n          {{ scheduleLine?.confirmedAt | cxDate: 'M/d/yyyy' }}\n        </div>\n        <div class=\"cx-label\" aria-hidden=\"true\">\n          {{ 's4omScheduleLines.quantity' | cxTranslate }}\n        </div>\n        <div class=\"cx-value\" aria-hidden=\"true\">\n          {{ scheduleLine?.confirmedQuantity }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i2.CxDatePipe, name: "cxDate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ScheduleLinesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-schedule-lines', providers: [CxDatePipe], template: "<ng-container *ngIf=\"orderEntry$ | async as orderEntry\">\n  <ng-container *ngIf=\"hasScheduleLines(orderEntry)\">\n    <div class=\"cx-code\">\n      <div\n        *ngFor=\"let scheduleLine of orderEntry.scheduleLines; let i = index\"\n        class=\"cx-schedule-line-info\"\n        attr.aria-describedby=\"{{ getScheduleLineInfoId(i) }}\"\n      >\n        <div id=\"{{ getScheduleLineInfoId(i) }}\" class=\"cx-visually-hidden\">\n          {{\n            's4omScheduleLines.a11y.scheduleLineEntryInfo'\n              | cxTranslate\n                : {\n                    quantity: scheduleLine.confirmedQuantity,\n                    date: getLongDate(scheduleLine.confirmedAt)\n                  }\n          }}\n        </div>\n        <div class=\"cx-value\" aria-hidden=\"true\">\n          {{ scheduleLine?.confirmedAt | cxDate: 'M/d/yyyy' }}\n        </div>\n        <div class=\"cx-label\" aria-hidden=\"true\">\n          {{ 's4omScheduleLines.quantity' | cxTranslate }}\n        </div>\n        <div class=\"cx-value\" aria-hidden=\"true\">\n          {{ scheduleLine?.confirmedQuantity }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CartItemContext, decorators: [{
                    type: Optional
                }] }, { type: i2.TranslationService }, { type: i2.CxDatePipe }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZWR1bGUtbGluZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vaW50ZWdyYXRpb24tbGlicy9zNG9tL3Jvb3QvY29tcG9uZW50cy9zY2hlZHVsZS1saW5lcy9zY2hlZHVsZS1saW5lcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9pbnRlZ3JhdGlvbi1saWJzL3M0b20vcm9vdC9jb21wb25lbnRzL3NjaGVkdWxlLWxpbmVzL3NjaGVkdWxlLWxpbmVzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVwRCxPQUFPLEVBQUUsVUFBVSxFQUFzQixNQUFNLGlCQUFpQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxLQUFLLEVBQWMsTUFBTSxNQUFNLENBQUM7Ozs7O0FBT3pDLE1BQU0sT0FBTyxzQkFBc0I7SUFDakMsWUFDd0IsZUFBZ0MsRUFDNUMsa0JBQXNDLEVBQ3RDLFFBQW9CO1FBRlIsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBQzVDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsYUFBUSxHQUFSLFFBQVEsQ0FBWTtRQUd2QixnQkFBVyxHQUNsQixJQUFJLENBQUMsZUFBZSxFQUFFLEtBQUssSUFBSSxLQUFLLENBQUM7SUFIcEMsQ0FBQztJQUtKOzs7Ozs7T0FNRztJQUNILGdCQUFnQixDQUFDLElBQWdCO1FBQy9CLE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFFekMsT0FBTyxhQUFhLElBQUksSUFBSSxJQUFJLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxLQUFhO1FBQ2pDLE9BQU8sd0JBQXdCLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3JELENBQUM7SUFFRCxXQUFXLENBQUMsSUFBVztRQUNyQixJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1QsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQzs7bUhBaENVLHNCQUFzQjt1R0FBdEIsc0JBQXNCLDRDQUZ0QixDQUFDLFVBQVUsQ0FBQywwQkNkekIscXFDQStCQTsyRkRmYSxzQkFBc0I7a0JBTGxDLFNBQVM7K0JBQ0UsbUJBQW1CLGFBRWxCLENBQUMsVUFBVSxDQUFDOzswQkFJcEIsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcnRJdGVtQ29udGV4dCwgT3JkZXJFbnRyeSB9IGZyb20gJ0BzcGFydGFjdXMvY2FydC9iYXNlL3Jvb3QnO1xuaW1wb3J0IHsgQ3hEYXRlUGlwZSwgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IEVNUFRZLCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LXNjaGVkdWxlLWxpbmVzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NjaGVkdWxlLWxpbmVzLmNvbXBvbmVudC5odG1sJyxcbiAgcHJvdmlkZXJzOiBbQ3hEYXRlUGlwZV0sXG59KVxuZXhwb3J0IGNsYXNzIFNjaGVkdWxlTGluZXNDb21wb25lbnQge1xuICBjb25zdHJ1Y3RvcihcbiAgICBAT3B0aW9uYWwoKSBwcm90ZWN0ZWQgY2FydEl0ZW1Db250ZXh0OiBDYXJ0SXRlbUNvbnRleHQsXG4gICAgcHJvdGVjdGVkIHRyYW5zbGF0aW9uU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBkYXRlUGlwZTogQ3hEYXRlUGlwZVxuICApIHt9XG5cbiAgcmVhZG9ubHkgb3JkZXJFbnRyeSQ6IE9ic2VydmFibGU8T3JkZXJFbnRyeT4gPVxuICAgIHRoaXMuY2FydEl0ZW1Db250ZXh0Py5pdGVtJCA/PyBFTVBUWTtcblxuICAvKipcbiAgICogVmVyaWZpZXMgd2hldGhlciB0aGUgU2NoZWR1bGUgTGluZSBpbmZvcyBoYXZlIGFueSBlbnRyaWVzLlxuICAgKiBPbmx5IGluIHRoaXMgY2FzZSB3ZSB3YW50IHRvIGRpc3BsYXkgdGhlIHNjaGVkdWxlIGxpbmUgc3VtbWFyeVxuICAgKlxuICAgKiBAcGFyYW0ge09yZGVyRW50cnl9IGl0ZW0gLSBDYXJ0IGl0ZW1cbiAgICogQHJldHVybnMge2Jvb2xlYW59IC0gd2hldGhlciB0aGUgU2NoZWR1bGUgTGluZSBpbmZvcm1hdGlvbiBpcyBwcmVzZW50IGZvciB0aGUgb3JkZXJcbiAgICovXG4gIGhhc1NjaGVkdWxlTGluZXMoaXRlbTogT3JkZXJFbnRyeSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHNjaGVkdWxlTGluZXMgPSBpdGVtLnNjaGVkdWxlTGluZXM7XG5cbiAgICByZXR1cm4gc2NoZWR1bGVMaW5lcyAhPSBudWxsICYmIHNjaGVkdWxlTGluZXMubGVuZ3RoID4gMDtcbiAgfVxuXG4gIGdldFNjaGVkdWxlTGluZUluZm9JZChpbmRleDogbnVtYmVyKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ2N4LXNjaGVkdWxlLWxpbmUtaW5mby0nICsgaW5kZXgudG9TdHJpbmcoKTtcbiAgfVxuXG4gIGdldExvbmdEYXRlKGRhdGU/OiBEYXRlKSB7XG4gICAgaWYgKCFkYXRlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmRhdGVQaXBlLnRyYW5zZm9ybShkYXRlKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cIm9yZGVyRW50cnkkIHwgYXN5bmMgYXMgb3JkZXJFbnRyeVwiPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiaGFzU2NoZWR1bGVMaW5lcyhvcmRlckVudHJ5KVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjeC1jb2RlXCI+XG4gICAgICA8ZGl2XG4gICAgICAgICpuZ0Zvcj1cImxldCBzY2hlZHVsZUxpbmUgb2Ygb3JkZXJFbnRyeS5zY2hlZHVsZUxpbmVzOyBsZXQgaSA9IGluZGV4XCJcbiAgICAgICAgY2xhc3M9XCJjeC1zY2hlZHVsZS1saW5lLWluZm9cIlxuICAgICAgICBhdHRyLmFyaWEtZGVzY3JpYmVkYnk9XCJ7eyBnZXRTY2hlZHVsZUxpbmVJbmZvSWQoaSkgfX1cIlxuICAgICAgPlxuICAgICAgICA8ZGl2IGlkPVwie3sgZ2V0U2NoZWR1bGVMaW5lSW5mb0lkKGkpIH19XCIgY2xhc3M9XCJjeC12aXN1YWxseS1oaWRkZW5cIj5cbiAgICAgICAgICB7e1xuICAgICAgICAgICAgJ3M0b21TY2hlZHVsZUxpbmVzLmExMXkuc2NoZWR1bGVMaW5lRW50cnlJbmZvJ1xuICAgICAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgIHF1YW50aXR5OiBzY2hlZHVsZUxpbmUuY29uZmlybWVkUXVhbnRpdHksXG4gICAgICAgICAgICAgICAgICAgIGRhdGU6IGdldExvbmdEYXRlKHNjaGVkdWxlTGluZS5jb25maXJtZWRBdClcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN4LXZhbHVlXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAge3sgc2NoZWR1bGVMaW5lPy5jb25maXJtZWRBdCB8IGN4RGF0ZTogJ00vZC95eXl5JyB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN4LWxhYmVsXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAge3sgJ3M0b21TY2hlZHVsZUxpbmVzLnF1YW50aXR5JyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtdmFsdWVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgICB7eyBzY2hlZHVsZUxpbmU/LmNvbmZpcm1lZFF1YW50aXR5IH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuPC9uZy1jb250YWluZXI+XG4iXX0=