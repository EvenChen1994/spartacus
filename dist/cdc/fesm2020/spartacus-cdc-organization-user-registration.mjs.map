{"version":3,"file":"spartacus-cdc-organization-user-registration.mjs","sources":["../../../integration-libs/cdc/organization/user-registration/cdc-b2b-register-component.service.ts","../../../integration-libs/cdc/organization/user-registration/cdc-b2b-register.module.ts","../../../integration-libs/cdc/organization/user-registration/public_api.ts","../../../integration-libs/cdc/organization/user-registration/spartacus-cdc-organization-user-registration.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { CdcJsService, CdcLoadUserTokenFailEvent } from '@spartacus/cdc/root';\nimport {\n  AuthConfigService,\n  AuthService,\n  Command,\n  CommandService,\n  EventService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  TranslationService,\n  UserAddressService,\n} from '@spartacus/core';\nimport { UserRegistrationFormService } from '@spartacus/organization/user-registration/components';\nimport {\n  UserRegistrationFacade,\n  OrganizationUserRegistrationForm,\n} from '@spartacus/organization/user-registration/root';\nimport { UserRegisterFacade } from '@spartacus/user/profile/root';\nimport { Observable, throwError } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class CDCB2BRegisterComponentService extends UserRegistrationFormService {\n  protected registerCommand: Command<\n    { orgInfo: OrganizationUserRegistrationForm },\n    OrganizationUserRegistrationForm\n  > = this.command.create(\n    ({ orgInfo }) =>\n      // Registering user through CDC Gigya SDK\n      this.cdcJSService.registerOrganisationWithoutScreenSet(\n        orgInfo\n      ) as unknown as Observable<OrganizationUserRegistrationForm>\n  );\n\n  protected loadUserTokenFailed$: Observable<boolean> = this.eventService\n    .get(CdcLoadUserTokenFailEvent)\n    .pipe(\n      map((event) => !!event),\n      tap((failed) => {\n        if (failed) {\n          throw new Error(`User token failed to load.`);\n        }\n      })\n    );\n\n  constructor(\n    protected command: CommandService,\n    protected cdcJSService: CdcJsService,\n    protected authService: AuthService,\n    protected eventService: EventService,\n    protected userRegisterFacade: UserRegisterFacade,\n    protected userAddressService: UserAddressService,\n    protected organizationUserRegistrationFacade: UserRegistrationFacade,\n    protected translationService: TranslationService,\n    protected globalMessageService: GlobalMessageService,\n    protected authConfigService: AuthConfigService,\n    protected routingService: RoutingService,\n    protected formBuilder: FormBuilder\n  ) {\n    super(\n      userRegisterFacade,\n      userAddressService,\n      organizationUserRegistrationFacade,\n      translationService,\n      globalMessageService,\n      authConfigService,\n      routingService,\n      formBuilder\n    );\n  }\n\n  /**\n   * Register a new user using CDC SDK.\n   *\n   * @param form as FormGroup\n   */\n  registerUser(form: FormGroup): Observable<OrganizationUserRegistrationForm> {\n    if (\n      !form.get('firstName')?.value ||\n      !form.get('lastName')?.value ||\n      !form.get('email')?.value ||\n      !form.get('companyName')?.value\n    ) {\n      return throwError(`The provided user is not valid: ${form.value}`);\n    }\n\n    const orgInfo: OrganizationUserRegistrationForm = {\n      firstName: form.get('firstName')?.value,\n      lastName: form.get('lastName')?.value,\n      email: form.get('email')?.value,\n      companyName: form.get('companyName')?.value,\n      addressLine1: form.get('line1')?.value,\n      addressLine2: form.get('line2')?.value,\n      postalCode: form.get('postalCode')?.value,\n      town: form.get('town')?.value,\n      region: form.get('region')?.get('isocode')?.value,\n      country: form.get('country')?.get('isocode')?.value,\n      phoneNumber: form.get('phoneNumber')?.value,\n      message: form.get('message')?.value,\n    };\n    return this.cdcJSService.didLoad().pipe(\n      tap((cdcLoaded) => {\n        if (!cdcLoaded) {\n          this.globalMessageService.add(\n            {\n              key: 'errorHandlers.scriptFailedToLoad',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          throw new Error(`CDC script didn't load.`);\n        }\n      }),\n      switchMap(() =>\n        // Logging in using CDC Gigya SDK, update the registerCommand\n        this.registerCommand.execute({ orgInfo })\n      ),\n      tap(() => {\n        this.displayGlobalMessage();\n        this.redirectToLogin();\n        form.reset();\n      })\n    );\n  }\n\n  // @override\n  postRegisterMessage(): void {\n    // don't show the message\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  NgSelectA11yModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { UserRegistrationFormService } from '@spartacus/organization/user-registration/components';\nimport { CDCB2BRegisterComponentService } from './cdc-b2b-register-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n    FormErrorsModule,\n    NgSelectModule,\n    NgSelectA11yModule,\n  ],\n  providers: [\n    {\n      provide: UserRegistrationFormService,\n      useClass: CDCB2BRegisterComponentService,\n    },\n  ],\n})\nexport class CDCB2BRegisterModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cdc-b2b-register-component.service';\nexport * from './cdc-b2b-register.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}