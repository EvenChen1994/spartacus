{"version":3,"file":"spartacus-cdc-user-account.mjs","sources":["../../../integration-libs/cdc/user-account/login-form/cdc-login-form-component.service.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/cdc-reconsent-dialogue-event.listener.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/cdc-reconsent-component.service.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/cdc-reconsent.component.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/cdc-reconsent.component.html","../../../integration-libs/cdc/user-account/login-form/reconsent/default-cdc-reconsent-layout.config.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/cdc-reconsent.module.ts","../../../integration-libs/cdc/user-account/login-form/cdc-login-form.module.ts","../../../integration-libs/cdc/user-account/login-form/reconsent/index.ts","../../../integration-libs/cdc/user-account/login-form/index.ts","../../../integration-libs/cdc/user-account/cdc-user-account.module.ts","../../../integration-libs/cdc/user-account/public_api.ts","../../../integration-libs/cdc/user-account/spartacus-cdc-user-account.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CdcJsService } from '@spartacus/cdc/root';\nimport {\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { LoginFormComponentService } from '@spartacus/user/account/components';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class CdcLoginFormComponentService\n  extends LoginFormComponentService\n  implements OnDestroy\n{\n  constructor(\n    protected auth: AuthService,\n    protected globalMessageService: GlobalMessageService,\n    protected winRef: WindowRef,\n    protected cdcJsService: CdcJsService\n  ) {\n    super(auth, globalMessageService, winRef);\n  }\n\n  protected subscription: Subscription = new Subscription();\n\n  login() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n    this.subscription.add(\n      this.cdcJsService.didLoad().subscribe((cdcLoaded) => {\n        if (cdcLoaded) {\n          // Logging in using CDC Gigya SDK\n          this.cdcJsService\n            .loginUserWithoutScreenSet(\n              this.form.value.userId.toLowerCase(),\n              this.form.value.password\n            )\n            .subscribe({\n              next: () => this.busy$.next(false),\n              error: () => this.busy$.next(false),\n            });\n        } else {\n          // CDC Gigya SDK not loaded, show error to the user\n          this.globalMessageService.add(\n            {\n              key: 'errorHandlers.scriptFailedToLoad',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          this.busy$.next(false);\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CdcReConsentEvent } from '@spartacus/cdc/root';\nimport { EventService } from '@spartacus/core';\nimport { LaunchDialogService, LAUNCH_CALLER } from '@spartacus/storefront';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CdcReconsentDialogEventListener implements OnDestroy {\n  protected subscription = new Subscription();\n\n  constructor(\n    protected eventService: EventService,\n    protected launchDialogService: LaunchDialogService\n  ) {\n    this.onReconsent();\n  }\n  protected onReconsent() {\n    this.subscription.add(\n      this.eventService.get(CdcReConsentEvent).subscribe((event) => {\n        this.openDialog(event);\n      })\n    );\n  }\n\n  protected openDialog(event: CdcReConsentEvent) {\n    const reconsentData = {\n      user: event.user,\n      password: event.password,\n      consentIds: event.consentIds,\n      errorMessage: event.errorMessage,\n      regToken: event.regToken,\n    };\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.CDC_RECONSENT,\n      undefined,\n      undefined,\n      reconsentData\n    );\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { GlobalMessageService, GlobalMessageType } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { LaunchDialogService } from '@spartacus/storefront';\nimport { CdcJsService, CdcUserConsentService } from '@spartacus/cdc/root';\n\n@Injectable({ providedIn: 'root' })\nexport class CdcReconsentComponentService implements OnDestroy {\n  constructor(\n    protected cdcUserConsentService: CdcUserConsentService,\n    protected cdcJsService: CdcJsService,\n    protected globalMessageService: GlobalMessageService,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * saves the consent given from reconsent pop-up and triggers a re-login\n   * @param consentId - array of consent IDs\n   * @param userParams - data from login session\n   */\n  saveConsentAndLogin(consentId: string[], userParams: any) {\n    this.subscription.add(\n      this.cdcJsService.didLoad().subscribe((cdcLoaded) => {\n        if (cdcLoaded) {\n          this.cdcUserConsentService\n            .updateCdcConsent(\n              true,\n              consentId,\n              userParams?.user,\n              userParams?.regToken\n            )\n            .subscribe({\n              next: (result) => {\n                if (result?.errorCode === 0) {\n                  //do a automatic re-login\n                  this.cdcJsService\n                    .loginUserWithoutScreenSet(\n                      userParams.user,\n                      userParams.password\n                    )\n                    .subscribe(() => {\n                      this.launchDialogService.closeDialog('relogin triggered');\n                    });\n                }\n              },\n              error: (error) => {\n                this.handleReconsentUpdateError(\n                  'Reconsent Error',\n                  error?.message\n                );\n              },\n            });\n        } else {\n          // CDC Gigya SDK not loaded, show error to the user\n          this.globalMessageService.add(\n            {\n              key: 'errorHandlers.scriptFailedToLoad',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n        }\n      })\n    );\n  }\n\n  /**\n   * Displays error message after closing reconsent dialog\n   */\n  handleReconsentUpdateError(reason?: string, errorMessage?: string) {\n    this.launchDialogService.closeDialog(reason);\n    if (errorMessage) {\n      this.globalMessageService.add(\n        {\n          key: 'httpHandlers.badRequestPleaseLoginAgain',\n          params: {\n            errorMessage: errorMessage,\n          },\n        },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormGroup } from '@angular/forms';\nimport { AnonymousConsentsService, ConsentTemplate } from '@spartacus/core';\nimport {\n  FocusConfig,\n  ICON_TYPE,\n  LaunchDialogService,\n} from '@spartacus/storefront';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CdcReconsentComponentService } from './cdc-reconsent-component.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog', //reusing existing selector\n  templateUrl: './cdc-reconsent.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdcReconsentComponent implements OnInit, OnDestroy {\n  protected subscription = new Subscription();\n\n  form: UntypedFormGroup = new UntypedFormGroup({});\n  iconTypes = ICON_TYPE;\n  loaded$: Observable<boolean> = of(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  reconsentEvent: any = {};\n\n  selectedConsents: string[] = [];\n  disableSubmitButton: boolean = true;\n  totalConsents: number = 0;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  constructor(\n    protected launchDialogService: LaunchDialogService,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected cdcReconsentService: CdcReconsentComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.launchDialogService.data$.subscribe((data) => {\n        this.reconsentEvent['user'] = data.user;\n        this.reconsentEvent['password'] = data.password;\n        this.reconsentEvent['regToken'] = data.regToken;\n        this.reconsentEvent['errorMessage'] = data.errorMessage;\n        this.loadConsents(data.consentIds);\n      })\n    );\n  }\n\n  loadConsents(reconsentIds: string[]): void {\n    this.templateList$ = this.anonymousConsentsService.getTemplates(true).pipe(\n      map((templateList) => {\n        const output: ConsentTemplate[] = [];\n        templateList.forEach((template) => {\n          if (template.id && reconsentIds.includes(template.id)) {\n            output.push(template);\n          }\n        });\n        this.totalConsents = output.length;\n        return output;\n      })\n    );\n    this.loaded$ = of(true);\n  }\n\n  onConsentChange(event: { given: boolean; template: ConsentTemplate }) {\n    if (event.given === false && event.template?.id) {\n      const index: number = this.selectedConsents.indexOf(event.template.id);\n      if (index !== -1) {\n        this.selectedConsents.splice(index, 1);\n      }\n    } else if (event.given === true && event.template?.id) {\n      this.selectedConsents.push(event.template.id);\n    }\n    if (this.totalConsents === this.selectedConsents.length) {\n      this.disableSubmitButton = false;\n    } else {\n      this.disableSubmitButton = true;\n    }\n  }\n\n  dismissDialog(reason?: any, message?: string): void {\n    if (reason === 'Proceed To Login') {\n      this.loaded$ = of(false);\n      this.cdcReconsentService.saveConsentAndLogin(\n        this.selectedConsents,\n        this.reconsentEvent\n      );\n    } else {\n      this.cdcReconsentService.handleReconsentUpdateError(reason, message);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div\n  class=\"cx-anonymous-consent-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"dismissDialog('Escape pressed', reconsentEvent.errorMessage)\"\n>\n  <div class=\"cx-dialog-content\">\n    <!-- Modal Header -->\n    <ng-container *ngIf=\"loaded$ | async; else loading\">\n      <div class=\"cx-dialog-header\">\n        <h3>\n          {{ 'reconsent.dialog.title' | cxTranslate }}\n        </h3>\n        <button\n          type=\"button\"\n          class=\"close\"\n          [attr.aria-label]=\"'common.close' | cxTranslate\"\n          (click)=\"dismissDialog('Cross click', reconsentEvent.errorMessage)\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n      <div class=\"cx-dialog-description\">\n        {{ 'reconsent.dialog.description' | cxTranslate }}\n        <div\n          class=\"cx-dialog-separator col-sm-12 d-xs-block d-sm-block d-md-none\"\n        ></div>\n      </div>\n      <div class=\"cx-dialog-buttons\"></div>\n      <!-- Modal Body -->\n      <div class=\"cx-dialog-body\" *ngIf=\"templateList$ | async as templateList\">\n        <div\n          class=\"cx-dialog-row col-sm-12 col-md-6\"\n          *ngFor=\"let consentTemplate of templateList\"\n        >\n          <cx-consent-management-form\n            [consentTemplate]=\"consentTemplate\"\n            (consentChanged)=\"onConsentChange($event)\"\n          ></cx-consent-management-form>\n        </div>\n      </div>\n      <!-- Actions -->\n      <div class=\"cx-dialog-buttons\">\n        <a\n          [class.disabled]=\"disableSubmitButton\"\n          (click)=\"\n            dismissDialog('Proceed To Login', reconsentEvent.errorMessage)\n          \"\n          class=\"btn btn-primary\"\n          autofocus\n          >{{ 'common.submit' | cxTranslate }}</a\n        >\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #loading>\n    <cx-spinner></cx-spinner>\n  </ng-template>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DIALOG_TYPE, LayoutConfig } from '@spartacus/storefront';\nimport { CdcReconsentComponent } from './cdc-reconsent.component';\n\nexport const defaultCdcReconsentLayoutConfig: LayoutConfig = {\n  launch: {\n    CDC_RECONSENT: {\n      inlineRoot: true,\n      component: CdcReconsentComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport {\n  ConsentManagementModule,\n  IconModule,\n  KeyboardFocusModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { CdcReconsentDialogEventListener } from './cdc-reconsent-dialogue-event.listener';\nimport { CdcReconsentComponent } from './cdc-reconsent.component';\nimport { defaultCdcReconsentLayoutConfig } from './default-cdc-reconsent-layout.config';\n\n@NgModule({\n  providers: [provideDefaultConfig(defaultCdcReconsentLayoutConfig)],\n  declarations: [CdcReconsentComponent],\n  exports: [CdcReconsentComponent],\n  imports: [\n    CommonModule,\n    SpinnerModule,\n    IconModule,\n    I18nModule,\n    KeyboardFocusModule,\n    ConsentManagementModule,\n  ],\n})\nexport class CdcReconsentModule {\n  constructor(\n    _cdcReconsentDialogEventListener: CdcReconsentDialogEventListener\n  ) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthService,\n  CmsConfig,\n  GlobalMessageService,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n  WindowRef,\n} from '@spartacus/core';\nimport { FormErrorsModule, SpinnerModule } from '@spartacus/storefront';\nimport {\n  LoginFormComponent,\n  LoginFormComponentService,\n} from '@spartacus/user/account/components';\nimport { CdcReconsentModule } from './reconsent/cdc-reconsent.module';\nimport { CdcLoginFormComponentService } from './cdc-login-form-component.service';\nimport { CdcJsService } from '@spartacus/cdc/root';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n    SpinnerModule,\n    CdcReconsentModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          providers: [\n            {\n              provide: LoginFormComponentService,\n              useClass: CdcLoginFormComponentService,\n              deps: [\n                AuthService,\n                GlobalMessageService,\n                WindowRef,\n                CdcJsService,\n              ],\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCLoginFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cdc-reconsent-dialogue-event.listener';\nexport * from './cdc-reconsent.component';\nexport * from './cdc-reconsent.module';\nexport * from './cdc-reconsent-component.service';\nexport * from './default-cdc-reconsent-layout.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cdc-login-form-component.service';\nexport * from './cdc-login-form.module';\nexport * from './reconsent/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CDCLoginFormModule } from './login-form/cdc-login-form.module';\n\n@NgModule({\n  imports: [CDCLoginFormModule],\n})\nexport class CDCUserAccountModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './login-form/index';\nexport * from './cdc-user-account.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i2","i1","i3","i3.CdcReconsentComponentService","i1.CdcReconsentDialogEventListener"],"mappings":"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"}