{"version":3,"file":"spartacus-cdc-user-profile.mjs","sources":["../../../integration-libs/cdc/user-profile/register/cdc-register-component.service.ts","../../../integration-libs/cdc/user-profile/register/cdc-register.module.ts","../../../integration-libs/cdc/user-profile/register/index.ts","../../../integration-libs/cdc/user-profile/forgot-password/cdc-forgot-password-component.service.ts","../../../integration-libs/cdc/user-profile/forgot-password/cdc-forgot-password.module.ts","../../../integration-libs/cdc/user-profile/forgot-password/index.ts","../../../integration-libs/cdc/user-profile/update-email/cdc-update-email-component.service.ts","../../../integration-libs/cdc/user-profile/update-email/cdc-update-email.module.ts","../../../integration-libs/cdc/user-profile/update-password/cdc-update-password-component.service.ts","../../../integration-libs/cdc/user-profile/update-password/cdc-update-password.module.ts","../../../integration-libs/cdc/user-profile/update-profile/cdc-update-profile-component.service.ts","../../../integration-libs/cdc/user-profile/update-profile/cdc-update-profile.module.ts","../../../integration-libs/cdc/user-profile/cdc-user-profile.module.ts","../../../integration-libs/cdc/user-profile/public_api.ts","../../../integration-libs/cdc/user-profile/spartacus-cdc-user-profile.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  FormControl,\n  UntypedFormArray,\n  UntypedFormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport {\n  CdcConsentManagementComponentService,\n  CdcJsService,\n  CdcLoadUserTokenFailEvent,\n  CDC_USER_PREFERENCE_SERIALIZER,\n} from '@spartacus/cdc/root';\nimport {\n  AnonymousConsentsService,\n  AuthService,\n  Command,\n  CommandService,\n  ConsentTemplate,\n  ConverterService,\n  EventService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { User } from '@spartacus/user/account/root';\nimport { RegisterComponentService } from '@spartacus/user/profile/components';\nimport {\n  UserProfileFacade,\n  UserRegisterFacade,\n  UserSignUp,\n} from '@spartacus/user/profile/root';\nimport { Observable, merge, throwError } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\n\n@Injectable()\nexport class CDCRegisterComponentService extends RegisterComponentService {\n  protected registerCommand: Command<{ user: UserSignUp }, User> =\n    this.command.create(\n      ({ user }) =>\n        // Registering user through CDC Gigya SDK\n        this.cdcJSService.registerUserWithoutScreenSet(\n          user\n        ) as unknown as Observable<User>\n    );\n\n  protected loadUserTokenFailed$: Observable<boolean> = this.eventService\n    .get(CdcLoadUserTokenFailEvent)\n    .pipe(\n      map((event) => !!event),\n      tap((failed) => {\n        if (failed) {\n          throw new Error(`User token failed to load.`);\n        }\n      })\n    );\n\n  protected isLoggedIn$: Observable<boolean> = this.authService\n    .isUserLoggedIn()\n    .pipe(filter((loggedIn) => loggedIn));\n\n  constructor(\n    protected userRegisterFacade: UserRegisterFacade,\n    protected command: CommandService,\n    protected store: Store,\n    protected cdcJSService: CdcJsService,\n    protected globalMessageService: GlobalMessageService,\n    protected authService: AuthService,\n    protected eventService: EventService,\n    protected userProfileFacade: UserProfileFacade,\n    protected cdcConsentManagementService: CdcConsentManagementComponentService,\n    protected converter: ConverterService,\n    protected fb: UntypedFormBuilder,\n    protected anonymousConsentsService: AnonymousConsentsService\n  ) {\n    super(userRegisterFacade, globalMessageService, fb);\n  }\n\n  /**\n   * Register a new user using CDC SDK.\n   *\n   * @param user as UserSignUp\n   */\n  register(user: UserSignUp): Observable<User> {\n    if (!user.firstName || !user.lastName || !user.uid || !user.password) {\n      return throwError(`The provided user is not valid: ${user}`);\n    }\n    /** fill the user preferences */\n    user.preferences = this.generatePreferencesObject();\n    return this.cdcJSService.didLoad().pipe(\n      tap((cdcLoaded) => {\n        if (!cdcLoaded) {\n          this.globalMessageService.add(\n            {\n              key: 'errorHandlers.scriptFailedToLoad',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n          throw new Error(`CDC script didn't load.`);\n        }\n      }),\n      switchMap(() =>\n        // Logging in using CDC Gigya SDK, update the registerCommand\n        this.registerCommand.execute({ user })\n      ),\n      switchMap(() =>\n        merge(this.loadUserTokenFailed$, this.isLoggedIn$).pipe(\n          map(() => {\n            //update user title code\n            this.userProfileFacade.update(user);\n          })\n        )\n      ),\n      switchMap(() => {\n        return this.userProfileFacade\n          .get()\n          .pipe(filter((userObj): userObj is User => Boolean(userObj)));\n      })\n    );\n  }\n\n  /**\n   * Return preferences object that needs to be updated during register process\n   * @returns preference object\n   */\n  generatePreferencesObject(): any {\n    let preferences = null;\n    const consentIDs = this.cdcConsentManagementService.getCdcConsentIDs(); //fetch all active consents\n    for (const id of consentIDs) {\n      const consent: ConsentTemplate = {};\n      consent.id = id;\n      consent.currentConsent = {};\n      consent.currentConsent.consentGivenDate = new Date();\n      const serializedPreference: any = this.converter.convert(\n        consent,\n        CDC_USER_PREFERENCE_SERIALIZER\n      );\n      preferences = Object.assign(preferences ?? {}, serializedPreference);\n    }\n    return preferences;\n  }\n\n  // @override\n  postRegisterMessage(): void {\n    // don't show the message\n  }\n\n  /**\n   * fetch consents that exist in commerce and is active in cdc\n   * @returns array of consent templates\n   */\n  fetchCdcConsentsForRegistration(): ConsentTemplate[] {\n    const consentList: ConsentTemplate[] = [];\n    const cdcActiveConsents: string[] =\n      this.cdcConsentManagementService.getCdcConsentIDs();\n    this.anonymousConsentsService.getTemplates().subscribe((templates) => {\n      if (templates && templates.length > 0) {\n        for (const template of templates) {\n          if (template.id && cdcActiveConsents.includes(template.id)) {\n            consentList.push(template);\n          }\n        }\n      }\n    });\n    return consentList;\n  }\n\n  /**\n   * generates a form array with form control for each consent\n   * @returns a form array\n   */\n  generateAdditionalConsentsFormControl(): UntypedFormArray {\n    const consentArray = this.fb.array([]);\n    const templates: ConsentTemplate[] = this.fetchCdcConsentsForRegistration();\n    for (const _template of templates) {\n      consentArray.push(new FormControl(false, [Validators.requiredTrue]));\n    }\n    return consentArray;\n  }\n\n  /**\n   * creates an array of active cdc consents and makes them mandatory to be provided during registration\n   * @returns consent templates in the necessary format for the component\n   */\n  getAdditionalConsents(): {\n    template: ConsentTemplate;\n    required: boolean;\n  }[] {\n    const templates: ConsentTemplate[] = this.fetchCdcConsentsForRegistration();\n    const returnConsents: {\n      template: ConsentTemplate;\n      required: boolean;\n    }[] = [];\n    for (const template of templates) {\n      const returnConsent: any = {};\n      returnConsent['template'] = template;\n      returnConsent['required'] = true; //these consents are always mandatory\n      returnConsents.push(returnConsent);\n    }\n    return returnConsents;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  NgSelectA11yModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { RegisterComponentService } from '@spartacus/user/profile/components';\nimport { CDCRegisterComponentService } from './cdc-register-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    SpinnerModule,\n    FormErrorsModule,\n    NgSelectModule,\n    NgSelectA11yModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        RegisterCustomerComponent: {\n          providers: [\n            {\n              provide: RegisterComponentService,\n              useClass: CDCRegisterComponentService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCRegisterModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cdc-register-component.service';\nexport * from './cdc-register.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CdcJsService } from '@spartacus/cdc/root';\nimport {\n  AuthConfigService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { ForgotPasswordComponentService } from '@spartacus/user/profile/components';\nimport { UserPasswordFacade } from '@spartacus/user/profile/root';\nimport { Subscription } from 'rxjs';\n\n@Injectable()\nexport class CDCForgotPasswordComponentService\n  extends ForgotPasswordComponentService\n  implements OnDestroy\n{\n  protected subscription = new Subscription();\n\n  constructor(\n    protected userPasswordService: UserPasswordFacade,\n    protected routingService: RoutingService,\n    protected authConfigService: AuthConfigService,\n    protected globalMessage: GlobalMessageService,\n    protected cdcJsService: CdcJsService\n  ) {\n    super(\n      userPasswordService,\n      routingService,\n      authConfigService,\n      globalMessage\n    );\n  }\n\n  /**\n   * Sends an email to through CDC SDK to reset the password.\n   */\n  requestEmail() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n\n    this.subscription.add(\n      this.cdcJsService.didLoad().subscribe((cdcLoaded) => {\n        if (cdcLoaded) {\n          // Reset password using CDC Gigya SDK\n          this.cdcJsService\n            .resetPasswordWithoutScreenSet(this.form.value.userEmail)\n            .subscribe({\n              next: (response) => {\n                this.busy$.next(false);\n                if (response.status === 'OK') {\n                  this.onSuccess();\n                }\n              },\n              error: () => this.busy$.next(false),\n            });\n        } else {\n          this.busy$.next(false);\n          // CDC Gigya SDK not loaded, show error to the user\n          this.globalMessage.add(\n            {\n              key: 'errorHandlers.scriptFailedToLoad',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n        }\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { FormErrorsModule, SpinnerModule } from '@spartacus/storefront';\nimport {\n  ForgotPasswordComponent,\n  ForgotPasswordComponentService,\n} from '@spartacus/user/profile/components';\nimport { CDCForgotPasswordComponentService } from './cdc-forgot-password-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    FormErrorsModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ForgotPasswordComponent: {\n          component: ForgotPasswordComponent,\n          providers: [\n            {\n              provide: ForgotPasswordComponentService,\n              useClass: CDCForgotPasswordComponentService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCForgotPasswordModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cdc-forgot-password-component.service';\nexport * from './cdc-forgot-password.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CdcJsService } from '@spartacus/cdc/root';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { UpdateEmailComponentService } from '@spartacus/user/profile/components';\nimport { UserEmailFacade } from '@spartacus/user/profile/root';\n\n@Injectable()\nexport class CDCUpdateEmailComponentService extends UpdateEmailComponentService {\n  constructor(\n    protected userEmail: UserEmailFacade,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService,\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected cdcJsService: CdcJsService\n  ) {\n    super(\n      userEmail,\n      routingService,\n      globalMessageService,\n      authService,\n      authRedirectService\n    );\n  }\n\n  save(): void {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n\n    const newEmail = this.form.get('confirmEmail')?.value;\n    const password = this.form.get('password')?.value;\n\n    this.cdcJsService\n      .updateUserEmailWithoutScreenSet(password, newEmail)\n      .subscribe({\n        next: () => this.onSuccess(newEmail),\n        error: (error: Error) => this.onError(error),\n      });\n  }\n\n  protected onError(_error: Error): void {\n    this.globalMessageService.remove(GlobalMessageType.MSG_TYPE_ERROR);\n    this.globalMessageService.add(\n      { key: 'httpHandlers.validationErrors.invalid.password' },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n    this.busy$.next(false);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  PasswordVisibilityToggleModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { UpdateEmailComponentService } from '@spartacus/user/profile/components';\nimport { CDCUpdateEmailComponentService } from './cdc-update-email-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    UrlModule,\n    RouterModule,\n    I18nModule,\n    FormErrorsModule,\n    PasswordVisibilityToggleModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateEmailComponent: {\n          providers: [\n            {\n              provide: UpdateEmailComponentService,\n              useClass: CDCUpdateEmailComponentService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCUpdateEmailModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CdcJsService } from '@spartacus/cdc/root';\nimport {\n  AuthRedirectService,\n  AuthService,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { UpdatePasswordComponentService } from '@spartacus/user/profile/components';\nimport { UserPasswordFacade } from '@spartacus/user/profile/root';\n\n@Injectable()\nexport class CDCUpdatePasswordComponentService extends UpdatePasswordComponentService {\n  constructor(\n    protected userPasswordService: UserPasswordFacade,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService,\n    protected authRedirectService: AuthRedirectService,\n    protected authService: AuthService,\n    protected cdcJsService: CdcJsService\n  ) {\n    super(\n      userPasswordService,\n      routingService,\n      globalMessageService,\n      authRedirectService,\n      authService\n    );\n  }\n\n  /**\n   * Updates the password for the user.\n   */\n  updatePassword(): void {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n\n    const oldPassword = this.form.get('oldPassword')?.value;\n    const newPassword = this.form.get('newPassword')?.value;\n\n    this.cdcJsService\n      .updateUserPasswordWithoutScreenSet(oldPassword, newPassword)\n      .subscribe({\n        next: () => this.onSuccess(),\n        error: (error) => this.onError(error),\n      });\n  }\n\n  protected onError(_error: any): void {\n    const errorMessage = _error?.errorDetails || ' ';\n    this.globalMessageService.add(\n      errorMessage,\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n    this.busy$.next(false);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  PasswordVisibilityToggleModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { UpdatePasswordComponentService } from '@spartacus/user/profile/components';\nimport { CDCUpdatePasswordComponentService } from './cdc-update-password-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n    UrlModule,\n    RouterModule,\n    PasswordVisibilityToggleModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdatePasswordComponent: {\n          providers: [\n            {\n              provide: UpdatePasswordComponentService,\n              useClass: CDCUpdatePasswordComponentService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCUpdatePasswordModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CdcJsService } from '@spartacus/cdc/root';\nimport { GlobalMessageService, GlobalMessageType } from '@spartacus/core';\nimport { UpdateProfileComponentService } from '@spartacus/user/profile/components';\nimport { UserProfileFacade } from '@spartacus/user/profile/root';\n\n@Injectable()\nexport class CDCUpdateProfileComponentService extends UpdateProfileComponentService {\n  constructor(\n    protected userProfile: UserProfileFacade,\n    protected globalMessageService: GlobalMessageService,\n    protected cdcJsService: CdcJsService\n  ) {\n    super(userProfile, globalMessageService);\n  }\n\n  /**\n   * Updates the user's details and handles the UI.\n   */\n  updateProfile(): void {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.busy$.next(true);\n\n    const formValue = this.form.value;\n    this.cdcJsService.updateProfileWithoutScreenSet(formValue).subscribe({\n      next: () => this.onSuccess(),\n      error: (error) => this.onError(error),\n    });\n  }\n\n  protected onError(_error: any): void {\n    const errorMessage = _error?.errorMessage || ' ';\n    this.globalMessageService.add(\n      errorMessage,\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n    this.busy$.next(false);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  NgSelectA11yModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { UpdateProfileComponentService } from '@spartacus/user/profile/components';\nimport { CDCUpdateProfileComponentService } from './cdc-update-profile-component.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    FormErrorsModule,\n    RouterModule,\n    UrlModule,\n    NgSelectModule,\n    NgSelectA11yModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        UpdateProfileComponent: {\n          providers: [\n            {\n              provide: UpdateProfileComponentService,\n              useClass: CDCUpdateProfileComponentService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class CDCUpdateProfileModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CDCForgotPasswordModule } from './forgot-password/cdc-forgot-password.module';\nimport { CDCRegisterModule } from './register/cdc-register.module';\nimport { CDCUpdateEmailModule } from './update-email/cdc-update-email.module';\nimport { CDCUpdatePasswordModule } from './update-password/cdc-update-password.module';\nimport { CDCUpdateProfileModule } from './update-profile/cdc-update-profile.module';\n\n@NgModule({\n  imports: [\n    CDCRegisterModule,\n    CDCForgotPasswordModule,\n    CDCUpdateProfileModule,\n    CDCUpdatePasswordModule,\n    CDCUpdateEmailModule,\n  ],\n})\nexport class CDCUserProfileModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './register/index';\nexport * from './forgot-password/index';\nexport * from './cdc-user-profile.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i4","i3"],"mappings":"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"}