export declare const en: {
    configurator: {
        configurator: {
            header: {
                consistent: string;
                complete: string;
                configId: string;
                toconfig: string;
                editConfiguration: string;
                displayConfiguration: string;
                resolveIssues: string;
                resolveIssue: string;
                resolveConflicts: string;
                conflictWarning: string;
                updateMessage: string;
                conflictsResolved: string;
                showMore: string;
                showLess: string;
                items: string;
                items_other: string;
                show: string;
                hide: string;
                multipleWarnings: string;
                reviewWarnings: string;
                multipleErrors: string;
                reviewErrors: string;
                kbKeyName: string;
                kbKeyLogsys: string;
                kbKeyVersion: string;
                kbKeyBuildNr: string;
            };
            tabBar: {
                configuration: string;
                overview: string;
            };
            notificationBanner: {
                numberOfIssues: string;
                numberOfIssues_other: string;
                numberOfConflicts: string;
                numberOfConflicts_other: string;
            };
            attribute: {
                id: string;
                quantity: string;
                caption: string;
                notSupported: string;
                requiredAttribute: string;
                defaultRequiredMessage: string;
                singleSelectRequiredMessage: string;
                singleSelectAdditionalRequiredMessage: string;
                multiSelectRequiredMessage: string;
                wrongNumericFormat: string;
                wrongNumericFormatMessage: string;
                wrongIntervalFormat: string;
                deselectionNotPossible: string;
                dropDownSelectMsg: string;
                noOptionSelectedMsg: string;
                notVisibleAttributeMsg: string;
            };
            button: {
                previous: string;
                next: string;
                back: string;
                more: string;
                less: string;
                deselect: string;
                select: string;
                add: string;
                remove: string;
                exit: string;
                exitMobile: string;
                cancelConfiguration: string;
                cancelConfigurationMobile: string;
                filterOverview: string;
                filterOverviewWithCount: string;
            };
            icon: {
                groupComplete: string;
                groupIncomplete: string;
                groupConflict: string;
                subgroup: string;
            };
            priceSummary: {
                basePrice: string;
                selectedOptions: string;
                totalPrice: string;
                totalPricePerItem: string;
            };
            addToCart: {
                button: string;
                buttonAfterAddToCart: string;
                buttonUpdateCart: string;
                buttonDisplayOnly: string;
                buttonClose: string;
                confirmation: string;
                confirmationUpdate: string;
                quantity: string;
            };
            overviewForm: {
                noAttributeHeader: string;
                noAttributeText: string;
                itemPrice: string;
            };
            overviewSidebar: {
                menu: string;
                filter: string;
            };
            overviewFilter: {
                title: string;
                byOption: string;
                byGroup: string;
                byPrice: string;
                mySelections: string;
                removeAll: string;
                removeAllFilters: string;
                removeByPrice: string;
                removeMySelections: string;
                removeByGroup: string;
            };
            group: {
                general: string;
                conflictHeader: string;
                conflictGroup: string;
            };
            conflict: {
                suggestionTitle: string;
                suggestionText: string;
                viewConflictDetails: string;
                conflictDetected: string;
                viewConfigurationDetails: string;
            };
            restartDialog: {
                title: string;
                description: string;
                restartButton: string;
                resumeButton: string;
            };
            a11y: {
                configureProduct: string;
                cartEntryBundleInfo: string;
                cartEntryBundleInfo_other: string;
                cartEntryBundleName: string;
                cartEntryBundleNameWithQuantity: string;
                cartEntryBundleNameWithPrice: string;
                cartEntryBundle: string;
                cartEntryInfoIntro: string;
                cartEntryInfo: string;
                nameOfAttribute: string;
                valueOfAttribute: string;
                forAttribute: string;
                valueOfAttributeFull: string;
                valueOfAttributeFullWithPrice: string;
                selectedValueOfAttributeFull: string;
                selectedValueOfAttributeFullWithPrice: string;
                readOnlyValueOfAttributeFullWithPrice: string;
                readOnlyValueOfAttributeFull: string;
                valueOfAttributeBlank: string;
                value: string;
                attribute: string;
                requiredAttribute: string;
                listOfAttributesAndValues: string;
                editAttributesAndValues: string;
                group: string;
                itemOfAttributeSelected: string;
                itemOfAttributeSelectedWithPrice: string;
                itemOfAttributeSelectedPressToUnselect: string;
                itemOfAttributeSelectedPressToUnselectWithPrice: string;
                itemOfAttributeUnselected: string;
                itemOfAttributeUnselectedWithPrice: string;
                selectNoItemOfAttribute: string;
                itemOfAttribute: string;
                itemOfAttributeFull: string;
                itemOfAttributeFullWithPrice: string;
                itemOfAttributeFullWithQuantity: string;
                itemOfAttributeFullWithPriceAndQuantity: string;
                itemDescription: string;
                listbox: string;
                valueSurcharge: string;
                conflictDetected: string;
                conflictsInConfiguration: string;
                listOfGroups: string;
                inListOfGroups: string;
                groupName: string;
                groupBack: string;
                conflictBack: string;
                iconConflict: string;
                iconIncomplete: string;
                iconComplete: string;
                iconSubGroup: string;
                next: string;
                previous: string;
                showMoreProductInfo: string;
                showLessProductInfo: string;
                productName: string;
                productCode: string;
                productDescription: string;
                kbKeyName: string;
                kbKeyLogsys: string;
                kbKeyVersion: string;
                kbKeyBuildNr: string;
                configurationPage: string;
                configurationPageLink: string;
                overviewPage: string;
                overviewPageLink: string;
                navigateToConflict: string;
                numericIntervalStandard: string;
                numericIntervalStandardOpen: string;
                numericIntervalStandardLowerEndpointNotIncluded: string;
                numericIntervalStandardUpperEndpointNotIncluded: string;
                numericInfiniteIntervalMinValueIncluded: string;
                numericInfiniteIntervalMinValue: string;
                numericInfiniteIntervalMaxValueIncluded: string;
                numericInfiniteIntervalMaxValue: string;
                numericIntervalSingleValue: string;
                combinedIntervalsText: string;
                additionalValue: string;
                addToCartPrices: string;
                filterOverview: string;
                filterOverviewWithCount: string;
                closeFilterMenu: string;
                filterOverviewByPrice: string;
                filterOverviewByMySelections: string;
                filterOverviewByGroup: string;
                closeConflictSolverModal: string;
                closeRestartDialog: string;
            };
            variantCarousel: {
                title: string;
            };
        };
    };
};
