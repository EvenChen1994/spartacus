/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 *
 * An interface representing the models used for the communication with the CPQ configurator
 */
export var Cpq;
(function (Cpq) {
    /**
     *
     * An enum representing possible displayAs value.
     */
    let DisplayAs;
    (function (DisplayAs) {
        DisplayAs[DisplayAs["RADIO_BUTTON"] = 1] = "RADIO_BUTTON";
        DisplayAs[DisplayAs["CHECK_BOX"] = 2] = "CHECK_BOX";
        DisplayAs[DisplayAs["DROPDOWN"] = 3] = "DROPDOWN";
        DisplayAs[DisplayAs["LIST_BOX"] = 4] = "LIST_BOX";
        DisplayAs[DisplayAs["LIST_BOX_MULTI"] = 5] = "LIST_BOX_MULTI";
        DisplayAs[DisplayAs["READ_ONLY"] = 71] = "READ_ONLY";
        DisplayAs[DisplayAs["INPUT"] = 95] = "INPUT";
        DisplayAs[DisplayAs["AUTO_COMPLETE_CUSTOM"] = 102] = "AUTO_COMPLETE_CUSTOM";
    })(DisplayAs = Cpq.DisplayAs || (Cpq.DisplayAs = {}));
    let DataType;
    (function (DataType) {
        DataType["INPUT_STRING"] = "String";
        DataType["INPUT_NUMBER"] = "Number";
        DataType["QTY_ATTRIBUTE_LEVEL"] = "Quantity";
        DataType["QTY_VALUE_LEVEL"] = "Attr.Quantity";
        DataType["N_A"] = "N/A";
    })(DataType = Cpq.DataType || (Cpq.DataType = {}));
})(Cpq || (Cpq = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3BxLm1vZGVscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY3BxL2NvbW1vbi9jcHEubW9kZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSDs7O0dBR0c7QUFDSCxNQUFNLEtBQVcsR0FBRyxDQWtKbkI7QUFsSkQsV0FBaUIsR0FBRztJQTRIbEI7OztPQUdHO0lBQ0gsSUFBWSxTQVNYO0lBVEQsV0FBWSxTQUFTO1FBQ25CLHlEQUFnQixDQUFBO1FBQ2hCLG1EQUFhLENBQUE7UUFDYixpREFBWSxDQUFBO1FBQ1osaURBQVksQ0FBQTtRQUNaLDZEQUFrQixDQUFBO1FBQ2xCLG9EQUFjLENBQUE7UUFDZCw0Q0FBVSxDQUFBO1FBQ1YsMkVBQTBCLENBQUE7SUFDNUIsQ0FBQyxFQVRXLFNBQVMsR0FBVCxhQUFTLEtBQVQsYUFBUyxRQVNwQjtJQUVELElBQVksUUFNWDtJQU5ELFdBQVksUUFBUTtRQUNsQixtQ0FBdUIsQ0FBQTtRQUN2QixtQ0FBdUIsQ0FBQTtRQUN2Qiw0Q0FBZ0MsQ0FBQTtRQUNoQyw2Q0FBaUMsQ0FBQTtRQUNqQyx1QkFBVyxDQUFBO0lBQ2IsQ0FBQyxFQU5XLFFBQVEsR0FBUixZQUFRLEtBQVIsWUFBUSxRQU1uQjtBQUNILENBQUMsRUFsSmdCLEdBQUcsS0FBSCxHQUFHLFFBa0puQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbi8qKlxuICpcbiAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIG1vZGVscyB1c2VkIGZvciB0aGUgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBDUFEgY29uZmlndXJhdG9yXG4gKi9cbmV4cG9ydCBuYW1lc3BhY2UgQ3BxIHtcbiAgLyoqXG4gICAqIFJlc3BvbnNlIG9mIGNyZWF0ZSBjb25maWd1cmF0aW9uIHJlcXVlc3RzXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb25DcmVhdGVkUmVzcG9uc2VEYXRhIHtcbiAgICAvKipcbiAgICAgKiBDUFEgY29uZmlndXJhdGlvbiBJRCBvZiB0aGUgbmV3bHkgY3JlYXRlZCBjb25maWd1cmF0aW9uXG4gICAgICovXG4gICAgY29uZmlndXJhdGlvbklkOiBzdHJpbmc7XG4gIH1cblxuICAvKipcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgQ1BRIGNvbmZpZ3VyYXRpb24uXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIENvbmZpZ3VyYXRpb24ge1xuICAgIHByb2R1Y3RTeXN0ZW1JZDogc3RyaW5nO1xuICAgIHByb2R1Y3ROYW1lPzogc3RyaW5nO1xuICAgIGNvbXBsZXRlZD86IGJvb2xlYW47XG4gICAgaW5jb21wbGV0ZU1lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgaW5jb21wbGV0ZUF0dHJpYnV0ZXM/OiBzdHJpbmdbXTtcbiAgICBpbnZhbGlkTWVzc2FnZXM/OiBzdHJpbmdbXTtcbiAgICBmYWlsZWRWYWxpZGF0aW9ucz86IHN0cmluZ1tdO1xuICAgIGVycm9yTWVzc2FnZXM/OiBzdHJpbmdbXTtcbiAgICBjb25mbGljdE1lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgbnVtYmVyT2ZDb25mbGljdHM/OiBudW1iZXI7XG4gICAgY3VycmVuY3lJU09Db2RlOiBzdHJpbmc7XG4gICAgY3VycmVuY3lTaWduPzogc3RyaW5nO1xuICAgIHJlc3BvbmRlcj86IENwcS5SZXNwb25kZXI7XG4gICAgdGFicz86IFRhYltdO1xuICAgIGF0dHJpYnV0ZXM/OiBBdHRyaWJ1dGVbXTsgLy8gYXR0cmlidXRlcyBvZiBjdXJyZW50IHNlbGVjdGVkIHRhYlxuICAgIGNvbmZpZ3VyYXRpb25JZD86IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIHRoZSBDUFEgY29uZmlndXJhdGlvbiByZXNwb25kZXIuXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIFJlc3BvbmRlciB7XG4gICAgdG90YWxQcmljZT86IHN0cmluZztcbiAgICBiYXNlUHJvZHVjdFByaWNlPzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIENQUSBjb25maWd1cmF0aW9uIHRhYi5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgVGFiIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU/OiBzdHJpbmc7XG4gICAgZGlzcGxheU5hbWU/OiBzdHJpbmc7XG4gICAgaXNJbmNvbXBsZXRlPzogYm9vbGVhbjtcbiAgICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgICBhdHRyaWJ1dGVzPzogQXR0cmlidXRlW107IC8vIHVzZWQgZm9yIG92ZXJ2aWV3IC0gaGFzIHRvIGJlIHBvcHVsYXRlZCBleHBsaWNpdGx5XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBBdHRyaWJ1dGUge1xuICAgIHBBX0lEOiBudW1iZXI7XG4gICAgc3RkQXR0ckNvZGU6IG51bWJlcjtcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGRpc3BsYXlBcz86IG51bWJlcjtcbiAgICBkYXRhVHlwZT86IENwcS5EYXRhVHlwZTtcbiAgICByZXF1aXJlZD86IGJvb2xlYW47XG4gICAgaW5jb21wbGV0ZT86IGJvb2xlYW47XG4gICAgaXNFbmFibGVkPzogYm9vbGVhbjtcbiAgICBpc0xpbmVJdGVtPzogYm9vbGVhbjtcbiAgICBoYXNDb25mbGljdD86IGJvb2xlYW47XG4gICAgdXNlcklucHV0Pzogc3RyaW5nO1xuICAgIHF1YW50aXR5Pzogc3RyaW5nO1xuICAgIHZhbHVlcz86IFZhbHVlW107XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlIHZhbHVlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBWYWx1ZSB7XG4gICAgcGFWX0lEOiBudW1iZXI7XG4gICAgdmFsdWVDb2RlPzogc3RyaW5nO1xuICAgIHZhbHVlRGlzcGxheT86IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgICBwcm9kdWN0U3lzdGVtSWQ/OiBzdHJpbmc7XG4gICAgc2VsZWN0ZWQ/OiBib29sZWFuO1xuICAgIHByaWNlPzogc3RyaW5nO1xuICAgIHF1YW50aXR5Pzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIHN0cnVjdHVyZSBmb3IgdXBkYXRlIG9mIENQUSBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZS5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgVXBkYXRlQXR0cmlidXRlIHtcbiAgICBjb25maWd1cmF0aW9uSWQ6IHN0cmluZztcbiAgICBzdGFuZGFyZEF0dHJpYnV0ZUNvZGU6IHN0cmluZztcbiAgICBjaGFuZ2VBdHRyaWJ1dGVWYWx1ZTogQ2hhbmdlQXR0cmlidXRlVmFsdWU7XG4gICAgdGFiSWQ6IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIHRoZSB1cGRhdGUgcmVxdWVzdCBib2R5IHN0cnVjdHVyZSBmb3IgdXBkYXRlIG9mIENQUSBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZS5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgQ2hhbmdlQXR0cmlidXRlVmFsdWUge1xuICAgIGF0dHJpYnV0ZVZhbHVlSWRzPzogc3RyaW5nO1xuICAgIHVzZXJJbnB1dD86IHN0cmluZztcbiAgICBxdWFudGl0eT86IG51bWJlcjtcbiAgfVxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgc3RydWN0dXJlIGZvciB1cGRhdGUgcXVhbnRpdHkgb2YgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlIHZhbHVlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBVcGRhdGVWYWx1ZSB7XG4gICAgY29uZmlndXJhdGlvbklkOiBzdHJpbmc7XG4gICAgc3RhbmRhcmRBdHRyaWJ1dGVDb2RlOiBzdHJpbmc7XG4gICAgYXR0cmlidXRlVmFsdWVJZDogc3RyaW5nO1xuICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgdGFiSWQ6IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBlbnVtIHJlcHJlc2VudGluZyBwb3NzaWJsZSBkaXNwbGF5QXMgdmFsdWUuXG4gICAqL1xuICBleHBvcnQgZW51bSBEaXNwbGF5QXMge1xuICAgIFJBRElPX0JVVFRPTiA9IDEsXG4gICAgQ0hFQ0tfQk9YID0gMixcbiAgICBEUk9QRE9XTiA9IDMsXG4gICAgTElTVF9CT1ggPSA0LFxuICAgIExJU1RfQk9YX01VTFRJID0gNSxcbiAgICBSRUFEX09OTFkgPSA3MSxcbiAgICBJTlBVVCA9IDk1LFxuICAgIEFVVE9fQ09NUExFVEVfQ1VTVE9NID0gMTAyLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gRGF0YVR5cGUge1xuICAgIElOUFVUX1NUUklORyA9ICdTdHJpbmcnLFxuICAgIElOUFVUX05VTUJFUiA9ICdOdW1iZXInLFxuICAgIFFUWV9BVFRSSUJVVEVfTEVWRUwgPSAnUXVhbnRpdHknLFxuICAgIFFUWV9WQUxVRV9MRVZFTCA9ICdBdHRyLlF1YW50aXR5JyxcbiAgICBOX0EgPSAnTi9BJyxcbiAgfVxufVxuIl19