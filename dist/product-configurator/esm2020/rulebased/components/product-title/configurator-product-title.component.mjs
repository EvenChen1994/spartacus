/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';
import { CommonConfigurator, } from '@spartacus/product-configurator/common';
import { ICON_TYPE } from '@spartacus/storefront';
import { EMPTY } from 'rxjs';
import { map, switchMap, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "@spartacus/product-configurator/common";
import * as i3 from "@spartacus/core";
import * as i4 from "../../core/services/configurator-expert-mode.service";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/storefront";
export class ConfiguratorProductTitleComponent {
    constructor(configuratorCommonsService, configRouterExtractorService, productService, configExpertModeService) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.productService = productService;
        this.configExpertModeService = configExpertModeService;
        this.ghostStyle = true;
        this.configuration$ = this.configRouterExtractorService.extractRouterData().pipe(switchMap((routerData) => {
            return this.configuratorCommonsService.getConfiguration(routerData.owner);
        }));
        this.product$ = this.configuration$
            .pipe(map((configuration) => {
            switch (configuration.owner.type) {
                case CommonConfigurator.OwnerType.PRODUCT:
                case CommonConfigurator.OwnerType.CART_ENTRY:
                    return configuration.productCode;
                case CommonConfigurator.OwnerType.ORDER_ENTRY:
                    return configuration.overview?.productCode;
            }
        }), switchMap((productCode) => productCode
            ? this.productService.get(productCode, "list" /* ProductScope.LIST */)
            : EMPTY))
            .pipe(tap(() => {
            this.ghostStyle = false;
        }));
        this.showMore = false;
        this.iconTypes = ICON_TYPE;
    }
    triggerDetails() {
        this.showMore = !this.showMore;
    }
    get expMode() {
        return this.configExpertModeService.getExpModeActive();
    }
}
ConfiguratorProductTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorProductTitleComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorRouterExtractorService }, { token: i3.ProductService }, { token: i4.ConfiguratorExpertModeService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorProductTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ConfiguratorProductTitleComponent, selector: "cx-configurator-product-title", host: { properties: { "class.ghost": "this.ghostStyle" } }, ngImport: i0, template: "<ng-container *ngIf=\"product$ | async as product; else ghostProductTitle\">\n  <div class=\"cx-general-product-info\">\n    <div class=\"cx-title\">\n      <span> {{ product.name }} </span>\n    </div>\n    <button (click)=\"triggerDetails()\" [attr.aria-expanded]=\"showMore\">\n      <ng-container *ngIf=\"!showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showMoreProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          <span aria-hidden=\"true\">{{\n            'configurator.header.showMore' | cxTranslate\n          }}</span>\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_DOWN\"></cx-icon>\n      </ng-container>\n\n      <ng-container *ngIf=\"showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showLessProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          {{ 'configurator.header.showLess' | cxTranslate }}\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_UP\"></cx-icon>\n      </ng-container>\n    </button>\n    <div class=\"cx-details\" [class.open]=\"showMore\">\n      <div class=\"cx-details-image\" aria-hidden=\"true\">\n        <cx-media\n          [container]=\"product?.images?.PRIMARY\"\n          format=\"product\"\n        ></cx-media>\n      </div>\n      <div\n        class=\"cx-details-content\"\n        [attr.aria-hidden]=\"showMore ? false : true\"\n      >\n        <div class=\"cx-detail-title\">\n          <span\n            *ngIf=\"product.name\"\n            [attr.aria-label]=\"'configurator.a11y.productName' | cxTranslate\"\n          >\n            {{ product.name }}\n          </span>\n        </div>\n        <div class=\"cx-code\">\n          <span\n            *ngIf=\"product.code\"\n            [attr.aria-label]=\"'configurator.a11y.productCode' | cxTranslate\"\n          >\n            {{ product.code }}\n          </span>\n        </div>\n        <div class=\"cx-description\">\n          <span\n            *ngIf=\"product.description\"\n            [attr.aria-label]=\"\n              'configurator.a11y.productDescription' | cxTranslate\n            \"\n          >\n            {{ product.description }}\n          </span>\n        </div>\n\n        <ng-container *ngIf=\"expMode | async\">\n          <ng-container *ngIf=\"configuration$ | async as configuration\">\n            <ng-container *ngIf=\"configuration.kbKey\">\n              <div class=\"cx-kb-key-details\">\n                <ng-container *ngIf=\"configuration.kbKey.kbName\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyName'\n                          | cxTranslate: { name: configuration.kbKey.kbName }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyName' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbName }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbLogsys\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyLogsys'\n                          | cxTranslate\n                            : { logsys: configuration.kbKey.kbLogsys }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyLogsys' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbLogsys }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbVersion\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyVersion'\n                          | cxTranslate\n                            : { version: configuration.kbKey.kbVersion }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyVersion' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbVersion }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbBuildNumber\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyBuildNr'\n                          | cxTranslate\n                            : { number: configuration.kbKey.kbBuildNumber }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyBuildNr' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbBuildNumber }}\n                    </span>\n                  </div>\n                </ng-container>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #ghostProductTitle>\n  <div class=\"cx-ghost-general-product-info\"></div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i6.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "component", type: i6.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorProductTitleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-product-title', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"product$ | async as product; else ghostProductTitle\">\n  <div class=\"cx-general-product-info\">\n    <div class=\"cx-title\">\n      <span> {{ product.name }} </span>\n    </div>\n    <button (click)=\"triggerDetails()\" [attr.aria-expanded]=\"showMore\">\n      <ng-container *ngIf=\"!showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showMoreProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          <span aria-hidden=\"true\">{{\n            'configurator.header.showMore' | cxTranslate\n          }}</span>\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_DOWN\"></cx-icon>\n      </ng-container>\n\n      <ng-container *ngIf=\"showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showLessProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          {{ 'configurator.header.showLess' | cxTranslate }}\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_UP\"></cx-icon>\n      </ng-container>\n    </button>\n    <div class=\"cx-details\" [class.open]=\"showMore\">\n      <div class=\"cx-details-image\" aria-hidden=\"true\">\n        <cx-media\n          [container]=\"product?.images?.PRIMARY\"\n          format=\"product\"\n        ></cx-media>\n      </div>\n      <div\n        class=\"cx-details-content\"\n        [attr.aria-hidden]=\"showMore ? false : true\"\n      >\n        <div class=\"cx-detail-title\">\n          <span\n            *ngIf=\"product.name\"\n            [attr.aria-label]=\"'configurator.a11y.productName' | cxTranslate\"\n          >\n            {{ product.name }}\n          </span>\n        </div>\n        <div class=\"cx-code\">\n          <span\n            *ngIf=\"product.code\"\n            [attr.aria-label]=\"'configurator.a11y.productCode' | cxTranslate\"\n          >\n            {{ product.code }}\n          </span>\n        </div>\n        <div class=\"cx-description\">\n          <span\n            *ngIf=\"product.description\"\n            [attr.aria-label]=\"\n              'configurator.a11y.productDescription' | cxTranslate\n            \"\n          >\n            {{ product.description }}\n          </span>\n        </div>\n\n        <ng-container *ngIf=\"expMode | async\">\n          <ng-container *ngIf=\"configuration$ | async as configuration\">\n            <ng-container *ngIf=\"configuration.kbKey\">\n              <div class=\"cx-kb-key-details\">\n                <ng-container *ngIf=\"configuration.kbKey.kbName\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyName'\n                          | cxTranslate: { name: configuration.kbKey.kbName }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyName' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbName }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbLogsys\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyLogsys'\n                          | cxTranslate\n                            : { logsys: configuration.kbKey.kbLogsys }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyLogsys' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbLogsys }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbVersion\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyVersion'\n                          | cxTranslate\n                            : { version: configuration.kbKey.kbVersion }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyVersion' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbVersion }}\n                    </span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"configuration.kbKey.kbBuildNumber\">\n                  <div class=\"cx-kb-pair\">\n                    <span\n                      class=\"cx-label\"\n                      [attr.aria-label]=\"\n                        'configurator.a11y.kbKeyBuildNr'\n                          | cxTranslate\n                            : { number: configuration.kbKey.kbBuildNumber }\n                      \"\n                    >\n                      {{ 'configurator.header.kbKeyBuildNr' | cxTranslate }}\n                    </span>\n                    <span class=\"cx-value\">\n                      {{ configuration.kbKey.kbBuildNumber }}\n                    </span>\n                  </div>\n                </ng-container>\n              </div>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #ghostProductTitle>\n  <div class=\"cx-ghost-general-product-info\"></div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorRouterExtractorService }, { type: i3.ProductService }, { type: i4.ConfiguratorExpertModeService }]; }, propDecorators: { ghostStyle: [{
                type: HostBinding,
                args: ['class.ghost']
            }] } });
//# sourceMappingURL=data:application/json;base64,