/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Optional, } from '@angular/core';
import { UntypedFormControl } from '@angular/forms';
import { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../quantity/configurator-attribute-quantity.service";
import * as i2 from "@spartacus/core";
import * as i3 from "../../composition/configurator-attribute-composition.model";
import * as i4 from "../../../../core/facade/configurator-commons.service";
import * as i5 from "../../../service/configurator-storefront-utils.service";
import * as i6 from "@angular/common";
import * as i7 from "../../quantity/configurator-attribute-quantity.component";
import * as i8 from "@angular/forms";
import * as i9 from "@spartacus/storefront";
import * as i10 from "../../../price/configurator-price.component";
import * as i11 from "../numeric-input-field/configurator-attribute-numeric-input-field.component";
import * as i12 from "../input-field/configurator-attribute-input-field.component";
export class ConfiguratorAttributeDropDownComponent extends ConfiguratorAttributeSingleSelectionBaseComponent {
    constructor(quantityService, translation, attributeComponentContext, configuratorCommonsService, configuratorStorefrontUtilsService) {
        super(quantityService, translation, attributeComponentContext, configuratorCommonsService, configuratorStorefrontUtilsService);
        this.quantityService = quantityService;
        this.translation = translation;
        this.attributeComponentContext = attributeComponentContext;
        this.configuratorCommonsService = configuratorCommonsService;
        this.configuratorStorefrontUtilsService = configuratorStorefrontUtilsService;
        this.attributeDropDownForm = new UntypedFormControl('');
        this.group = attributeComponentContext.group.id;
    }
    ngOnInit() {
        this.attributeDropDownForm.setValue(this.attribute.selectedSingleValue);
    }
    getSelectedValue() {
        return this.attribute.values?.find((value) => value?.selected);
    }
}
ConfiguratorAttributeDropDownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorAttributeDropDownComponent, deps: [{ token: i1.ConfiguratorAttributeQuantityService }, { token: i2.TranslationService }, { token: i3.ConfiguratorAttributeCompositionContext }, { token: i4.ConfiguratorCommonsService }, { token: i5.ConfiguratorStorefrontUtilsService, optional: true }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorAttributeDropDownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ConfiguratorAttributeDropDownComponent, selector: "cx-configurator-attribute-drop-down", usesInheritance: true, ngImport: i0, template: "<div\n  class=\"form-group\"\n  *ngIf=\"attribute.values && attribute.values.length !== 0\"\n>\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values.length\n            }\n    }}\n  </label>\n  <ng-container *cxFeatureLevel=\"'!6.2'\">\n    <select\n      id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      class=\"form-control\"\n      [formControl]=\"attributeDropDownForm\"\n      [cxFocus]=\"{ key: attribute.name }\"\n      (change)=\"onSelect(attributeDropDownForm.value)\"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    >\n      <option\n        *ngFor=\"let item of attribute.values\"\n        [selected]=\"item.selected\"\n        [label]=\"getLabel(expMode, item.valueDisplay, item.valueCode, item)\"\n        [attr.aria-label]=\"getAriaLabel(item, attribute)\"\n        [value]=\"item.valueCode\"\n      >\n        {{ getLabel(expMode, item.valueDisplay, item.valueCode, item) }}\n      </option>\n    </select>\n  </ng-container>\n  <ng-container *cxFeatureLevel=\"'6.2'\">\n    <select\n      id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      class=\"form-control\"\n      [ngClass]=\"{\n        'cx-required-error-msg ': (showRequiredErrorMessage$ | async)\n      }\"\n      [formControl]=\"attributeDropDownForm\"\n      [cxFocus]=\"{ key: attribute.name }\"\n      (change)=\"onSelect(attributeDropDownForm.value)\"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    >\n      <option\n        *ngFor=\"let item of attribute.values\"\n        [selected]=\"item.selected\"\n        [label]=\"getLabel(expMode, item.valueDisplay, item.valueCode, item)\"\n        [attr.aria-label]=\"getAriaLabel(item, attribute)\"\n        [value]=\"item.valueCode\"\n      >\n        {{ getLabel(expMode, item.valueDisplay, item.valueCode, item) }}\n      </option>\n    </select>\n  </ng-container>\n\n  <div\n    *ngIf=\"!withQuantity && getSelectedValue()?.valuePrice\"\n    class=\"cx-value-price\"\n  >\n    <cx-configurator-price\n      [formula]=\"extractValuePriceFormulaParameters(getSelectedValue())\"\n    ></cx-configurator-price>\n  </div>\n</div>\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n\n<cx-configurator-attribute-numeric-input-field\n  *ngIf=\"isAdditionalValueNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n></cx-configurator-attribute-numeric-input-field>\n\n<cx-configurator-attribute-input-field\n  *ngIf=\"isAdditionalValueAlphaNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n>\n</cx-configurator-attribute-input-field>\n", dependencies: [{ kind: "directive", type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i7.ConfiguratorAttributeQuantityComponent, selector: "cx-configurator-attribute-quantity", inputs: ["quantityOptions"], outputs: ["changeQuantity"] }, { kind: "directive", type: i8.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i8.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i8.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i9.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i8.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i10.ConfiguratorPriceComponent, selector: "cx-configurator-price", inputs: ["formula"] }, { kind: "component", type: i11.ConfiguratorAttributeNumericInputFieldComponent, selector: "cx-configurator-attribute-numeric-input-field" }, { kind: "component", type: i12.ConfiguratorAttributeInputFieldComponent, selector: "cx-configurator-attribute-input-field" }, { kind: "directive", type: i2.FeatureLevelDirective, selector: "[cxFeatureLevel]", inputs: ["cxFeatureLevel"] }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorAttributeDropDownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-attribute-drop-down', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  class=\"form-group\"\n  *ngIf=\"attribute.values && attribute.values.length !== 0\"\n>\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values.length\n            }\n    }}\n  </label>\n  <ng-container *cxFeatureLevel=\"'!6.2'\">\n    <select\n      id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      class=\"form-control\"\n      [formControl]=\"attributeDropDownForm\"\n      [cxFocus]=\"{ key: attribute.name }\"\n      (change)=\"onSelect(attributeDropDownForm.value)\"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    >\n      <option\n        *ngFor=\"let item of attribute.values\"\n        [selected]=\"item.selected\"\n        [label]=\"getLabel(expMode, item.valueDisplay, item.valueCode, item)\"\n        [attr.aria-label]=\"getAriaLabel(item, attribute)\"\n        [value]=\"item.valueCode\"\n      >\n        {{ getLabel(expMode, item.valueDisplay, item.valueCode, item) }}\n      </option>\n    </select>\n  </ng-container>\n  <ng-container *cxFeatureLevel=\"'6.2'\">\n    <select\n      id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      class=\"form-control\"\n      [ngClass]=\"{\n        'cx-required-error-msg ': (showRequiredErrorMessage$ | async)\n      }\"\n      [formControl]=\"attributeDropDownForm\"\n      [cxFocus]=\"{ key: attribute.name }\"\n      (change)=\"onSelect(attributeDropDownForm.value)\"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    >\n      <option\n        *ngFor=\"let item of attribute.values\"\n        [selected]=\"item.selected\"\n        [label]=\"getLabel(expMode, item.valueDisplay, item.valueCode, item)\"\n        [attr.aria-label]=\"getAriaLabel(item, attribute)\"\n        [value]=\"item.valueCode\"\n      >\n        {{ getLabel(expMode, item.valueDisplay, item.valueCode, item) }}\n      </option>\n    </select>\n  </ng-container>\n\n  <div\n    *ngIf=\"!withQuantity && getSelectedValue()?.valuePrice\"\n    class=\"cx-value-price\"\n  >\n    <cx-configurator-price\n      [formula]=\"extractValuePriceFormulaParameters(getSelectedValue())\"\n    ></cx-configurator-price>\n  </div>\n</div>\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n\n<cx-configurator-attribute-numeric-input-field\n  *ngIf=\"isAdditionalValueNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n></cx-configurator-attribute-numeric-input-field>\n\n<cx-configurator-attribute-input-field\n  *ngIf=\"isAdditionalValueAlphaNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n>\n</cx-configurator-attribute-input-field>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorAttributeQuantityService }, { type: i2.TranslationService }, { type: i3.ConfiguratorAttributeCompositionContext }, { type: i4.ConfiguratorCommonsService }, { type: i5.ConfiguratorStorefrontUtilsService, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1kcm9wLWRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9kcm9wLWRvd24vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1kcm9wLWRvd24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9kcm9wLWRvd24vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1kcm9wLWRvd24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUVULFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUt2QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUlwRCxPQUFPLEVBQUUsaURBQWlELEVBQUUsTUFBTSxnRUFBZ0UsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7QUFRbkksTUFBTSxPQUFPLHNDQUNYLFNBQVEsaURBQWlEO0lBMEJ6RCxZQUNZLGVBQXFELEVBQ3JELFdBQStCLEVBQy9CLHlCQUFrRSxFQUNsRSwwQkFBc0QsRUFFdEQsa0NBQXVFO1FBRWpGLEtBQUssQ0FDSCxlQUFlLEVBQ2YsV0FBVyxFQUNYLHlCQUF5QixFQUN6QiwwQkFBMEIsRUFDMUIsa0NBQWtDLENBQ25DLENBQUM7UUFiUSxvQkFBZSxHQUFmLGVBQWUsQ0FBc0M7UUFDckQsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO1FBQy9CLDhCQUF5QixHQUF6Qix5QkFBeUIsQ0FBeUM7UUFDbEUsK0JBQTBCLEdBQTFCLDBCQUEwQixDQUE0QjtRQUV0RCx1Q0FBa0MsR0FBbEMsa0NBQWtDLENBQXFDO1FBN0JuRiwwQkFBcUIsR0FBRyxJQUFJLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBdUNqRCxJQUFJLENBQUMsS0FBSyxHQUFHLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7SUFDbEQsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRUQsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNqRSxDQUFDOzttSUFwRFUsc0NBQXNDO3VIQUF0QyxzQ0FBc0Msa0dDNUJuRCwydEdBMkZBOzJGRC9EYSxzQ0FBc0M7a0JBTGxELFNBQVM7K0JBQ0UscUNBQXFDLG1CQUU5Qix1QkFBdUIsQ0FBQyxNQUFNOzswQkFrQzVDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIE9wdGlvbmFsLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9jb3JlL2ZhY2FkZS9jb25maWd1cmF0b3ItY29tbW9ucy5zZXJ2aWNlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvciB9IGZyb20gJy4uLy4uLy4uLy4uL2NvcmUvbW9kZWwvY29uZmlndXJhdG9yLm1vZGVsJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvckF0dHJpYnV0ZUNvbXBvc2l0aW9uQ29udGV4dCB9IGZyb20gJy4uLy4uL2NvbXBvc2l0aW9uL2NvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtY29tcG9zaXRpb24ubW9kZWwnO1xuaW1wb3J0IHsgVW50eXBlZEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcblxuaW1wb3J0IHsgQ29uZmlndXJhdG9yQXR0cmlidXRlUXVhbnRpdHlTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vcXVhbnRpdHkvY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1xdWFudGl0eS5zZXJ2aWNlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvckF0dHJpYnV0ZVNpbmdsZVNlbGVjdGlvbkJhc2VDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlL2NvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtc2luZ2xlLXNlbGVjdGlvbi1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0b3JTdG9yZWZyb250VXRpbHNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZS9jb25maWd1cmF0b3Itc3RvcmVmcm9udC11dGlscy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1kcm9wLWRvd24nLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1kcm9wLWRvd24uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdG9yQXR0cmlidXRlRHJvcERvd25Db21wb25lbnRcbiAgZXh0ZW5kcyBDb25maWd1cmF0b3JBdHRyaWJ1dGVTaW5nbGVTZWxlY3Rpb25CYXNlQ29tcG9uZW50XG4gIGltcGxlbWVudHMgT25Jbml0XG57XG4gIGF0dHJpYnV0ZURyb3BEb3duRm9ybSA9IG5ldyBVbnR5cGVkRm9ybUNvbnRyb2woJycpO1xuICBncm91cDogc3RyaW5nO1xuXG4gIC8vIFRPRE8gKENYU1BBLTMzOTIpOiBtYWtlIENvbmZpZ3VyYXRvclN0b3JlZnJvbnRVdGlsc1NlcnZpY2UgYSByZXF1aXJlZCBkZXBlbmRlbmN5XG4gIGNvbnN0cnVjdG9yKFxuICAgIHF1YW50aXR5U2VydmljZTogQ29uZmlndXJhdG9yQXR0cmlidXRlUXVhbnRpdHlTZXJ2aWNlLFxuICAgIHRyYW5zbGF0aW9uOiBUcmFuc2xhdGlvblNlcnZpY2UsXG4gICAgYXR0cmlidXRlQ29tcG9uZW50Q29udGV4dDogQ29uZmlndXJhdG9yQXR0cmlidXRlQ29tcG9zaXRpb25Db250ZXh0LFxuICAgIGNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlOiBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuaWZpZWQtc2lnbmF0dXJlc1xuICAgIGNvbmZpZ3VyYXRvclN0b3JlZnJvbnRVdGlsc1NlcnZpY2U6IENvbmZpZ3VyYXRvclN0b3JlZnJvbnRVdGlsc1NlcnZpY2VcbiAgKTtcblxuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgc2luY2UgNi4yXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBxdWFudGl0eVNlcnZpY2U6IENvbmZpZ3VyYXRvckF0dHJpYnV0ZVF1YW50aXR5U2VydmljZSxcbiAgICB0cmFuc2xhdGlvbjogVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgIGF0dHJpYnV0ZUNvbXBvbmVudENvbnRleHQ6IENvbmZpZ3VyYXRvckF0dHJpYnV0ZUNvbXBvc2l0aW9uQ29udGV4dCxcbiAgICBjb25maWd1cmF0b3JDb21tb25zU2VydmljZTogQ29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2VcbiAgKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgcXVhbnRpdHlTZXJ2aWNlOiBDb25maWd1cmF0b3JBdHRyaWJ1dGVRdWFudGl0eVNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHRyYW5zbGF0aW9uOiBUcmFuc2xhdGlvblNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGF0dHJpYnV0ZUNvbXBvbmVudENvbnRleHQ6IENvbmZpZ3VyYXRvckF0dHJpYnV0ZUNvbXBvc2l0aW9uQ29udGV4dCxcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2U6IENvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlLFxuICAgIEBPcHRpb25hbCgpXG4gICAgcHJvdGVjdGVkIGNvbmZpZ3VyYXRvclN0b3JlZnJvbnRVdGlsc1NlcnZpY2U/OiBDb25maWd1cmF0b3JTdG9yZWZyb250VXRpbHNTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKFxuICAgICAgcXVhbnRpdHlTZXJ2aWNlLFxuICAgICAgdHJhbnNsYXRpb24sXG4gICAgICBhdHRyaWJ1dGVDb21wb25lbnRDb250ZXh0LFxuICAgICAgY29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UsXG4gICAgICBjb25maWd1cmF0b3JTdG9yZWZyb250VXRpbHNTZXJ2aWNlXG4gICAgKTtcblxuICAgIHRoaXMuZ3JvdXAgPSBhdHRyaWJ1dGVDb21wb25lbnRDb250ZXh0Lmdyb3VwLmlkO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5hdHRyaWJ1dGVEcm9wRG93bkZvcm0uc2V0VmFsdWUodGhpcy5hdHRyaWJ1dGUuc2VsZWN0ZWRTaW5nbGVWYWx1ZSk7XG4gIH1cblxuICBnZXRTZWxlY3RlZFZhbHVlKCk6IENvbmZpZ3VyYXRvci5WYWx1ZSB8IHVuZGVmaW5lZCB7XG4gICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlLnZhbHVlcz8uZmluZCgodmFsdWUpID0+IHZhbHVlPy5zZWxlY3RlZCk7XG4gIH1cbn1cbiIsIjxkaXZcbiAgY2xhc3M9XCJmb3JtLWdyb3VwXCJcbiAgKm5nSWY9XCJhdHRyaWJ1dGUudmFsdWVzICYmIGF0dHJpYnV0ZS52YWx1ZXMubGVuZ3RoICE9PSAwXCJcbj5cbiAgPGxhYmVsXG4gICAgZm9yPVwie3sgY3JlYXRlQXR0cmlidXRlSWRGb3JDb25maWd1cmF0b3IoYXR0cmlidXRlKSB9fVwiXG4gICAgY2xhc3M9XCJjeC12aXN1YWxseS1oaWRkZW5cIlxuICA+XG4gICAge3tcbiAgICAgICdjb25maWd1cmF0b3IuYTExeS5saXN0Ym94J1xuICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgOiB7XG4gICAgICAgICAgICAgIGNvdW50OiBhdHRyaWJ1dGUudmFsdWVzLmxlbmd0aFxuICAgICAgICAgICAgfVxuICAgIH19XG4gIDwvbGFiZWw+XG4gIDxuZy1jb250YWluZXIgKmN4RmVhdHVyZUxldmVsPVwiJyE2LjInXCI+XG4gICAgPHNlbGVjdFxuICAgICAgaWQ9XCJ7eyBjcmVhdGVBdHRyaWJ1dGVJZEZvckNvbmZpZ3VyYXRvcihhdHRyaWJ1dGUpIH19XCJcbiAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgIFtmb3JtQ29udHJvbF09XCJhdHRyaWJ1dGVEcm9wRG93bkZvcm1cIlxuICAgICAgW2N4Rm9jdXNdPVwieyBrZXk6IGF0dHJpYnV0ZS5uYW1lIH1cIlxuICAgICAgKGNoYW5nZSk9XCJvblNlbGVjdChhdHRyaWJ1dGVEcm9wRG93bkZvcm0udmFsdWUpXCJcbiAgICAgIFthdHRyLmFyaWEtZGVzY3JpYmVkYnldPVwiY3JlYXRlQXR0cmlidXRlVWlLZXkoJ2xhYmVsJywgYXR0cmlidXRlLm5hbWUpXCJcbiAgICA+XG4gICAgICA8b3B0aW9uXG4gICAgICAgICpuZ0Zvcj1cImxldCBpdGVtIG9mIGF0dHJpYnV0ZS52YWx1ZXNcIlxuICAgICAgICBbc2VsZWN0ZWRdPVwiaXRlbS5zZWxlY3RlZFwiXG4gICAgICAgIFtsYWJlbF09XCJnZXRMYWJlbChleHBNb2RlLCBpdGVtLnZhbHVlRGlzcGxheSwgaXRlbS52YWx1ZUNvZGUsIGl0ZW0pXCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJnZXRBcmlhTGFiZWwoaXRlbSwgYXR0cmlidXRlKVwiXG4gICAgICAgIFt2YWx1ZV09XCJpdGVtLnZhbHVlQ29kZVwiXG4gICAgICA+XG4gICAgICAgIHt7IGdldExhYmVsKGV4cE1vZGUsIGl0ZW0udmFsdWVEaXNwbGF5LCBpdGVtLnZhbHVlQ29kZSwgaXRlbSkgfX1cbiAgICAgIDwvb3B0aW9uPlxuICAgIDwvc2VsZWN0PlxuICA8L25nLWNvbnRhaW5lcj5cbiAgPG5nLWNvbnRhaW5lciAqY3hGZWF0dXJlTGV2ZWw9XCInNi4yJ1wiPlxuICAgIDxzZWxlY3RcbiAgICAgIGlkPVwie3sgY3JlYXRlQXR0cmlidXRlSWRGb3JDb25maWd1cmF0b3IoYXR0cmlidXRlKSB9fVwiXG4gICAgICBjbGFzcz1cImZvcm0tY29udHJvbFwiXG4gICAgICBbbmdDbGFzc109XCJ7XG4gICAgICAgICdjeC1yZXF1aXJlZC1lcnJvci1tc2cgJzogKHNob3dSZXF1aXJlZEVycm9yTWVzc2FnZSQgfCBhc3luYylcbiAgICAgIH1cIlxuICAgICAgW2Zvcm1Db250cm9sXT1cImF0dHJpYnV0ZURyb3BEb3duRm9ybVwiXG4gICAgICBbY3hGb2N1c109XCJ7IGtleTogYXR0cmlidXRlLm5hbWUgfVwiXG4gICAgICAoY2hhbmdlKT1cIm9uU2VsZWN0KGF0dHJpYnV0ZURyb3BEb3duRm9ybS52YWx1ZSlcIlxuICAgICAgW2F0dHIuYXJpYS1kZXNjcmliZWRieV09XCJjcmVhdGVBdHRyaWJ1dGVVaUtleSgnbGFiZWwnLCBhdHRyaWJ1dGUubmFtZSlcIlxuICAgID5cbiAgICAgIDxvcHRpb25cbiAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgYXR0cmlidXRlLnZhbHVlc1wiXG4gICAgICAgIFtzZWxlY3RlZF09XCJpdGVtLnNlbGVjdGVkXCJcbiAgICAgICAgW2xhYmVsXT1cImdldExhYmVsKGV4cE1vZGUsIGl0ZW0udmFsdWVEaXNwbGF5LCBpdGVtLnZhbHVlQ29kZSwgaXRlbSlcIlxuICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cImdldEFyaWFMYWJlbChpdGVtLCBhdHRyaWJ1dGUpXCJcbiAgICAgICAgW3ZhbHVlXT1cIml0ZW0udmFsdWVDb2RlXCJcbiAgICAgID5cbiAgICAgICAge3sgZ2V0TGFiZWwoZXhwTW9kZSwgaXRlbS52YWx1ZURpc3BsYXksIGl0ZW0udmFsdWVDb2RlLCBpdGVtKSB9fVxuICAgICAgPC9vcHRpb24+XG4gICAgPC9zZWxlY3Q+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDxkaXZcbiAgICAqbmdJZj1cIiF3aXRoUXVhbnRpdHkgJiYgZ2V0U2VsZWN0ZWRWYWx1ZSgpPy52YWx1ZVByaWNlXCJcbiAgICBjbGFzcz1cImN4LXZhbHVlLXByaWNlXCJcbiAgPlxuICAgIDxjeC1jb25maWd1cmF0b3ItcHJpY2VcbiAgICAgIFtmb3JtdWxhXT1cImV4dHJhY3RWYWx1ZVByaWNlRm9ybXVsYVBhcmFtZXRlcnMoZ2V0U2VsZWN0ZWRWYWx1ZSgpKVwiXG4gICAgPjwvY3gtY29uZmlndXJhdG9yLXByaWNlPlxuICA8L2Rpdj5cbjwvZGl2PlxuPGRpdiAqbmdJZj1cIndpdGhRdWFudGl0eVwiIGNsYXNzPVwiY3gtYXR0cmlidXRlLWxldmVsLXF1YW50aXR5LXByaWNlXCI+XG4gIDxjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLXF1YW50aXR5XG4gICAgKGNoYW5nZVF1YW50aXR5KT1cIm9uQ2hhbmdlUXVhbnRpdHkoJGV2ZW50LCBhdHRyaWJ1dGVEcm9wRG93bkZvcm0pXCJcbiAgICBbcXVhbnRpdHlPcHRpb25zXT1cImV4dHJhY3RRdWFudGl0eVBhcmFtZXRlcnMoYXR0cmlidXRlRHJvcERvd25Gb3JtKVwiXG4gID48L2N4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtcXVhbnRpdHk+XG4gIDxjeC1jb25maWd1cmF0b3ItcHJpY2VcbiAgICBbZm9ybXVsYV09XCJleHRyYWN0UHJpY2VGb3JtdWxhUGFyYW1ldGVycygpXCJcbiAgPjwvY3gtY29uZmlndXJhdG9yLXByaWNlPlxuPC9kaXY+XG5cbjxjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLW51bWVyaWMtaW5wdXQtZmllbGRcbiAgKm5nSWY9XCJpc0FkZGl0aW9uYWxWYWx1ZU51bWVyaWNcIlxuICBjbGFzcz1cImN4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtYWRkaXRpb25hbC12YWx1ZVwiXG4gIFthdHRyLmFyaWEtbGFiZWxdPVwiJ2NvbmZpZ3VyYXRvci5hMTF5LmFkZGl0aW9uYWxWYWx1ZScgfCBjeFRyYW5zbGF0ZVwiXG4+PC9jeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLW51bWVyaWMtaW5wdXQtZmllbGQ+XG5cbjxjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLWlucHV0LWZpZWxkXG4gICpuZ0lmPVwiaXNBZGRpdGlvbmFsVmFsdWVBbHBoYU51bWVyaWNcIlxuICBjbGFzcz1cImN4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtYWRkaXRpb25hbC12YWx1ZVwiXG4gIFthdHRyLmFyaWEtbGFiZWxdPVwiJ2NvbmZpZ3VyYXRvci5hMTF5LmFkZGl0aW9uYWxWYWx1ZScgfCBjeFRyYW5zbGF0ZVwiXG4+XG48L2N4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtaW5wdXQtZmllbGQ+XG4iXX0=