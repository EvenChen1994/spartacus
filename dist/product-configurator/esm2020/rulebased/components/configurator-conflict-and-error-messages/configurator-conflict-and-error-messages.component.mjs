/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "@spartacus/product-configurator/common";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/storefront";
import * as i5 from "@spartacus/core";
export class ConfiguratorConflictAndErrorMessagesComponent {
    toggleWarnings() {
        this.showWarnings = !this.showWarnings;
    }
    toggleErrors() {
        this.showErrors = !this.showErrors;
    }
    constructor(configuratorCommonsService, configRouterExtractorService) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.iconTypes = ICON_TYPE;
        this.configuration$ = this.configRouterExtractorService
            .extractRouterData()
            .pipe(switchMap((routerData) => this.configuratorCommonsService.getConfiguration(routerData.owner)));
        this.showWarnings = false;
        this.showErrors = false;
    }
}
ConfiguratorConflictAndErrorMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorConflictAndErrorMessagesComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorRouterExtractorService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorConflictAndErrorMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ConfiguratorConflictAndErrorMessagesComponent, selector: "cx-configuration-conflict-and-error-messages", ngImport: i0, template: "<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      class=\"alert-message alert-message-invalid-warning\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"WARNING\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-warning-text\"\n        *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 1\"\n      >\n        {{ 'configurator.header.multipleWarnings' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleWarnings()\"\n        *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 1\"\n        class=\"cx-warning-toggle\"\n        [attr.aria-expanded]=\"showWarnings\"\n      >\n        {{ 'configurator.header.reviewWarnings' | cxTranslate }}\n\n        <ng-container *ngIf=\"!showWarnings\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showWarnings\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-warning-messages\"\n        [class.inline]=\"configuration?.warningMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-warning-message\"\n          [class.open]=\"\n            showWarnings || configuration?.warningMessages?.length === 1\n          \"\n          *ngFor=\"let warningMessage of configuration.warningMessages\"\n        >\n          {{ warningMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      role=\"alert\"\n      class=\"alert-message alert-message-error\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"ERROR\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-error-text\"\n        *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 1\"\n      >\n        {{ 'configurator.header.multipleErrors' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleErrors()\"\n        *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 1\"\n        class=\"cx-error-toggle\"\n        [attr.aria-expanded]=\"showErrors\"\n      >\n        {{ 'configurator.header.reviewErrors' | cxTranslate }}\n        <ng-container *ngIf=\"!showErrors\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showErrors\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-error-messages\"\n        [class.inline]=\"configuration?.errorMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-error-message\"\n          [class.open]=\"\n            showErrors || configuration?.errorMessages?.length === 1\n          \"\n          *ngFor=\"let errorMessage of configuration.errorMessages\"\n        >\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorConflictAndErrorMessagesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configuration-conflict-and-error-messages', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      class=\"alert-message alert-message-invalid-warning\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"WARNING\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-warning-text\"\n        *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 1\"\n      >\n        {{ 'configurator.header.multipleWarnings' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleWarnings()\"\n        *ngIf=\"(configuration?.warningMessages?.length ?? 0) > 1\"\n        class=\"cx-warning-toggle\"\n        [attr.aria-expanded]=\"showWarnings\"\n      >\n        {{ 'configurator.header.reviewWarnings' | cxTranslate }}\n\n        <ng-container *ngIf=\"!showWarnings\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showWarnings\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-warning-messages\"\n        [class.inline]=\"configuration?.warningMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-warning-message\"\n          [class.open]=\"\n            showWarnings || configuration?.warningMessages?.length === 1\n          \"\n          *ngFor=\"let warningMessage of configuration.warningMessages\"\n        >\n          {{ warningMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      role=\"alert\"\n      class=\"alert-message alert-message-error\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"ERROR\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-error-text\"\n        *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 1\"\n      >\n        {{ 'configurator.header.multipleErrors' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleErrors()\"\n        *ngIf=\"(configuration?.errorMessages?.length ?? 0) > 1\"\n        class=\"cx-error-toggle\"\n        [attr.aria-expanded]=\"showErrors\"\n      >\n        {{ 'configurator.header.reviewErrors' | cxTranslate }}\n        <ng-container *ngIf=\"!showErrors\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showErrors\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-error-messages\"\n        [class.inline]=\"configuration?.errorMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-error-message\"\n          [class.open]=\"\n            showErrors || configuration?.errorMessages?.length === 1\n          \"\n          *ngFor=\"let errorMessage of configuration.errorMessages\"\n        >\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorRouterExtractorService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC1jb25maWd1cmF0b3IvcnVsZWJhc2VkL2NvbXBvbmVudHMvY29uZmlndXJhdG9yLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcy9jb25maWd1cmF0b3ItY29uZmxpY3QtYW5kLWVycm9yLW1lc3NhZ2VzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY29tcG9uZW50cy9jb25maWd1cmF0b3ItY29uZmxpY3QtYW5kLWVycm9yLW1lc3NhZ2VzL2NvbmZpZ3VyYXRvci1jb25mbGljdC1hbmQtZXJyb3ItbWVzc2FnZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRWxELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQVMzQyxNQUFNLE9BQU8sNkNBQTZDO0lBYXhELGNBQWM7UUFDWixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN6QyxDQUFDO0lBSUQsWUFBWTtRQUNWLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxZQUNZLDBCQUFzRCxFQUN0RCw0QkFBZ0U7UUFEaEUsK0JBQTBCLEdBQTFCLDBCQUEwQixDQUE0QjtRQUN0RCxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQW9DO1FBeEI1RSxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLG1CQUFjLEdBQ1osSUFBSSxDQUFDLDRCQUE0QjthQUM5QixpQkFBaUIsRUFBRTthQUNuQixJQUFJLENBQ0gsU0FBUyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FDdkIsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FDbkUsQ0FDRixDQUFDO1FBRU4saUJBQVksR0FBRyxLQUFLLENBQUM7UUFNckIsZUFBVSxHQUFHLEtBQUssQ0FBQztJQVNoQixDQUFDOzswSUExQk8sNkNBQTZDOzhIQUE3Qyw2Q0FBNkMsb0ZDbkIxRCw2a0dBZ0dBOzJGRDdFYSw2Q0FBNkM7a0JBTHpELFNBQVM7K0JBQ0UsOENBQThDLG1CQUV2Qyx1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvcHJvZHVjdC1jb25maWd1cmF0b3IvY29tbW9uJztcbmltcG9ydCB7IElDT05fVFlQRSB9IGZyb20gJ0BzcGFydGFjdXMvc3RvcmVmcm9udCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSB9IGZyb20gJy4uLy4uL2NvcmUvZmFjYWRlL2NvbmZpZ3VyYXRvci1jb21tb25zLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yIH0gZnJvbSAnLi4vLi4vY29yZS9tb2RlbC9jb25maWd1cmF0b3IubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jb25maWd1cmF0aW9uLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcycsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maWd1cmF0b3ItY29uZmxpY3QtYW5kLWVycm9yLW1lc3NhZ2VzLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRvckNvbmZsaWN0QW5kRXJyb3JNZXNzYWdlc0NvbXBvbmVudCB7XG4gIGljb25UeXBlcyA9IElDT05fVFlQRTtcbiAgY29uZmlndXJhdGlvbiQ6IE9ic2VydmFibGU8Q29uZmlndXJhdG9yLkNvbmZpZ3VyYXRpb24+ID1cbiAgICB0aGlzLmNvbmZpZ1JvdXRlckV4dHJhY3RvclNlcnZpY2VcbiAgICAgIC5leHRyYWN0Um91dGVyRGF0YSgpXG4gICAgICAucGlwZShcbiAgICAgICAgc3dpdGNoTWFwKChyb3V0ZXJEYXRhKSA9PlxuICAgICAgICAgIHRoaXMuY29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UuZ2V0Q29uZmlndXJhdGlvbihyb3V0ZXJEYXRhLm93bmVyKVxuICAgICAgICApXG4gICAgICApO1xuXG4gIHNob3dXYXJuaW5ncyA9IGZhbHNlO1xuXG4gIHRvZ2dsZVdhcm5pbmdzKCk6IHZvaWQge1xuICAgIHRoaXMuc2hvd1dhcm5pbmdzID0gIXRoaXMuc2hvd1dhcm5pbmdzO1xuICB9XG5cbiAgc2hvd0Vycm9ycyA9IGZhbHNlO1xuXG4gIHRvZ2dsZUVycm9ycygpOiB2b2lkIHtcbiAgICB0aGlzLnNob3dFcnJvcnMgPSAhdGhpcy5zaG93RXJyb3JzO1xuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlOiBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlnUm91dGVyRXh0cmFjdG9yU2VydmljZTogQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZVxuICApIHt9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiY29uZmlndXJhdGlvbiQgfCBhc3luYyBhcyBjb25maWd1cmF0aW9uXCI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCIoY29uZmlndXJhdGlvbj8ud2FybmluZ01lc3NhZ2VzPy5sZW5ndGggPz8gMCkgPiAwXCI+XG4gICAgPGRpdlxuICAgICAgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCJcbiAgICAgIGFyaWEtYXRvbWljPVwidHJ1ZVwiXG4gICAgICBjbGFzcz1cImFsZXJ0LW1lc3NhZ2UgYWxlcnQtbWVzc2FnZS1pbnZhbGlkLXdhcm5pbmdcIlxuICAgID5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiV0FSTklOR1wiPjwvY3gtaWNvbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuXG4gICAgICAgIGNsYXNzPVwiY3gtd2FybmluZy10ZXh0XCJcbiAgICAgICAgKm5nSWY9XCIoY29uZmlndXJhdGlvbj8ud2FybmluZ01lc3NhZ2VzPy5sZW5ndGggPz8gMCkgPiAxXCJcbiAgICAgID5cbiAgICAgICAge3sgJ2NvbmZpZ3VyYXRvci5oZWFkZXIubXVsdGlwbGVXYXJuaW5ncycgfCBjeFRyYW5zbGF0ZSB9fTwvc3BhblxuICAgICAgPlxuICAgICAgPGJ1dHRvblxuICAgICAgICAoY2xpY2spPVwidG9nZ2xlV2FybmluZ3MoKVwiXG4gICAgICAgICpuZ0lmPVwiKGNvbmZpZ3VyYXRpb24/Lndhcm5pbmdNZXNzYWdlcz8ubGVuZ3RoID8/IDApID4gMVwiXG4gICAgICAgIGNsYXNzPVwiY3gtd2FybmluZy10b2dnbGVcIlxuICAgICAgICBbYXR0ci5hcmlhLWV4cGFuZGVkXT1cInNob3dXYXJuaW5nc1wiXG4gICAgICA+XG4gICAgICAgIHt7ICdjb25maWd1cmF0b3IuaGVhZGVyLnJldmlld1dhcm5pbmdzJyB8IGN4VHJhbnNsYXRlIH19XG5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiFzaG93V2FybmluZ3NcIj5cbiAgICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiQ0FSRVRfRE9XTlwiPjwvY3gtaWNvbj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInNob3dXYXJuaW5nc1wiPlxuICAgICAgICAgIDxjeC1pY29uIHR5cGU9XCJDQVJFVF9VUFwiPjwvY3gtaWNvbj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJjeC13YXJuaW5nLW1lc3NhZ2VzXCJcbiAgICAgICAgW2NsYXNzLmlubGluZV09XCJjb25maWd1cmF0aW9uPy53YXJuaW5nTWVzc2FnZXM/Lmxlbmd0aCA9PT0gMVwiXG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzcz1cImN4LXdhcm5pbmctbWVzc2FnZVwiXG4gICAgICAgICAgW2NsYXNzLm9wZW5dPVwiXG4gICAgICAgICAgICBzaG93V2FybmluZ3MgfHwgY29uZmlndXJhdGlvbj8ud2FybmluZ01lc3NhZ2VzPy5sZW5ndGggPT09IDFcbiAgICAgICAgICBcIlxuICAgICAgICAgICpuZ0Zvcj1cImxldCB3YXJuaW5nTWVzc2FnZSBvZiBjb25maWd1cmF0aW9uLndhcm5pbmdNZXNzYWdlc1wiXG4gICAgICAgID5cbiAgICAgICAgICB7eyB3YXJuaW5nTWVzc2FnZSB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIihjb25maWd1cmF0aW9uPy5lcnJvck1lc3NhZ2VzPy5sZW5ndGggPz8gMCkgPiAwXCI+XG4gICAgPGRpdlxuICAgICAgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCJcbiAgICAgIGFyaWEtYXRvbWljPVwidHJ1ZVwiXG4gICAgICByb2xlPVwiYWxlcnRcIlxuICAgICAgY2xhc3M9XCJhbGVydC1tZXNzYWdlIGFsZXJ0LW1lc3NhZ2UtZXJyb3JcIlxuICAgID5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiRVJST1JcIj48L2N4LWljb24+XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhblxuICAgICAgICBjbGFzcz1cImN4LWVycm9yLXRleHRcIlxuICAgICAgICAqbmdJZj1cIihjb25maWd1cmF0aW9uPy5lcnJvck1lc3NhZ2VzPy5sZW5ndGggPz8gMCkgPiAxXCJcbiAgICAgID5cbiAgICAgICAge3sgJ2NvbmZpZ3VyYXRvci5oZWFkZXIubXVsdGlwbGVFcnJvcnMnIHwgY3hUcmFuc2xhdGUgfX08L3NwYW5cbiAgICAgID5cbiAgICAgIDxidXR0b25cbiAgICAgICAgKGNsaWNrKT1cInRvZ2dsZUVycm9ycygpXCJcbiAgICAgICAgKm5nSWY9XCIoY29uZmlndXJhdGlvbj8uZXJyb3JNZXNzYWdlcz8ubGVuZ3RoID8/IDApID4gMVwiXG4gICAgICAgIGNsYXNzPVwiY3gtZXJyb3ItdG9nZ2xlXCJcbiAgICAgICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJzaG93RXJyb3JzXCJcbiAgICAgID5cbiAgICAgICAge3sgJ2NvbmZpZ3VyYXRvci5oZWFkZXIucmV2aWV3RXJyb3JzJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhc2hvd0Vycm9yc1wiPlxuICAgICAgICAgIDxjeC1pY29uIHR5cGU9XCJDQVJFVF9ET1dOXCI+PC9jeC1pY29uPlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwic2hvd0Vycm9yc1wiPlxuICAgICAgICAgIDxjeC1pY29uIHR5cGU9XCJDQVJFVF9VUFwiPjwvY3gtaWNvbj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJjeC1lcnJvci1tZXNzYWdlc1wiXG4gICAgICAgIFtjbGFzcy5pbmxpbmVdPVwiY29uZmlndXJhdGlvbj8uZXJyb3JNZXNzYWdlcz8ubGVuZ3RoID09PSAxXCJcbiAgICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNsYXNzPVwiY3gtZXJyb3ItbWVzc2FnZVwiXG4gICAgICAgICAgW2NsYXNzLm9wZW5dPVwiXG4gICAgICAgICAgICBzaG93RXJyb3JzIHx8IGNvbmZpZ3VyYXRpb24/LmVycm9yTWVzc2FnZXM/Lmxlbmd0aCA9PT0gMVxuICAgICAgICAgIFwiXG4gICAgICAgICAgKm5nRm9yPVwibGV0IGVycm9yTWVzc2FnZSBvZiBjb25maWd1cmF0aW9uLmVycm9yTWVzc2FnZXNcIlxuICAgICAgICA+XG4gICAgICAgICAge3sgZXJyb3JNZXNzYWdlIH19XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuPC9uZy1jb250YWluZXI+XG4iXX0=