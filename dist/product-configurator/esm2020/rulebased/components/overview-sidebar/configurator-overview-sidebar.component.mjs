/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, HostBinding } from '@angular/core';
import { filter, switchMap, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "@spartacus/product-configurator/common";
import * as i3 from "../service/configurator-storefront-utils.service";
import * as i4 from "@angular/common";
import * as i5 from "../overview-filter/configurator-overview-filter.component";
import * as i6 from "../overview-menu/configurator-overview-menu.component";
import * as i7 from "@spartacus/core";
export class ConfiguratorOverviewSidebarComponent {
    constructor(configuratorCommonsService, configRouterExtractorService, configuratorStorefrontUtilsService) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.configuratorStorefrontUtilsService = configuratorStorefrontUtilsService;
        this.ghostStyle = true;
        this.showFilter = false;
        //TODO(CXSPA-3392) remove this member in next major, it is not used
        /**
         * @deprecated since 6.1. Use configurationWithOv$ instead
         */
        this.config$ = this.configRouterExtractorService.extractRouterData().pipe(switchMap((routerData) => this.configuratorCommonsService.getConfiguration(routerData.owner)), 
        // filter 'strict null check safe'
        filter((configuration) => configuration.overview != null), tap((data) => {
            if (data) {
                this.ghostStyle = false;
            }
        }));
        this.configurationWithOv$ = this.configRouterExtractorService.extractRouterData().pipe(switchMap((routerData) => this.configuratorCommonsService.getConfiguration(routerData.owner)), 
        // filter 'strict null check safe'
        filter((configuration) => configuration.overview != null), tap((data) => {
            if (data) {
                this.ghostStyle = false;
            }
        }));
    }
    /**
     * Triggers display of the filter view in the overview sidebar
     */
    onFilter() {
        this.showFilter = true;
    }
    /**
     * Triggers display of the menu view in the overview sidebar
     */
    onMenu() {
        this.showFilter = false;
    }
}
ConfiguratorOverviewSidebarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorOverviewSidebarComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorRouterExtractorService }, { token: i3.ConfiguratorStorefrontUtilsService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorOverviewSidebarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ConfiguratorOverviewSidebarComponent, selector: "cx-configurator-overview-sidebar", host: { properties: { "class.ghost": "this.ghostStyle" } }, ngImport: i0, template: "<ng-container\n  *ngIf=\"configurationWithOv$ | async as configurationWithOv; else ghostSidebar\"\n>\n  <div class=\"cx-menu-bar\" role=\"tablist\">\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"!showFilter\"\n      [class.active]=\"!showFilter\"\n      (click)=\"onMenu()\"\n    >\n      {{ 'configurator.overviewSidebar.menu' | cxTranslate }}\n    </button>\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"showFilter\"\n      [class.active]=\"showFilter\"\n      (click)=\"onFilter()\"\n    >\n      {{ 'configurator.overviewSidebar.filter' | cxTranslate }}\n    </button>\n  </div>\n\n  <cx-configurator-overview-filter\n    *ngIf=\"showFilter\"\n    [config]=\"configurationWithOv\"\n  >\n  </cx-configurator-overview-filter>\n\n  <cx-configurator-overview-menu\n    *ngIf=\"!showFilter\"\n    [config]=\"configurationWithOv\"\n  >\n  </cx-configurator-overview-menu>\n</ng-container>\n\n<ng-template #ghostSidebar>\n  <div class=\"cx-ghost-menu\">\n    <div class=\"cx-ghost-menu-bar ghost\"></div>\n    <ng-container *ngFor=\"let number of [0, 1]\">\n      <ng-container *ngFor=\"let number of [0, 1, 2]; let i = index\">\n        <div class=\"cx-ghost-menu-level1\">\n          <div class=\"cx-ghost-menu-item\">\n            <div class=\"cx-ghost-menu-item-title ghost\"></div>\n          </div>\n\n          <ng-container *ngIf=\"i === 0\">\n            <div class=\"cx-ghost-menu-level2\">\n              <div\n                *ngFor=\"let number of [0, 1, 2, 3]\"\n                class=\"cx-ghost-menu-item\"\n              >\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-container *ngIf=\"i === 1\">\n            <div class=\"cx-ghost-menu-level2\">\n              <div *ngFor=\"let number of [0, 1, 2]\" class=\"cx-ghost-menu-item\">\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n              <div class=\"cx-ghost-menu-level3\">\n                <div\n                  *ngFor=\"let number of [0, 1, 2]\"\n                  class=\"cx-ghost-menu-item\"\n                >\n                  <div class=\"cx-ghost-menu-item-title ghost\"></div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-container *ngIf=\"i === 2\">\n            <div class=\"cx-ghost-menu-level1\">\n              <div *ngFor=\"let number of [0, 1]\" class=\"cx-ghost-menu-item\">\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.ConfiguratorOverviewFilterComponent, selector: "cx-configurator-overview-filter", inputs: ["showFilterBar", "config"] }, { kind: "component", type: i6.ConfiguratorOverviewMenuComponent, selector: "cx-configurator-overview-menu", inputs: ["config"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i7.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorOverviewSidebarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-overview-sidebar', template: "<ng-container\n  *ngIf=\"configurationWithOv$ | async as configurationWithOv; else ghostSidebar\"\n>\n  <div class=\"cx-menu-bar\" role=\"tablist\">\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"!showFilter\"\n      [class.active]=\"!showFilter\"\n      (click)=\"onMenu()\"\n    >\n      {{ 'configurator.overviewSidebar.menu' | cxTranslate }}\n    </button>\n    <button\n      role=\"tab\"\n      [attr.aria-selected]=\"showFilter\"\n      [class.active]=\"showFilter\"\n      (click)=\"onFilter()\"\n    >\n      {{ 'configurator.overviewSidebar.filter' | cxTranslate }}\n    </button>\n  </div>\n\n  <cx-configurator-overview-filter\n    *ngIf=\"showFilter\"\n    [config]=\"configurationWithOv\"\n  >\n  </cx-configurator-overview-filter>\n\n  <cx-configurator-overview-menu\n    *ngIf=\"!showFilter\"\n    [config]=\"configurationWithOv\"\n  >\n  </cx-configurator-overview-menu>\n</ng-container>\n\n<ng-template #ghostSidebar>\n  <div class=\"cx-ghost-menu\">\n    <div class=\"cx-ghost-menu-bar ghost\"></div>\n    <ng-container *ngFor=\"let number of [0, 1]\">\n      <ng-container *ngFor=\"let number of [0, 1, 2]; let i = index\">\n        <div class=\"cx-ghost-menu-level1\">\n          <div class=\"cx-ghost-menu-item\">\n            <div class=\"cx-ghost-menu-item-title ghost\"></div>\n          </div>\n\n          <ng-container *ngIf=\"i === 0\">\n            <div class=\"cx-ghost-menu-level2\">\n              <div\n                *ngFor=\"let number of [0, 1, 2, 3]\"\n                class=\"cx-ghost-menu-item\"\n              >\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-container *ngIf=\"i === 1\">\n            <div class=\"cx-ghost-menu-level2\">\n              <div *ngFor=\"let number of [0, 1, 2]\" class=\"cx-ghost-menu-item\">\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n              <div class=\"cx-ghost-menu-level3\">\n                <div\n                  *ngFor=\"let number of [0, 1, 2]\"\n                  class=\"cx-ghost-menu-item\"\n                >\n                  <div class=\"cx-ghost-menu-item-title ghost\"></div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n\n          <ng-container *ngIf=\"i === 2\">\n            <div class=\"cx-ghost-menu-level1\">\n              <div *ngFor=\"let number of [0, 1]\" class=\"cx-ghost-menu-item\">\n                <div class=\"cx-ghost-menu-item-title ghost\"></div>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorRouterExtractorService }, { type: i3.ConfiguratorStorefrontUtilsService }]; }, propDecorators: { ghostStyle: [{
                type: HostBinding,
                args: ['class.ghost']
            }] } });
//# sourceMappingURL=data:application/json;base64,