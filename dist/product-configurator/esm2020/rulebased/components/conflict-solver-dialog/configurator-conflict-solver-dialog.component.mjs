/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { ICON_TYPE, } from '@spartacus/storefront';
import { Subscription } from 'rxjs';
import { Configurator } from '../../core/model/configurator.model';
import { take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../service";
import * as i2 from "../../core/facade/configurator-commons.service";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
import * as i5 from "../group/configurator-group.component";
import * as i6 from "@spartacus/core";
export class ConfiguratorConflictSolverDialogComponent {
    constructor(configuratorStorefrontUtilsService, configuratorCommonsService, launchDialogService, focusService) {
        this.configuratorStorefrontUtilsService = configuratorStorefrontUtilsService;
        this.configuratorCommonsService = configuratorCommonsService;
        this.launchDialogService = launchDialogService;
        this.focusService = focusService;
        this.iconTypes = ICON_TYPE;
        this.uiType = Configurator.UiType;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: true,
            focusOnEscape: true,
        };
        this.subscription = new Subscription();
    }
    init(conflictGroup, routerData) {
        this.focusService.clear();
        this.conflictGroup$ = conflictGroup;
        this.routerData$ = routerData;
    }
    ngOnInit() {
        this.subscription.add(this.launchDialogService.data$.subscribe((dialogData) => {
            this.init(dialogData.conflictGroup, dialogData.routerData);
        }));
    }
    ngOnDestroy() {
        this.subscription?.unsubscribe();
    }
    /**
     * Closes a modal with a certain reason.
     * Scrolls to the top of the configuration form.
     * Sets focus to the first attribute.
     *
     * @param {any} reason - Reason
     */
    dismissModal(reason) {
        this.routerData$
            .pipe(take(1))
            .subscribe((routerData) => this.configuratorCommonsService.dismissConflictSolverDialog(routerData.owner));
        this.launchDialogService.closeDialog(reason);
        this.configuratorStorefrontUtilsService.scrollToConfigurationElement('.VariantConfigurationTemplate');
        this.configuratorStorefrontUtilsService.focusFirstAttribute();
    }
}
ConfiguratorConflictSolverDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorConflictSolverDialogComponent, deps: [{ token: i1.ConfiguratorStorefrontUtilsService }, { token: i2.ConfiguratorCommonsService }, { token: i3.LaunchDialogService }, { token: i3.KeyboardFocusService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorConflictSolverDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: ConfiguratorConflictSolverDialogComponent, selector: "cx-configurator-conflict-solver-dialog", ngImport: i0, template: "<div class=\"cx-modal-container\">\n  <!-- For screen reader purposes (not visual)-->\n  <div\n    class=\"cx-visually-hidden\"\n    aria-atomic=\"true\"\n    aria-live=\"assertive\"\n    role=\"alert\"\n    aria-relevant=\"additions\"\n  >\n    {{ 'configurator.header.conflictWarning' | cxTranslate }}\n  </div>\n  <div class=\"cx-modal-content\" [cxFocus]=\"focusConfig\">\n    <!-- Modal Header -->\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"cx-dialog-title modal-title\" tabindex=\"0\">\n        {{ 'configurator.header.resolveIssue' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        attr.aria-label=\"{{\n          'configurator.a11y.closeConflictSolverModal' | cxTranslate\n        }}\"\n        (click)=\"dismissModal('Close conflict solver dialog')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-msg-warning\">\n        <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n        {{ 'configurator.header.conflictWarning' | cxTranslate }}\n      </div>\n      <ng-container *ngIf=\"routerData$ | async as routerData\">\n        <ng-container *ngIf=\"conflictGroup$ | async as conflictGroup\">\n          <cx-configurator-group\n            [group]=\"conflictGroup\"\n            [owner]=\"routerData.owner\"\n            [isNavigationToGroupEnabled]=\"false\"\n          >\n          </cx-configurator-group> </ng-container\n      ></ng-container>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "component", type: i5.ConfiguratorGroupComponent, selector: "cx-configurator-group", inputs: ["group", "owner", "isNavigationToGroupEnabled"] }, { kind: "directive", type: i3.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: ConfiguratorConflictSolverDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-conflict-solver-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cx-modal-container\">\n  <!-- For screen reader purposes (not visual)-->\n  <div\n    class=\"cx-visually-hidden\"\n    aria-atomic=\"true\"\n    aria-live=\"assertive\"\n    role=\"alert\"\n    aria-relevant=\"additions\"\n  >\n    {{ 'configurator.header.conflictWarning' | cxTranslate }}\n  </div>\n  <div class=\"cx-modal-content\" [cxFocus]=\"focusConfig\">\n    <!-- Modal Header -->\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"cx-dialog-title modal-title\" tabindex=\"0\">\n        {{ 'configurator.header.resolveIssue' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        attr.aria-label=\"{{\n          'configurator.a11y.closeConflictSolverModal' | cxTranslate\n        }}\"\n        (click)=\"dismissModal('Close conflict solver dialog')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-msg-warning\">\n        <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n        {{ 'configurator.header.conflictWarning' | cxTranslate }}\n      </div>\n      <ng-container *ngIf=\"routerData$ | async as routerData\">\n        <ng-container *ngIf=\"conflictGroup$ | async as conflictGroup\">\n          <cx-configurator-group\n            [group]=\"conflictGroup\"\n            [owner]=\"routerData.owner\"\n            [isNavigationToGroupEnabled]=\"false\"\n          >\n          </cx-configurator-group> </ng-container\n      ></ng-container>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorStorefrontUtilsService }, { type: i2.ConfiguratorCommonsService }, { type: i3.LaunchDialogService }, { type: i3.KeyboardFocusService }]; } });
//# sourceMappingURL=data:application/json;base64,