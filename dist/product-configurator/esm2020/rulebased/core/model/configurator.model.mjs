/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
// Note that this namespace should be augmentable, therefore it's exposed in the 'public_api.ts'
// of the rulebased entry point, and there is no index.ts file in this folder
export var Configurator;
(function (Configurator) {
    let GroupType;
    (function (GroupType) {
        GroupType["ATTRIBUTE_GROUP"] = "AttributeGroup";
        GroupType["SUB_ITEM_GROUP"] = "SubItemGroup";
        GroupType["CONFLICT_HEADER_GROUP"] = "ConflictHeaderGroup";
        GroupType["CONFLICT_GROUP"] = "ConflictGroup";
    })(GroupType = Configurator.GroupType || (Configurator.GroupType = {}));
    let UiType;
    (function (UiType) {
        UiType["NOT_IMPLEMENTED"] = "not_implemented";
        UiType["RADIOBUTTON"] = "radioGroup";
        UiType["RADIOBUTTON_ADDITIONAL_INPUT"] = "radioGroup_add";
        UiType["CHECKBOX"] = "checkBox";
        UiType["CHECKBOXLIST"] = "checkBoxList";
        UiType["DROPDOWN"] = "dropdown";
        UiType["DROPDOWN_ADDITIONAL_INPUT"] = "dropdown_add";
        UiType["LISTBOX"] = "listbox";
        UiType["LISTBOX_MULTI"] = "listboxmulti";
        UiType["READ_ONLY"] = "readonly";
        UiType["STRING"] = "string";
        UiType["NUMERIC"] = "numeric";
        UiType["AUTO_COMPLETE_CUSTOM"] = "input_autocomplete";
        UiType["MULTI_SELECTION_IMAGE"] = "multi_selection_image";
        UiType["SINGLE_SELECTION_IMAGE"] = "single_selection_image";
        //introduced with CPQ
        UiType["CHECKBOXLIST_PRODUCT"] = "checkBoxListProduct";
        UiType["DROPDOWN_PRODUCT"] = "dropdownProduct";
        UiType["RADIOBUTTON_PRODUCT"] = "radioGroupProduct";
    })(UiType = Configurator.UiType || (Configurator.UiType = {}));
    let ImageFormatType;
    (function (ImageFormatType) {
        ImageFormatType["VALUE_IMAGE"] = "VALUE_IMAGE";
        ImageFormatType["ATTRIBUTE_IMAGE"] = "ATTRIBUTE_IMAGE";
    })(ImageFormatType = Configurator.ImageFormatType || (Configurator.ImageFormatType = {}));
    let ImageType;
    (function (ImageType) {
        ImageType["PRIMARY"] = "PRIMARY";
        ImageType["GALLERY"] = "GALLERY";
    })(ImageType = Configurator.ImageType || (Configurator.ImageType = {}));
    let DataType;
    (function (DataType) {
        DataType["INPUT_STRING"] = "String";
        DataType["INPUT_NUMBER"] = "Number";
        DataType["USER_SELECTION_QTY_ATTRIBUTE_LEVEL"] = "UserSelectionWithAttributeQuantity";
        DataType["USER_SELECTION_QTY_VALUE_LEVEL"] = "UserSelectionWithValueQuantity";
        DataType["USER_SELECTION_NO_QTY"] = "UserSelectionWithoutQuantity";
        DataType["NOT_IMPLEMENTED"] = "not_implemented";
    })(DataType = Configurator.DataType || (Configurator.DataType = {}));
    let UpdateType;
    (function (UpdateType) {
        UpdateType["ATTRIBUTE"] = "Attribute";
        UpdateType["ATTRIBUTE_QUANTITY"] = "AttributeQuantity";
        UpdateType["VALUE_QUANTITY"] = "ValueQuantity";
    })(UpdateType = Configurator.UpdateType || (Configurator.UpdateType = {}));
    let AttributeOverviewType;
    (function (AttributeOverviewType) {
        AttributeOverviewType["GENERAL"] = "general";
        AttributeOverviewType["BUNDLE"] = "bundle";
    })(AttributeOverviewType = Configurator.AttributeOverviewType || (Configurator.AttributeOverviewType = {}));
    let ValidationType;
    (function (ValidationType) {
        ValidationType["NONE"] = "NONE";
        ValidationType["NUMERIC"] = "NUMERIC";
    })(ValidationType = Configurator.ValidationType || (Configurator.ValidationType = {}));
    let OverviewFilter;
    (function (OverviewFilter) {
        OverviewFilter["VISIBLE"] = "PRIMARY";
        OverviewFilter["USER_INPUT"] = "USER_INPUT";
        OverviewFilter["PRICE_RELEVANT"] = "PRICE_RELEVANT";
    })(OverviewFilter = Configurator.OverviewFilter || (Configurator.OverviewFilter = {}));
    Configurator.ConflictIdPrefix = 'CONFLICT';
    Configurator.ConflictHeaderId = 'CONFLICT_HEADER';
    Configurator.CustomUiTypeIndicator = '___';
    Configurator.RetractValueCode = '###RETRACT_VALUE_CODE###';
})(Configurator || (Configurator = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb3JlL21vZGVsL2NvbmZpZ3VyYXRvci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBSUgsZ0dBQWdHO0FBQ2hHLDZFQUE2RTtBQUU3RSxNQUFNLEtBQVcsWUFBWSxDQWlSNUI7QUFqUkQsV0FBaUIsWUFBWTtJQXVNM0IsSUFBWSxTQUtYO0lBTEQsV0FBWSxTQUFTO1FBQ25CLCtDQUFrQyxDQUFBO1FBQ2xDLDRDQUErQixDQUFBO1FBQy9CLDBEQUE2QyxDQUFBO1FBQzdDLDZDQUFnQyxDQUFBO0lBQ2xDLENBQUMsRUFMVyxTQUFTLEdBQVQsc0JBQVMsS0FBVCxzQkFBUyxRQUtwQjtJQUVELElBQVksTUFzQlg7SUF0QkQsV0FBWSxNQUFNO1FBQ2hCLDZDQUFtQyxDQUFBO1FBQ25DLG9DQUEwQixDQUFBO1FBQzFCLHlEQUErQyxDQUFBO1FBQy9DLCtCQUFxQixDQUFBO1FBQ3JCLHVDQUE2QixDQUFBO1FBQzdCLCtCQUFxQixDQUFBO1FBQ3JCLG9EQUEwQyxDQUFBO1FBQzFDLDZCQUFtQixDQUFBO1FBQ25CLHdDQUE4QixDQUFBO1FBQzlCLGdDQUFzQixDQUFBO1FBQ3RCLDJCQUFpQixDQUFBO1FBQ2pCLDZCQUFtQixDQUFBO1FBQ25CLHFEQUEyQyxDQUFBO1FBQzNDLHlEQUErQyxDQUFBO1FBQy9DLDJEQUFpRCxDQUFBO1FBRWpELHFCQUFxQjtRQUVyQixzREFBNEMsQ0FBQTtRQUM1Qyw4Q0FBb0MsQ0FBQTtRQUNwQyxtREFBeUMsQ0FBQTtJQUMzQyxDQUFDLEVBdEJXLE1BQU0sR0FBTixtQkFBTSxLQUFOLG1CQUFNLFFBc0JqQjtJQUVELElBQVksZUFHWDtJQUhELFdBQVksZUFBZTtRQUN6Qiw4Q0FBMkIsQ0FBQTtRQUMzQixzREFBbUMsQ0FBQTtJQUNyQyxDQUFDLEVBSFcsZUFBZSxHQUFmLDRCQUFlLEtBQWYsNEJBQWUsUUFHMUI7SUFFRCxJQUFZLFNBR1g7SUFIRCxXQUFZLFNBQVM7UUFDbkIsZ0NBQW1CLENBQUE7UUFDbkIsZ0NBQW1CLENBQUE7SUFDckIsQ0FBQyxFQUhXLFNBQVMsR0FBVCxzQkFBUyxLQUFULHNCQUFTLFFBR3BCO0lBRUQsSUFBWSxRQU9YO0lBUEQsV0FBWSxRQUFRO1FBQ2xCLG1DQUF1QixDQUFBO1FBQ3ZCLG1DQUF1QixDQUFBO1FBQ3ZCLHFGQUF5RSxDQUFBO1FBQ3pFLDZFQUFpRSxDQUFBO1FBQ2pFLGtFQUFzRCxDQUFBO1FBQ3RELCtDQUFtQyxDQUFBO0lBQ3JDLENBQUMsRUFQVyxRQUFRLEdBQVIscUJBQVEsS0FBUixxQkFBUSxRQU9uQjtJQUNELElBQVksVUFJWDtJQUpELFdBQVksVUFBVTtRQUNwQixxQ0FBdUIsQ0FBQTtRQUN2QixzREFBd0MsQ0FBQTtRQUN4Qyw4Q0FBZ0MsQ0FBQTtJQUNsQyxDQUFDLEVBSlcsVUFBVSxHQUFWLHVCQUFVLEtBQVYsdUJBQVUsUUFJckI7SUFFRCxJQUFZLHFCQUdYO0lBSEQsV0FBWSxxQkFBcUI7UUFDL0IsNENBQW1CLENBQUE7UUFDbkIsMENBQWlCLENBQUE7SUFDbkIsQ0FBQyxFQUhXLHFCQUFxQixHQUFyQixrQ0FBcUIsS0FBckIsa0NBQXFCLFFBR2hDO0lBRUQsSUFBWSxjQUdYO0lBSEQsV0FBWSxjQUFjO1FBQ3hCLCtCQUFhLENBQUE7UUFDYixxQ0FBbUIsQ0FBQTtJQUNyQixDQUFDLEVBSFcsY0FBYyxHQUFkLDJCQUFjLEtBQWQsMkJBQWMsUUFHekI7SUFDRCxJQUFZLGNBSVg7SUFKRCxXQUFZLGNBQWM7UUFDeEIscUNBQW1CLENBQUE7UUFDbkIsMkNBQXlCLENBQUE7UUFDekIsbURBQWlDLENBQUE7SUFDbkMsQ0FBQyxFQUpXLGNBQWMsR0FBZCwyQkFBYyxLQUFkLDJCQUFjLFFBSXpCO0lBRVksNkJBQWdCLEdBQUcsVUFBVSxDQUFDO0lBQzlCLDZCQUFnQixHQUFHLGlCQUFpQixDQUFDO0lBQ3JDLGtDQUFxQixHQUFHLEtBQUssQ0FBQztJQUM5Qiw2QkFBZ0IsR0FBRywwQkFBMEIsQ0FBQztBQUM3RCxDQUFDLEVBalJnQixZQUFZLEtBQVosWUFBWSxRQWlSNUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDb21tb25Db25maWd1cmF0b3IgfSBmcm9tICdAc3BhcnRhY3VzL3Byb2R1Y3QtY29uZmlndXJhdG9yL2NvbW1vbic7XG5cbi8vIE5vdGUgdGhhdCB0aGlzIG5hbWVzcGFjZSBzaG91bGQgYmUgYXVnbWVudGFibGUsIHRoZXJlZm9yZSBpdCdzIGV4cG9zZWQgaW4gdGhlICdwdWJsaWNfYXBpLnRzJ1xuLy8gb2YgdGhlIHJ1bGViYXNlZCBlbnRyeSBwb2ludCwgYW5kIHRoZXJlIGlzIG5vIGluZGV4LnRzIGZpbGUgaW4gdGhpcyBmb2xkZXJcblxuZXhwb3J0IG5hbWVzcGFjZSBDb25maWd1cmF0b3Ige1xuICBleHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZSB7XG4gICAgYXR0ckNvZGU/OiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIHJlcXVpcmVkPzogYm9vbGVhbjtcbiAgICBpbmNvbXBsZXRlPzogYm9vbGVhbjtcbiAgICB1aVR5cGU/OiBVaVR5cGU7XG4gICAgLyoqIEFsbG93cyB0byB3b3JrIHdpdGggYSBjdXN0b20gdmFyaWF0aW9uIG9mIGFuIHVpVHlwZSwgaW4gb3JkZXIgdG8gcmVnaXN0ZXIgYSBzcGVjaWZpYyBjb21wb25lbnQgZm9yIHJlbmRlcmluZyBhbiBhdHRyaWJ1dGUuXG4gICAgICogSW4gY2FzZSBhIGN1c3RvbSB2YXJpYXRpb24gZXhpc3QsIGl0IGlzIG9mIGZvcm1hdCA8T0NDIHVpVHlwZT5fX188WD4sIGUuZy4gUkFESU9fQlVUVE9OX19fQ1VTVE9NLlxuICAgICAqIFRoZSBub3JtYWxpemVycyBkbyBub3QgY2hhbmdlIGl0IGFuZCBqdXN0IHVzZSB0aGUgZmlyc3QgcG9ydGlvbiBvZiBpdCB0byBmaW5kIHRoZSB1aVR5cGUgdGhlIFNQQSBidXNpbmVzcyBsb2dpY1xuICAgICAqIGlzIGF0dGFjaGVkIHRvLiBQZXIgZGVmYXVsdCwgaWYgbm8gY3VzdG9taXphdGlvbiBpcyBwcmVzZW50LCB0aGlzIGF0dHJpYnV0ZSBtYXRjaGVzIHRoZSBPQ0MgdWlUeXBlICovXG4gICAgdWlUeXBlVmFyaWF0aW9uPzogc3RyaW5nO1xuICAgIGRhdGFUeXBlPzogRGF0YVR5cGU7XG4gICAgcXVhbnRpdHk/OiBudW1iZXI7XG4gICAgdmFsdWVzPzogVmFsdWVbXTtcbiAgICBncm91cElkPzogc3RyaW5nO1xuICAgIHNlbGVjdGVkU2luZ2xlVmFsdWU/OiBzdHJpbmc7XG4gICAgdXNlcklucHV0Pzogc3RyaW5nO1xuICAgIGlzTGluZUl0ZW0/OiBib29sZWFuO1xuICAgIG1heGxlbmd0aD86IG51bWJlcjtcbiAgICBpbWFnZXM/OiBJbWFnZVtdO1xuICAgIG51bURlY2ltYWxQbGFjZXM/OiBudW1iZXI7XG4gICAgbnVtVG90YWxMZW5ndGg/OiBudW1iZXI7XG4gICAgbmVnYXRpdmVBbGxvd2VkPzogYm9vbGVhbjtcbiAgICBoYXNDb25mbGljdHM/OiBib29sZWFuO1xuICAgIHJldHJhY3RUcmlnZ2VyZWQ/OiBib29sZWFuO1xuICAgIGF0dHJpYnV0ZVByaWNlVG90YWw/OiBQcmljZURldGFpbHM7XG4gICAgaW50ZXJ2YWxJbkRvbWFpbj86IGJvb2xlYW47XG4gICAga2V5Pzogc3RyaW5nO1xuICAgIHZhbGlkYXRpb25UeXBlPzogc3RyaW5nO1xuICAgIHZpc2libGU/OiBib29sZWFuO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBWYWx1ZSB7XG4gICAgdmFsdWVDb2RlOiBzdHJpbmc7XG4gICAgbmFtZT86IHN0cmluZztcbiAgICB2YWx1ZURpc3BsYXk/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgc2VsZWN0ZWQ/OiBib29sZWFuO1xuICAgIHF1YW50aXR5PzogbnVtYmVyO1xuICAgIHZhbHVlUHJpY2U/OiBQcmljZURldGFpbHM7XG4gICAgdmFsdWVQcmljZVRvdGFsPzogUHJpY2VEZXRhaWxzO1xuICAgIHByb2R1Y3RTeXN0ZW1JZD86IHN0cmluZztcbiAgICBpc0NvbW1lcmNlUHJvZHVjdD86IGJvb2xlYW47XG4gICAgaW1hZ2VzPzogSW1hZ2VbXTtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgR3JvdXAge1xuICAgIGF0dHJpYnV0ZXM/OiBBdHRyaWJ1dGVbXTtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5hbWU/OiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgZ3JvdXBUeXBlPzogR3JvdXBUeXBlO1xuICAgIGNvbmZpZ3VyYWJsZT86IGJvb2xlYW47XG4gICAgY29tcGxldGU/OiBib29sZWFuO1xuICAgIGNvbnNpc3RlbnQ/OiBib29sZWFuO1xuICAgIHN1Ykdyb3VwczogR3JvdXBbXTtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgVmFsdWVTdXBwbGVtZW50IHtcbiAgICBhdHRyaWJ1dGVWYWx1ZUtleTogc3RyaW5nO1xuICAgIHByaWNlVmFsdWU6IFByaWNlRGV0YWlscztcbiAgICBvYnNvbGV0ZVByaWNlVmFsdWU6IFByaWNlRGV0YWlscztcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgQXR0cmlidXRlU3VwcGxlbWVudCB7XG4gICAgYXR0cmlidXRlVWlLZXk6IHN0cmluZztcbiAgICB2YWx1ZVN1cHBsZW1lbnRzOiBWYWx1ZVN1cHBsZW1lbnRbXTtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvbiB7XG4gICAgY29uZmlnSWQ6IHN0cmluZztcbiAgICBjb25zaXN0ZW50PzogYm9vbGVhbjtcbiAgICBjb21wbGV0ZT86IGJvb2xlYW47XG4gICAgdG90YWxOdW1iZXJPZklzc3Vlcz86IG51bWJlcjtcbiAgICBwcm9kdWN0Q29kZTogc3RyaW5nO1xuICAgIGdyb3VwczogR3JvdXBbXTtcbiAgICBmbGF0R3JvdXBzOiBHcm91cFtdO1xuICAgIHByaWNlU3VwcGxlbWVudHM/OiBBdHRyaWJ1dGVTdXBwbGVtZW50W107XG4gICAgcHJpY2VTdW1tYXJ5PzogUHJpY2VTdW1tYXJ5O1xuICAgIG92ZXJ2aWV3PzogT3ZlcnZpZXc7XG4gICAgb3duZXI6IENvbW1vbkNvbmZpZ3VyYXRvci5Pd25lcjtcbiAgICBuZXh0T3duZXI/OiBDb21tb25Db25maWd1cmF0b3IuT3duZXI7XG4gICAgaXNDYXJ0RW50cnlVcGRhdGVSZXF1aXJlZD86IGJvb2xlYW47XG4gICAgaW50ZXJhY3Rpb25TdGF0ZTogSW50ZXJhY3Rpb25TdGF0ZTtcbiAgICB1cGRhdGVUeXBlPzogVXBkYXRlVHlwZTtcbiAgICBlcnJvck1lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgd2FybmluZ01lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgdmFyaWFudHM/OiBWYXJpYW50W107XG4gICAga2JLZXk/OiBLQjtcbiAgICBwcmljaW5nRW5hYmxlZD86IGJvb2xlYW47XG4gICAgaGlkZUJhc2VQcmljZUFuZFNlbGVjdGVkT3B0aW9ucz86IGJvb2xlYW47XG4gICAgaW1tZWRpYXRlQ29uZmxpY3RSZXNvbHV0aW9uPzogYm9vbGVhbjtcbiAgICBuZXdDb25maWd1cmF0aW9uPzogYm9vbGVhbjtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgQ29uZmlndXJhdGlvbldpdGhPdmVydmlldyBleHRlbmRzIENvbmZpZ3VyYXRpb24ge1xuICAgIG92ZXJ2aWV3OiBPdmVydmlldztcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgSW50ZXJhY3Rpb25TdGF0ZSB7XG4gICAgY3VycmVudEdyb3VwPzogc3RyaW5nO1xuICAgIG1lbnVQYXJlbnRHcm91cD86IHN0cmluZztcbiAgICBncm91cHNWaXNpdGVkPzoge1xuICAgICAgW2lkOiBzdHJpbmddOiBib29sZWFuO1xuICAgIH07XG4gICAgaXNzdWVOYXZpZ2F0aW9uRG9uZT86IGJvb2xlYW47XG4gICAgaXNDb25mbGljdFJlc29sdXRpb25Nb2RlPzogYm9vbGVhbjtcbiAgICBzaG93Q29uZmxpY3RTb2x2ZXJEaWFsb2c/OiBib29sZWFuO1xuICAgIG5ld0NvbmZpZ3VyYXRpb24/OiBib29sZWFuO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBPdmVydmlldyB7XG4gICAgY29uZmlnSWQ6IHN0cmluZztcbiAgICB0b3RhbE51bWJlck9mSXNzdWVzPzogbnVtYmVyO1xuICAgIG51bWJlck9mSW5jb21wbGV0ZUNoYXJhY3RlcmlzdGljcz86IG51bWJlcjtcbiAgICBudW1iZXJPZkNvbmZsaWN0cz86IG51bWJlcjtcbiAgICBncm91cHM/OiBHcm91cE92ZXJ2aWV3W107XG4gICAgcHJpY2VTdW1tYXJ5PzogUHJpY2VTdW1tYXJ5O1xuICAgIHByb2R1Y3RDb2RlOiBzdHJpbmc7XG4gICAgYXR0cmlidXRlRmlsdGVycz86IE92ZXJ2aWV3RmlsdGVyW107XG4gICAgZ3JvdXBGaWx0ZXJzPzogc3RyaW5nW107XG4gICAgcG9zc2libGVHcm91cHM/OiBHcm91cE92ZXJ2aWV3W107XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIEdyb3VwT3ZlcnZpZXcge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgZ3JvdXBEZXNjcmlwdGlvbj86IHN0cmluZztcbiAgICBhdHRyaWJ1dGVzPzogQXR0cmlidXRlT3ZlcnZpZXdbXTtcbiAgICBzdWJHcm91cHM/OiBHcm91cE92ZXJ2aWV3W107XG4gIH1cblxuICBleHBvcnQgaW50ZXJmYWNlIEF0dHJpYnV0ZU92ZXJ2aWV3IHtcbiAgICBhdHRyaWJ1dGU6IHN0cmluZztcbiAgICBhdHRyaWJ1dGVJZD86IHN0cmluZztcbiAgICB2YWx1ZTogc3RyaW5nO1xuICAgIHZhbHVlSWQ/OiBzdHJpbmc7XG4gICAgcHJvZHVjdENvZGU/OiBzdHJpbmc7XG4gICAgdHlwZT86IEF0dHJpYnV0ZU92ZXJ2aWV3VHlwZTtcbiAgICBxdWFudGl0eT86IG51bWJlcjtcbiAgICB2YWx1ZVByaWNlPzogUHJpY2VEZXRhaWxzO1xuICAgIHZhbHVlUHJpY2VUb3RhbD86IFByaWNlRGV0YWlscztcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgUHJpY2VTdW1tYXJ5IHtcbiAgICBiYXNlUHJpY2U/OiBQcmljZURldGFpbHM7XG4gICAgY3VycmVudFRvdGFsPzogUHJpY2VEZXRhaWxzO1xuICAgIGN1cnJlbnRUb3RhbFNhdmluZ3M/OiBQcmljZVNhdmluZ0RldGFpbHM7XG4gICAgc2VsZWN0ZWRPcHRpb25zPzogUHJpY2VEZXRhaWxzO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBQcmljZURldGFpbHMge1xuICAgIGN1cnJlbmN5SXNvOiBzdHJpbmc7XG4gICAgZm9ybWF0dGVkVmFsdWU/OiBzdHJpbmc7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgUHJpY2VTYXZpbmdEZXRhaWxzIGV4dGVuZHMgUHJpY2VEZXRhaWxzIHtcbiAgICBtYXhRdWFudGl0eT86IG51bWJlcjtcbiAgICBtaW5RdWFudGl0eT86IG51bWJlcjtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgQWRkVG9DYXJ0UGFyYW1ldGVycyB7XG4gICAgdXNlcklkOiBzdHJpbmc7XG4gICAgY2FydElkOiBzdHJpbmc7XG4gICAgcHJvZHVjdENvZGU6IHN0cmluZztcbiAgICBxdWFudGl0eTogbnVtYmVyO1xuICAgIGNvbmZpZ0lkOiBzdHJpbmc7XG4gICAgb3duZXI6IENvbW1vbkNvbmZpZ3VyYXRvci5Pd25lcjtcbiAgfVxuXG4gIGV4cG9ydCBpbnRlcmZhY2UgVXBkYXRlQ29uZmlndXJhdGlvbkZvckNhcnRFbnRyeVBhcmFtZXRlcnMge1xuICAgIHVzZXJJZDogc3RyaW5nO1xuICAgIGNhcnRJZDogc3RyaW5nO1xuICAgIGNhcnRFbnRyeU51bWJlcjogc3RyaW5nO1xuICAgIGNvbmZpZ3VyYXRpb246IENvbmZpZ3VyYXRvci5Db25maWd1cmF0aW9uO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBJbWFnZSB7XG4gICAgdHlwZT86IEltYWdlVHlwZTtcbiAgICBmb3JtYXQ/OiBJbWFnZUZvcm1hdFR5cGU7XG4gICAgdXJsPzogc3RyaW5nO1xuICAgIGFsdFRleHQ/OiBzdHJpbmc7XG4gICAgZ2FsbGVyeUluZGV4PzogbnVtYmVyO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBWYXJpYW50IHtcbiAgICBwcm9kdWN0Q29kZTogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGludGVyZmFjZSBLQiB7XG4gICAga2JOYW1lPzogc3RyaW5nO1xuICAgIGtiTG9nc3lzPzogc3RyaW5nO1xuICAgIGtiVmVyc2lvbj86IHN0cmluZztcbiAgICBrYkJ1aWxkTnVtYmVyPzogc3RyaW5nO1xuICB9XG5cbiAgZXhwb3J0IGVudW0gR3JvdXBUeXBlIHtcbiAgICBBVFRSSUJVVEVfR1JPVVAgPSAnQXR0cmlidXRlR3JvdXAnLFxuICAgIFNVQl9JVEVNX0dST1VQID0gJ1N1Ykl0ZW1Hcm91cCcsXG4gICAgQ09ORkxJQ1RfSEVBREVSX0dST1VQID0gJ0NvbmZsaWN0SGVhZGVyR3JvdXAnLFxuICAgIENPTkZMSUNUX0dST1VQID0gJ0NvbmZsaWN0R3JvdXAnLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gVWlUeXBlIHtcbiAgICBOT1RfSU1QTEVNRU5URUQgPSAnbm90X2ltcGxlbWVudGVkJyxcbiAgICBSQURJT0JVVFRPTiA9ICdyYWRpb0dyb3VwJyxcbiAgICBSQURJT0JVVFRPTl9BRERJVElPTkFMX0lOUFVUID0gJ3JhZGlvR3JvdXBfYWRkJyxcbiAgICBDSEVDS0JPWCA9ICdjaGVja0JveCcsXG4gICAgQ0hFQ0tCT1hMSVNUID0gJ2NoZWNrQm94TGlzdCcsXG4gICAgRFJPUERPV04gPSAnZHJvcGRvd24nLFxuICAgIERST1BET1dOX0FERElUSU9OQUxfSU5QVVQgPSAnZHJvcGRvd25fYWRkJyxcbiAgICBMSVNUQk9YID0gJ2xpc3Rib3gnLFxuICAgIExJU1RCT1hfTVVMVEkgPSAnbGlzdGJveG11bHRpJyxcbiAgICBSRUFEX09OTFkgPSAncmVhZG9ubHknLFxuICAgIFNUUklORyA9ICdzdHJpbmcnLFxuICAgIE5VTUVSSUMgPSAnbnVtZXJpYycsXG4gICAgQVVUT19DT01QTEVURV9DVVNUT00gPSAnaW5wdXRfYXV0b2NvbXBsZXRlJyxcbiAgICBNVUxUSV9TRUxFQ1RJT05fSU1BR0UgPSAnbXVsdGlfc2VsZWN0aW9uX2ltYWdlJyxcbiAgICBTSU5HTEVfU0VMRUNUSU9OX0lNQUdFID0gJ3NpbmdsZV9zZWxlY3Rpb25faW1hZ2UnLFxuXG4gICAgLy9pbnRyb2R1Y2VkIHdpdGggQ1BRXG5cbiAgICBDSEVDS0JPWExJU1RfUFJPRFVDVCA9ICdjaGVja0JveExpc3RQcm9kdWN0JyxcbiAgICBEUk9QRE9XTl9QUk9EVUNUID0gJ2Ryb3Bkb3duUHJvZHVjdCcsXG4gICAgUkFESU9CVVRUT05fUFJPRFVDVCA9ICdyYWRpb0dyb3VwUHJvZHVjdCcsXG4gIH1cblxuICBleHBvcnQgZW51bSBJbWFnZUZvcm1hdFR5cGUge1xuICAgIFZBTFVFX0lNQUdFID0gJ1ZBTFVFX0lNQUdFJyxcbiAgICBBVFRSSUJVVEVfSU1BR0UgPSAnQVRUUklCVVRFX0lNQUdFJyxcbiAgfVxuXG4gIGV4cG9ydCBlbnVtIEltYWdlVHlwZSB7XG4gICAgUFJJTUFSWSA9ICdQUklNQVJZJyxcbiAgICBHQUxMRVJZID0gJ0dBTExFUlknLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gRGF0YVR5cGUge1xuICAgIElOUFVUX1NUUklORyA9ICdTdHJpbmcnLFxuICAgIElOUFVUX05VTUJFUiA9ICdOdW1iZXInLFxuICAgIFVTRVJfU0VMRUNUSU9OX1FUWV9BVFRSSUJVVEVfTEVWRUwgPSAnVXNlclNlbGVjdGlvbldpdGhBdHRyaWJ1dGVRdWFudGl0eScsXG4gICAgVVNFUl9TRUxFQ1RJT05fUVRZX1ZBTFVFX0xFVkVMID0gJ1VzZXJTZWxlY3Rpb25XaXRoVmFsdWVRdWFudGl0eScsXG4gICAgVVNFUl9TRUxFQ1RJT05fTk9fUVRZID0gJ1VzZXJTZWxlY3Rpb25XaXRob3V0UXVhbnRpdHknLFxuICAgIE5PVF9JTVBMRU1FTlRFRCA9ICdub3RfaW1wbGVtZW50ZWQnLFxuICB9XG4gIGV4cG9ydCBlbnVtIFVwZGF0ZVR5cGUge1xuICAgIEFUVFJJQlVURSA9ICdBdHRyaWJ1dGUnLFxuICAgIEFUVFJJQlVURV9RVUFOVElUWSA9ICdBdHRyaWJ1dGVRdWFudGl0eScsXG4gICAgVkFMVUVfUVVBTlRJVFkgPSAnVmFsdWVRdWFudGl0eScsXG4gIH1cblxuICBleHBvcnQgZW51bSBBdHRyaWJ1dGVPdmVydmlld1R5cGUge1xuICAgIEdFTkVSQUwgPSAnZ2VuZXJhbCcsXG4gICAgQlVORExFID0gJ2J1bmRsZScsXG4gIH1cblxuICBleHBvcnQgZW51bSBWYWxpZGF0aW9uVHlwZSB7XG4gICAgTk9ORSA9ICdOT05FJyxcbiAgICBOVU1FUklDID0gJ05VTUVSSUMnLFxuICB9XG4gIGV4cG9ydCBlbnVtIE92ZXJ2aWV3RmlsdGVyIHtcbiAgICBWSVNJQkxFID0gJ1BSSU1BUlknLFxuICAgIFVTRVJfSU5QVVQgPSAnVVNFUl9JTlBVVCcsXG4gICAgUFJJQ0VfUkVMRVZBTlQgPSAnUFJJQ0VfUkVMRVZBTlQnLFxuICB9XG5cbiAgZXhwb3J0IGNvbnN0IENvbmZsaWN0SWRQcmVmaXggPSAnQ09ORkxJQ1QnO1xuICBleHBvcnQgY29uc3QgQ29uZmxpY3RIZWFkZXJJZCA9ICdDT05GTElDVF9IRUFERVInO1xuICBleHBvcnQgY29uc3QgQ3VzdG9tVWlUeXBlSW5kaWNhdG9yID0gJ19fXyc7XG4gIGV4cG9ydCBjb25zdCBSZXRyYWN0VmFsdWVDb2RlID0gJyMjI1JFVFJBQ1RfVkFMVUVfQ09ERSMjIyc7XG59XG4iXX0=