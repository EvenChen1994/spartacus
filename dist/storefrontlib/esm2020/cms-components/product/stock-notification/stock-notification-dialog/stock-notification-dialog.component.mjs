/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostListener, } from '@angular/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "../../../../layout/index";
import * as i3 from "@angular/common";
import * as i4 from "@angular/router";
import * as i5 from "../../../../shared/components/spinner/spinner.component";
import * as i6 from "../../../../layout/a11y/keyboard-focus/focus.directive";
export class StockNotificationDialogComponent {
    handleClick(event) {
        if (event.target.tagName === this.el.nativeElement.tagName) {
            this.close('Cross click');
        }
    }
    constructor(interestsService, launchDialogService, el) {
        this.interestsService = interestsService;
        this.launchDialogService = launchDialogService;
        this.el = el;
        this.subscription = new Subscription();
        this.enabledPrefs = [];
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: 'button',
            focusOnEscape: true,
        };
    }
    close(reason) {
        this.launchDialogService.closeDialog(reason);
    }
    ngOnInit() {
        this.subscription.add(this.launchDialogService.data$.subscribe((data) => {
            if (data) {
                this.init(data.subscribeSuccess$, data.enabledPrefs);
            }
        }));
    }
    init(subscribeSuccess$, enabledPrefs) {
        this.subscribeSuccess$ = subscribeSuccess$;
        this.enabledPrefs = enabledPrefs;
    }
    ngOnDestroy() {
        if (this.subscribeSuccess$) {
            this.subscribeSuccess$
                .subscribe((success) => {
                if (success) {
                    this.interestsService.resetAddInterestState();
                }
            })
                .unsubscribe();
        }
        this.subscription.unsubscribe();
    }
}
StockNotificationDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: StockNotificationDialogComponent, deps: [{ token: i1.UserInterestsService }, { token: i2.LaunchDialogService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
StockNotificationDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: StockNotificationDialogComponent, selector: "cx-stock-notification-dialog", host: { listeners: { "click": "handleClick($event)" } }, ngImport: i0, template: "<div\n  class=\"cx-stock-notification-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-stock-notification-container\">\n    <div class=\"cx-dialog-header cx-modal-header\">\n      <div class=\"cx-dialog-title modal-title\">\n        {{ 'stockNotification.subscriptionDialog.header' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"close\"\n        tabindex=\"-1\"\n        (click)=\"close('Button clicked')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <ng-container *ngIf=\"subscribeSuccess$ | async; else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <div class=\"cx-dialog-body modal-body\">\n        <div class=\"cx-stock-notification-content\">\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedPrefix'\n                | cxTranslate\n            }}\n          </p>\n          <p *ngFor=\"let preference of enabledPrefs\" class=\"channels\">\n            <span>{{ preference.channel }}</span\n            ><span *ngIf=\"preference.value\">{{ ': ' + preference.value }}</span>\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedSuffix'\n                | cxTranslate\n            }}\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'notificationPreference' } | cxUrl\"\n              class=\"link-prefs cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageChannelsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsSuffix'\n                | cxTranslate\n            }}\n          </p>\n\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'myInterests' } | cxUrl\"\n              class=\"link-interests cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageSubscriptionsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsSuffix'\n                | cxTranslate\n            }}\n          </p>\n        </div>\n      </div>\n      <div class=\"cx-modal-footer\">\n        <div class=\"row\">\n          <div\n            class=\"\n              cx-dialog-actions\n              col-sm-12 col-md-4\n              offset-md-8\n              col-lg-3\n              offset-lg-9\n            \"\n          >\n            <button\n              class=\"btn btn-primary btn-block btn-ok\"\n              type=\"button\"\n              (click)=\"close('Button clicked')\"\n            >\n              {{ 'stockNotification.subscriptionDialog.okBtn' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"cx-dialog-body modal-body\">\n      <p>\n        {{ 'stockNotification.subscriptionDialog.subscribing' | cxTranslate }}\n      </p>\n      <div class=\"cx-dialog-row\">\n        <div class=\"col-sm-12\">\n          <cx-spinner></cx-spinner>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i5.SpinnerComponent, selector: "cx-spinner" }, { kind: "directive", type: i6.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i1.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: StockNotificationDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-stock-notification-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  class=\"cx-stock-notification-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-stock-notification-container\">\n    <div class=\"cx-dialog-header cx-modal-header\">\n      <div class=\"cx-dialog-title modal-title\">\n        {{ 'stockNotification.subscriptionDialog.header' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"close\"\n        tabindex=\"-1\"\n        (click)=\"close('Button clicked')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <ng-container *ngIf=\"subscribeSuccess$ | async; else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <div class=\"cx-dialog-body modal-body\">\n        <div class=\"cx-stock-notification-content\">\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedPrefix'\n                | cxTranslate\n            }}\n          </p>\n          <p *ngFor=\"let preference of enabledPrefs\" class=\"channels\">\n            <span>{{ preference.channel }}</span\n            ><span *ngIf=\"preference.value\">{{ ': ' + preference.value }}</span>\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.notifiedSuffix'\n                | cxTranslate\n            }}\n          </p>\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'notificationPreference' } | cxUrl\"\n              class=\"link-prefs cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageChannelsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageChannelsSuffix'\n                | cxTranslate\n            }}\n          </p>\n\n          <p class=\"cx-stock-notification-text\">\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsPrefix'\n                | cxTranslate\n            }}\n            <a\n              (click)=\"close('Link clicked')\"\n              [routerLink]=\"{ cxRoute: 'myInterests' } | cxUrl\"\n              class=\"link-interests cx-stock-notification-link\"\n            >\n              {{\n                'stockNotification.subscriptionDialog.manageSubscriptionsLink'\n                  | cxTranslate\n              }}</a\n            >\n            {{\n              'stockNotification.subscriptionDialog.manageSubscriptionsSuffix'\n                | cxTranslate\n            }}\n          </p>\n        </div>\n      </div>\n      <div class=\"cx-modal-footer\">\n        <div class=\"row\">\n          <div\n            class=\"\n              cx-dialog-actions\n              col-sm-12 col-md-4\n              offset-md-8\n              col-lg-3\n              offset-lg-9\n            \"\n          >\n            <button\n              class=\"btn btn-primary btn-block btn-ok\"\n              type=\"button\"\n              (click)=\"close('Button clicked')\"\n            >\n              {{ 'stockNotification.subscriptionDialog.okBtn' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"cx-dialog-body modal-body\">\n      <p>\n        {{ 'stockNotification.subscriptionDialog.subscribing' | cxTranslate }}\n      </p>\n      <div class=\"cx-dialog-row\">\n        <div class=\"col-sm-12\">\n          <cx-spinner></cx-spinner>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.UserInterestsService }, { type: i2.LaunchDialogService }, { type: i0.ElementRef }]; }, propDecorators: { handleClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,