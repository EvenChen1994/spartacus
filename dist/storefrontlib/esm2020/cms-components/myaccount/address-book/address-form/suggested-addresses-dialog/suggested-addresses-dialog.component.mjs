/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostListener, } from '@angular/core';
import { take } from 'rxjs/operators';
import { ICON_TYPE } from '../../../../misc/icon/index';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../layout";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
import * as i4 from "../../../../misc/icon/icon.component";
import * as i5 from "../../../../../layout/a11y/keyboard-focus/focus.directive";
import * as i6 from "@spartacus/core";
export class SuggestedAddressDialogComponent {
    handleClick(event) {
        if (event.target.tagName === this.el.nativeElement.tagName) {
            this.closeModal('Cross click');
        }
    }
    constructor(launchDialogService, el) {
        this.launchDialogService = launchDialogService;
        this.el = el;
        this.iconTypes = ICON_TYPE;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: 'button',
            focusOnEscape: true,
        };
        this.data$ = this.launchDialogService.data$;
    }
    ngOnInit() {
        this.data$.pipe(take(1)).subscribe((data) => this.setSelectedAddress(data));
    }
    closeModal(reason) {
        this.launchDialogService.closeDialog(reason);
    }
    setSelectedAddress(data) {
        this.selectedAddress = data.suggestedAddresses?.length
            ? data.suggestedAddresses[0]
            : data.enteredAddress;
    }
}
SuggestedAddressDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: SuggestedAddressDialogComponent, deps: [{ token: i1.LaunchDialogService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
SuggestedAddressDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: SuggestedAddressDialogComponent, selector: "cx-suggested-addresses-dialog", host: { listeners: { "click": "handleClick($event)" } }, ngImport: i0, template: "<div\n  class=\"cx-suggested-addresses-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal('Escape clicked')\"\n>\n  <div *ngIf=\"data$ | async as data\" class=\"cx-suggested-addresses-container\">\n    <div class=\"cx-suggested-addresses-header cx-modal-header\">\n      <div class=\"cx-suggested-addresses-title\">\n        {{ 'addressSuggestion.verifyYourAddress' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        (click)=\"closeModal('Cross click')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <div class=\"cx-suggested-addresses-body\" ngForm>\n      <div class=\"cx-dialog-info\">\n        <p>\n          {{ 'addressSuggestion.ensureAccuracySuggestChange' | cxTranslate }}\n          {{ 'addressSuggestion.chooseAddressToUse' | cxTranslate }}\n        </p>\n      </div>\n\n      <div class=\"cx-dialog-options\">\n        <div\n          class=\"form-check\"\n          *ngFor=\"\n            let suggestedAddress of data.suggestedAddresses;\n            let i = index\n          \"\n        >\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"suggestedAddress\"\n            [id]=\"'suggested-addresses--suggested-' + i\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            [for]=\"'suggested-addresses--suggested-' + i\"\n          >\n            {{ 'addressSuggestion.suggestedAddress' | cxTranslate }}\n            {{ data.suggestedAddresses.length > 1 ? i + 1 : null }}\n          </label>\n          <div class=\"cx-dialog-suggested\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">{{ suggestedAddress?.firstName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.lastName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ suggestedAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.town }}</div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"data.enteredAddress\"\n            id=\"suggested-addresses--entered\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            for=\"suggested-addresses--entered\"\n          >\n            {{ 'addressSuggestion.enteredAddress' | cxTranslate }}\n          </label>\n          <div class=\"cx-dialog-entered\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.firstName }}\n                {{ data.enteredAddress?.lastName }}\n              </div>\n              <div class=\"cx-card-label\">{{ data.enteredAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ data.enteredAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.town }}\n                {{ data.enteredAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"cx-suggested-addresses-footer cx-modal-footer\">\n      <div class=\"row\">\n        <div class=\"cx-dialog-actions col-sm-12 col-md-12 col-lg-6 offset-lg-6\">\n          <button\n            class=\"btn btn-secondary cx-dialog-buttons\"\n            (click)=\"closeModal('Edit address')\"\n          >\n            {{ 'addressSuggestion.editAddress' | cxTranslate }}\n          </button>\n          <button\n            cxAutoFocus\n            class=\"btn btn-primary cx-dialog-buttons\"\n            (click)=\"closeModal(selectedAddress)\"\n          >\n            {{ 'addressSuggestion.saveAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i3.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i4.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i5.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: SuggestedAddressDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-suggested-addresses-dialog', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div\n  class=\"cx-suggested-addresses-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal('Escape clicked')\"\n>\n  <div *ngIf=\"data$ | async as data\" class=\"cx-suggested-addresses-container\">\n    <div class=\"cx-suggested-addresses-header cx-modal-header\">\n      <div class=\"cx-suggested-addresses-title\">\n        {{ 'addressSuggestion.verifyYourAddress' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        (click)=\"closeModal('Cross click')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <div class=\"cx-suggested-addresses-body\" ngForm>\n      <div class=\"cx-dialog-info\">\n        <p>\n          {{ 'addressSuggestion.ensureAccuracySuggestChange' | cxTranslate }}\n          {{ 'addressSuggestion.chooseAddressToUse' | cxTranslate }}\n        </p>\n      </div>\n\n      <div class=\"cx-dialog-options\">\n        <div\n          class=\"form-check\"\n          *ngFor=\"\n            let suggestedAddress of data.suggestedAddresses;\n            let i = index\n          \"\n        >\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"suggestedAddress\"\n            [id]=\"'suggested-addresses--suggested-' + i\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            [for]=\"'suggested-addresses--suggested-' + i\"\n          >\n            {{ 'addressSuggestion.suggestedAddress' | cxTranslate }}\n            {{ data.suggestedAddresses.length > 1 ? i + 1 : null }}\n          </label>\n          <div class=\"cx-dialog-suggested\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">{{ suggestedAddress?.firstName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.lastName }}</div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ suggestedAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">{{ suggestedAddress?.town }}</div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ suggestedAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"data.enteredAddress\"\n            id=\"suggested-addresses--entered\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            for=\"suggested-addresses--entered\"\n          >\n            {{ 'addressSuggestion.enteredAddress' | cxTranslate }}\n          </label>\n          <div class=\"cx-dialog-entered\">\n            <div class=\"cx-card-container\">\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.firstName }}\n                {{ data.enteredAddress?.lastName }}\n              </div>\n              <div class=\"cx-card-label\">{{ data.enteredAddress?.line1 }}</div>\n              <div class=\"cx-card-label\">\n                <span>{{ data.enteredAddress?.line2 }}</span>\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.town }}\n                {{ data.enteredAddress?.region?.isocode }}\n              </div>\n              <div class=\"cx-card-label\">\n                {{ data.enteredAddress?.postalCode }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"cx-suggested-addresses-footer cx-modal-footer\">\n      <div class=\"row\">\n        <div class=\"cx-dialog-actions col-sm-12 col-md-12 col-lg-6 offset-lg-6\">\n          <button\n            class=\"btn btn-secondary cx-dialog-buttons\"\n            (click)=\"closeModal('Edit address')\"\n          >\n            {{ 'addressSuggestion.editAddress' | cxTranslate }}\n          </button>\n          <button\n            cxAutoFocus\n            class=\"btn btn-primary cx-dialog-buttons\"\n            (click)=\"closeModal(selectedAddress)\"\n          >\n            {{ 'addressSuggestion.saveAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LaunchDialogService }, { type: i0.ElementRef }]; }, propDecorators: { handleClick: [{
                type: HostListener,
                args: ['click', ['$event']]
            }] } });
//# sourceMappingURL=data:application/json;base64,