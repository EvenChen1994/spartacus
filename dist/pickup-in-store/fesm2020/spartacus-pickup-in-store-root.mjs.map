{"version":3,"file":"spartacus-pickup-in-store-root.mjs","sources":["../../../feature-libs/pickup-in-store/root/feature-name.ts","../../../feature-libs/pickup-in-store/root/facade/intended-pickup-location.facade.ts","../../../feature-libs/pickup-in-store/root/facade/pickup-locations-search.facade.ts","../../../feature-libs/pickup-in-store/root/facade/pickup-option.facade.ts","../../../feature-libs/pickup-in-store/root/facade/preferred-store.facade.ts","../../../feature-libs/pickup-in-store/root/facade/index.ts","../../../feature-libs/pickup-in-store/root/model/augmented-core.model.ts","../../../feature-libs/pickup-in-store/root/model/delivery-points.model.ts","../../../feature-libs/pickup-in-store/root/model/pickup-option.model.ts","../../../feature-libs/pickup-in-store/root/model/stock-location-search-params.model.ts","../../../feature-libs/pickup-in-store/root/model/point-of-service-names.model.ts","../../../feature-libs/pickup-in-store/root/model/index.ts","../../../feature-libs/pickup-in-store/root/pickup-in-store-constants.ts","../../../feature-libs/pickup-in-store/root/pickup-in-store-root.module.ts","../../../feature-libs/pickup-in-store/root/utils/type-utils.ts","../../../feature-libs/pickup-in-store/root/utils/utils.ts","../../../feature-libs/pickup-in-store/root/utils/index.ts","../../../feature-libs/pickup-in-store/root/public_api.ts","../../../feature-libs/pickup-in-store/root/spartacus-pickup-in-store-root.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** pickup-in-store feature name. */\nexport const PICKUP_IN_STORE_FEATURE = 'pickupInStore';\n/** pickup-in-store core feature name. */\nexport const PICKUP_IN_STORE_CORE_FEATURE = 'pickupInStoreCore';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PICKUP_IN_STORE_CORE_FEATURE } from '../feature-name';\nimport {\n  AugmentedPointOfService,\n  PickupOption,\n} from '../model/pickup-option.model';\n\n/**\n * Store the Point of Service a user wants to collect a product from before it is added to the cart.\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: IntendedPickupLocationFacade,\n      feature: PICKUP_IN_STORE_CORE_FEATURE,\n      methods: [\n        'getIntendedLocation',\n        'setIntendedLocation',\n        'removeIntendedLocation',\n        'getPickupOption',\n        'setPickupOption',\n      ],\n      async: true,\n    }),\n})\nexport abstract class IntendedPickupLocationFacade {\n  /**\n   * Get the Point of Service a user wants to collect a product from before it is added to the cart.\n   * @param productCode The product code of the product the user wants to collect.\n   */\n  abstract getIntendedLocation(\n    productCode: string\n  ): Observable<AugmentedPointOfService | undefined>;\n\n  /**\n   * Set the Point of Service a user wants to collect a product from before it is added to the cart.\n   * @param productCode The product code of the product the user wants to collect.\n   * @param location The Point of Service the user wants to collect the product from.\n   */\n  abstract setIntendedLocation(\n    productCode: string,\n    location: AugmentedPointOfService\n  ): void;\n\n  /**\n   * Remove the Point of Service a user wanted to collect a product from before it was to be added to the cart.\n   * @param productCode The product code of the product the user wants to collect.\n   */\n  abstract removeIntendedLocation(productCode: string): void;\n\n  /**\n   * Get the Pickup Option ('pickup' or 'delivery') a user wants\n   * @param productCode The product code of the product the user wants to collect.\n   */\n  abstract getPickupOption(productCode: string): Observable<PickupOption>;\n\n  /**\n   * Set the Pickup Option ('pickup' or 'delivery') a user wants\n   * @param productCode The product code of the product the user wants to set the pickup location for.\n   */\n  abstract setPickupOption(\n    productCode: string,\n    pickupOption: PickupOption\n  ): void;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  facadeFactory,\n  PointOfService,\n  PointOfServiceStock,\n  Stock,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PICKUP_IN_STORE_CORE_FEATURE } from '../feature-name';\nimport { StockLocationSearchParams } from '../model';\n\n// TODO jsdoc\n\n// TODO split this service\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: PickupLocationsSearchFacade,\n      feature: PICKUP_IN_STORE_CORE_FEATURE,\n      methods: [\n        'clearSearchResults',\n        'getHideOutOfStock',\n        'getSearchResults',\n        'getStockLevelAtStore',\n        'getStoreDetails',\n        'hasSearchStarted',\n        'isSearchRunning',\n        'loadStoreDetails',\n        'setBrowserLocation',\n        'startSearch',\n        'stockLevelAtStore',\n        'toggleHideOutOfStock',\n      ],\n      async: true,\n    }),\n})\nexport abstract class PickupLocationsSearchFacade {\n  abstract stockLevelAtStore(productCode: string, storeName: string): void;\n  abstract getStockLevelAtStore(\n    productCode: string,\n    storeName: string\n  ): Observable<Stock | undefined>;\n\n  abstract startSearch(searchParams: StockLocationSearchParams): void;\n  abstract hasSearchStarted(productCode: string): Observable<boolean>;\n  abstract isSearchRunning(): Observable<boolean>;\n  abstract getSearchResults(\n    productCode: string\n  ): Observable<PointOfServiceStock[]>;\n  abstract clearSearchResults(): void;\n  abstract getHideOutOfStock(): Observable<boolean>;\n  abstract setBrowserLocation(latitude: number, longitude: number): void;\n  abstract toggleHideOutOfStock(): void;\n\n  abstract getStoreDetails(name: string): Observable<PointOfService>;\n  abstract loadStoreDetails(name: string): void;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PICKUP_IN_STORE_CORE_FEATURE } from '../feature-name';\nimport { PickupOption } from '../model';\n\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: PickupOptionFacade,\n      feature: PICKUP_IN_STORE_CORE_FEATURE,\n      methods: [\n        'setPageContext',\n        'getPageContext',\n        'setPickupOption',\n        'getPickupOption',\n      ],\n      async: true,\n    }),\n})\nexport abstract class PickupOptionFacade {\n  abstract setPageContext(pageContext: string): void;\n  abstract getPageContext(): Observable<string>;\n  abstract setPickupOption(\n    entryNumber: number,\n    pickupOption: PickupOption\n  ): void;\n  abstract getPickupOption(\n    entryNumber: number\n  ): Observable<PickupOption | undefined>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { facadeFactory } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PICKUP_IN_STORE_CORE_FEATURE } from '../feature-name';\nimport { PointOfServiceNames } from '../model/point-of-service-names.model';\n\n/**\n * Service to store the user's preferred store for Pickup in Store in local storage.\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: () =>\n    facadeFactory({\n      facade: PreferredStoreFacade,\n      feature: PICKUP_IN_STORE_CORE_FEATURE,\n      methods: [\n        'getPreferredStore$',\n        'getPreferredStoreWithProductInStock',\n        'clearPreferredStore',\n        'setPreferredStore',\n      ],\n      async: true,\n    }),\n})\nexport abstract class PreferredStoreFacade {\n  /**\n   * Gets the user's preferred store for Pickup in Store.\n   * @returns the preferred store from the store\n   */\n  abstract getPreferredStore$(): Observable<PointOfServiceNames | null>;\n\n  /**\n   * Sets the user's preferred store for Pickup in Store.\n   * @param preferredStore the preferred store to set\n   */\n  abstract setPreferredStore(preferredStore: PointOfServiceNames): void;\n\n  /**\n   * Clears the user's preferred store for Pickup in Store.\n   */\n  abstract clearPreferredStore(): void;\n\n  /**\n   * Get the user's preferred store from local storage and only return it if it\n   * has stock for the given product.\n   * @param productCode The product code to check the stock level of\n   */\n  abstract getPreferredStoreWithProductInStock(\n    productCode: string\n  ): Observable<PointOfServiceNames>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './intended-pickup-location.facade';\nexport * from './pickup-locations-search.facade';\nexport * from './pickup-option.facade';\nexport * from './preferred-store.facade';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@spartacus/storefront';\n\ndeclare module '@spartacus/storefront' {\n  const enum LAUNCH_CALLER {\n    PICKUP_IN_STORE = 'PICKUP_IN_STORE',\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OrderEntry } from '@spartacus/cart/base/root';\nimport { PointOfService } from '@spartacus/core';\n\nexport type DeliveryPointOfServiceItems = {\n  name: string;\n  storeDetails: PointOfService;\n  value: Array<OrderEntry>;\n};\n\nexport type DeliveryPointOfService = {\n  name: string;\n  value: Array<OrderEntry>;\n  storeDetails: PointOfService;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PointOfService } from '@spartacus/core';\n\n/** The options for receiving a product, either 'delivery' or 'pickup'. */\nexport type PickupOption = 'delivery' | 'pickup';\n\n/** A point of service with the additional pickup option information. */\nexport type AugmentedPointOfService = PointOfService & {\n  pickupOption: PickupOption;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** The latitude and longitude of the user for searching for a location. */\ntype BrowserLocationSearchParameters = {\n  latitude: number;\n  longitude: number;\n};\n\n/** The free text string for search for a location. */\ntype FreeTextSearchParameters = {\n  location: string;\n};\n\n/** The search parameters for finding a location, either by latitude and longitude or a free text search. */\nexport type LocationSearchParams =\n  | BrowserLocationSearchParameters\n  | FreeTextSearchParameters;\n\n/** A product code and the search parameters for finding a store with stock for it. */\nexport type StockLocationSearchParams = {\n  productCode: string;\n} & LocationSearchParams;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PointOfServiceStock } from '@spartacus/core';\nimport { PickRequiredDeep } from '../utils';\n\nexport type PointOfServiceNames = PickRequiredDeep<\n  PointOfServiceStock,\n  'name' | 'displayName'\n>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './augmented-core.model';\nexport * from './delivery-points.model';\nexport * from './pickup-option.model';\nexport * from './stock-location-search-params.model';\nexport * from './point-of-service-names.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** The used for storing the name of the user's preferred store in browser local storage. */\nexport const PREFERRED_STORE_LOCAL_STORAGE_KEY = 'preferred_store';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  ADD_TO_CART_FEATURE,\n  CART_BASE_FEATURE,\n} from '@spartacus/cart/base/root';\nimport {\n  CmsConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\n\nimport {\n  PICKUP_IN_STORE_CORE_FEATURE,\n  PICKUP_IN_STORE_FEATURE,\n} from './feature-name';\n\nexport function defaultPickupInStoreComponentsConfig(): CmsConfig {\n  return {\n    featureModules: {\n      [PICKUP_IN_STORE_FEATURE]: {\n        cmsComponents: [\n          'CheckoutReviewPickup',\n          'MyPreferredStoreComponent',\n          'OrderConfirmationPickUpComponent',\n          'PickupInStoreDeliveryModeComponent',\n        ],\n      },\n      [PICKUP_IN_STORE_CORE_FEATURE]: PICKUP_IN_STORE_FEATURE,\n    },\n  };\n}\n\n@NgModule({\n  providers: [\n    provideDefaultConfigFactory(defaultPickupInStoreComponentsConfig),\n    // make pickup lib loaded before add-to-cart\n    provideDefaultConfig({\n      featureModules: {\n        [ADD_TO_CART_FEATURE]: {\n          dependencies: [PICKUP_IN_STORE_FEATURE],\n        },\n      },\n    }),\n    // make pickup lib loaded before cart base\n    provideDefaultConfig({\n      featureModules: {\n        [CART_BASE_FEATURE]: {\n          dependencies: [PICKUP_IN_STORE_FEATURE],\n        },\n      },\n    }),\n  ],\n})\nexport class PickupInStoreRootModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Cart } from '@spartacus/cart/base/root';\n\n/** A utility type that represents the type of items in an array without the first item */\ntype Shift<T extends any[]> = ((...t: T) => any) extends (\n  first: any,\n  ...rest: infer Rest\n) => any\n  ? Rest\n  : never;\n\n/** A distributed conditional utility type for Shift */\ntype ShiftUnion<P extends PropertyKey, T extends any[]> = T extends any[]\n  ? T[0] extends P\n    ? Shift<T>\n    : never\n  : never;\n\n/**\n * A utility type that takes a base type and a union of arrays of strings that\n * represent the paths to properties on that type. The returned type is the same\n * as the base but with all referenced properties required.\n */\ntype RequiredDeepArray<T, P extends string[]> = T extends object\n  ? Omit<T, Extract<keyof T, P[0]>> & PickRequiredDeepArray<T, P>\n  : T;\n\n/**\n * A utility type that takes a base type and a union of arrays of strings that\n * represent the paths to properties on that type. The returned type has only\n * the referenced properties and makes them all required.\n */\ntype PickRequiredDeepArray<T, P extends string[]> = T extends object\n  ? Required<{\n      [K in Extract<keyof T, P[0]>]: NonNullable<\n        PickRequiredDeepArray<T[K], ShiftUnion<P[0], P>>\n      >;\n    }>\n  : T;\n\n/** A utility type that takes a string literal type and splits it are the `.` character */\ntype PathToStringArray<T extends string> =\n  T extends `${infer Head}.${infer Tail}`\n    ? [...PathToStringArray<Head>, ...PathToStringArray<Tail>]\n    : [T];\n\n/**\n * A utility type that takes a base type and a union of strings that represent\n * the paths to properties on that type. The returned type is the same as the\n * base but with all referenced properties required.\n *\n * @example ```ts\n    type Foo = { a?: 2, b?: { c?: 3, d: 4 } }\n    type A = RequiredDeepPath<Foo, \"a\">; // {a: 2, b?: { c?: 3, d: 4 } }\n    type B = RequiredDeepPath<Foo, \"b\">; // {a?: 2, b: { c?: 3, d: 4 } }\n    type BC = RequiredDeepPath<Foo, \"b.c\">; // {a?: 2, b: { c: 3, d: 4 } }\n    type ABC = RequiredDeepPath<Foo, \"a\" | \"b.c\">; // {a: 2, b: { c: 3, d: 4 } }\n * ```\n */\nexport type RequiredDeepPath<T, P extends string> = RequiredDeepArray<\n  T,\n  PathToStringArray<P>\n>;\n\n/**\n * A utility type that takes a base type and a union of strings that represent\n * the paths to properties on that type. The returned type has only the\n * referenced properties and makes them all required.\n *\n * @example ```ts\n    type Foo = { a?: 2, b?: { c?: 3, d: 4 } }\n    type A = PickRequiredDeep<Foo, \"a\">; // { a: 2 }\n    type B = PickRequiredDeep<Foo, \"b\">; // { b: {} }\n    type BC = PickRequiredDeep<Foo, \"b.c\">; // { b: { c: 3 }}\n    type ABC = PickRequiredDeep<Foo, \"a\" | \"b.c\">; // { a: 2, b: { c: 3 } }\n * ```\n */\nexport type PickRequiredDeep<T, P extends string> = PickRequiredDeepArray<\n  T,\n  PathToStringArray<P>\n>;\n\n/** A cart with the ids required for pickup in store */\nexport type CartWithIdAndUserId = RequiredDeepPath<\n  Cart,\n  'guid' | 'user.uid' | 'code'\n>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Cart } from '@spartacus/cart/base/root';\nimport { CartWithIdAndUserId } from './type-utils';\n\nexport const getProperty = (\n  o: Record<string, any> | undefined | null,\n  property: string\n): any | null => {\n  if (!o) {\n    return null;\n  }\n  if (o.hasOwnProperty(property)) {\n    return o[property];\n  }\n  return null;\n};\n\n/** Custom type guard to ensure we have a cart with the required ids for pickup in store */\nexport function cartWithIdAndUserId(\n  cart: Cart | undefined\n): cart is CartWithIdAndUserId {\n  return (\n    !!cart &&\n    cart.guid !== undefined &&\n    cart.user !== undefined &&\n    cart.user.uid !== undefined &&\n    cart.code !== undefined\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './type-utils';\nexport * from './utils';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facade/index';\nexport * from './feature-name';\nexport * from './model/index';\nexport * from './pickup-in-store-constants';\nexport * from './pickup-in-store-root.module';\nexport * from './utils/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}