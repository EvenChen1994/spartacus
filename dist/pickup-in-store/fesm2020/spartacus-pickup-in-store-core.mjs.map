{"version":3,"file":"spartacus-pickup-in-store-core.mjs","sources":["../../../feature-libs/pickup-in-store/core/config/default-pickup-in-store-config.ts","../../../feature-libs/pickup-in-store/core/config/pickup-in-store-config.ts","../../../feature-libs/pickup-in-store/core/config/index.ts","../../../feature-libs/pickup-in-store/core/connectors/pickup-location.adapter.ts","../../../feature-libs/pickup-in-store/core/connectors/pickup-location.connector.ts","../../../feature-libs/pickup-in-store/core/connectors/stock.adapter.ts","../../../feature-libs/pickup-in-store/core/connectors/stock.connector.ts","../../../feature-libs/pickup-in-store/core/connectors/index.ts","../../../feature-libs/pickup-in-store/core/store/actions/browser-location.action.ts","../../../feature-libs/pickup-in-store/core/store/actions/default-point-of-service-name.action.ts","../../../feature-libs/pickup-in-store/core/store/actions/pickup-location.action.ts","../../../feature-libs/pickup-in-store/core/store/actions/pickup-option.action.ts","../../../feature-libs/pickup-in-store/core/store/stock-state.ts","../../../feature-libs/pickup-in-store/core/store/actions/stock.action.ts","../../../feature-libs/pickup-in-store/core/store/actions/hide-out-of-stock.action.ts","../../../feature-libs/pickup-in-store/core/store/actions/index.ts","../../../feature-libs/pickup-in-store/core/store/effects/default-point-of-service-name.effect.ts","../../../feature-libs/pickup-in-store/core/store/effects/pickup-location.effect.ts","../../../feature-libs/pickup-in-store/core/store/effects/stock.effect.ts","../../../feature-libs/pickup-in-store/core/store/effects/index.ts","../../../feature-libs/pickup-in-store/core/store/pickup-location-state.ts","../../../feature-libs/pickup-in-store/core/store/pickup-option-state.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-locations/default-point-of-service-name.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-locations/pickup-locations.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-locations/store-details.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-locations/index.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-option/page-context.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-option/pickup-option.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/pickup-option/index.ts","../../../feature-libs/pickup-in-store/core/store/reducers/stock/browser-location.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/stock/hide-out-of-stock.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/stock/stock-level.reducer.ts","../../../feature-libs/pickup-in-store/core/store/reducers/stock/index.ts","../../../feature-libs/pickup-in-store/core/store/reducers/index.ts","../../../feature-libs/pickup-in-store/core/store/pickup-in-store-store.module.ts","../../../feature-libs/pickup-in-store/core/store/selectors/feature.selectors.ts","../../../feature-libs/pickup-in-store/core/store/selectors/default-point-of-service-name.selectors.ts","../../../feature-libs/pickup-in-store/core/store/selectors/hide-out-of-stock.selectors.ts","../../../feature-libs/pickup-in-store/core/store/selectors/pickup-locations.selectors.ts","../../../feature-libs/pickup-in-store/core/store/selectors/pickup-option.selectors.ts","../../../feature-libs/pickup-in-store/core/utils/utils.ts","../../../feature-libs/pickup-in-store/core/utils/index.ts","../../../feature-libs/pickup-in-store/core/store/selectors/stock.selectors.ts","../../../feature-libs/pickup-in-store/core/store/selectors/index.ts","../../../feature-libs/pickup-in-store/core/store/index.ts","../../../feature-libs/pickup-in-store/core/services/preferred-store.service.ts","../../../feature-libs/pickup-in-store/core/services/index.ts","../../../feature-libs/pickup-in-store/core/facade/intended-pickup-location.service.ts","../../../feature-libs/pickup-in-store/core/facade/pickup-locations-search.service.ts","../../../feature-libs/pickup-in-store/core/facade/pickup-option.service.ts","../../../feature-libs/pickup-in-store/core/facade/facade-providers.ts","../../../feature-libs/pickup-in-store/core/facade/index.ts","../../../feature-libs/pickup-in-store/core/pickup-in-store-core.module.ts","../../../feature-libs/pickup-in-store/core/public_api.ts","../../../feature-libs/pickup-in-store/core/spartacus-pickup-in-store-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PickupInStoreConfig } from './pickup-in-store-config';\n\nexport const defaultPickupInStoreConfig: PickupInStoreConfig = {\n  pickupInStore: {\n    consentTemplateId: 'STORE_USER_INFORMATION',\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PickupInStoreConfig {\n  pickupInStore?: {\n    consentTemplateId?: string;\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends PickupInStoreConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './default-pickup-in-store-config';\nexport * from './pickup-in-store-config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PointOfService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Adapter for getting store details.\n */\nexport abstract class PickupLocationAdapter {\n  /**\n   * Get the store details by store name.\n   * @param storeName The store name to get details for\n   */\n  abstract getStoreDetails(storeName: string): Observable<PointOfService>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PointOfService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { PickupLocationAdapter } from './pickup-location.adapter';\n\n/**\n * Connector for getting store details.\n */\n@Injectable({ providedIn: 'root' })\nexport class PickupLocationConnector {\n  constructor(protected adapter: PickupLocationAdapter) {\n    // Intentional empty constructor\n  }\n\n  /**\n   * Get the store details by store name.\n   * @param storeName The store name to get details for\n   */\n  getStoreDetails(storeName: string): Observable<PointOfService> {\n    return this.adapter.getStoreDetails(storeName);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Stock, StoreFinderStockSearchPage } from '@spartacus/core';\nimport { LocationSearchParams } from '@spartacus/pickup-in-store/root';\nimport { Observable } from 'rxjs';\n\n/**\n * Adapter for finding stock levels of a product in stores.\n */\nexport abstract class StockAdapter {\n  /**\n   * Finds stock levels of a product at stores near a location.\n   * @param productCode the product code of the product to find stock levels for\n   * @param location the location to find stock levels at, either lat long or free text search\n   */\n  abstract loadStockLevels(\n    productCode: string,\n    location: LocationSearchParams\n  ): Observable<StoreFinderStockSearchPage>;\n\n  /**\n   * Finds stock levels of a product at an individual store.\n   * @param productCode the product code of the product to find stock levels for\n   * @param storeName the name of the store to find stock levels at\n   */\n  abstract loadStockLevelAtStore(\n    productCode: string,\n    storeName: string\n  ): Observable<Stock>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Stock, StoreFinderStockSearchPage } from '@spartacus/core';\nimport { LocationSearchParams } from '@spartacus/pickup-in-store/root';\nimport { Observable } from 'rxjs';\nimport { StockAdapter } from './stock.adapter';\n\n/**\n * Connector for finding stock levels of a product in stores.\n */\n@Injectable({ providedIn: 'root' })\nexport class StockConnector {\n  constructor(protected adapter: StockAdapter) {}\n\n  /**\n   * Finds stock levels of a product at stores near a location.\n   * @param productCode the product code of the product to find stock levels for\n   * @param location the location to find stock levels at, either lat long or free text search\n   */\n  loadStockLevels(\n    productCode: string,\n    location: LocationSearchParams\n  ): Observable<StoreFinderStockSearchPage> {\n    return this.adapter.loadStockLevels(productCode, location);\n  }\n\n  /**\n   * Finds stock levels of a product at an individual store.\n   * @param productCode the product code of the product to find stock levels for\n   * @param storeName the name of the store to find stock levels at\n   */\n  loadStockLevelAtStore(\n    productCode: string,\n    storeName: string\n  ): Observable<Stock> {\n    return this.adapter.loadStockLevelAtStore(productCode, storeName);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './pickup-location.adapter';\nexport * from './pickup-location.connector';\nexport * from './stock.adapter';\nexport * from './stock.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction, props } from '@ngrx/store';\n\nexport const ADD_BROWSER_LOCATION = '[Pickup Locations] Add Browser Location';\n\nexport type AddBrowserLocationProps = {\n  longitude: number;\n  latitude: number;\n};\n\nexport const AddBrowserLocation = createAction(\n  ADD_BROWSER_LOCATION,\n  props<{ payload: AddBrowserLocationProps }>()\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction, props } from '@ngrx/store';\nimport { PointOfServiceNames } from '@spartacus/pickup-in-store/root';\n\nexport const LOAD_DEFAULT_POINT_OF_SERVICE =\n  '[Default Point Of Service] Load Default Point Of Service';\nexport const LOAD_DEFAULT_POINT_OF_SERVICE_SUCCESS =\n  '[Default Point Of Service] Load Default Point Of Service Success';\nexport const SET_DEFAULT_POINT_OF_SERVICE =\n  '[Default Point Of Service] Set Default Point Of Service';\n\nexport const LoadDefaultPointOfService = createAction(\n  LOAD_DEFAULT_POINT_OF_SERVICE\n);\n\nexport const LoadDefaultPointOfServiceSuccess = createAction(\n  LOAD_DEFAULT_POINT_OF_SERVICE_SUCCESS,\n  props<{ payload: PointOfServiceNames }>()\n);\n\nexport const SetDefaultPointOfService = createAction(\n  SET_DEFAULT_POINT_OF_SERVICE,\n  props<{ payload: PointOfServiceNames }>()\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction, props } from '@ngrx/store';\nimport { PointOfService } from '@spartacus/core';\nimport {\n  AugmentedPointOfService,\n  PickupOption,\n} from '@spartacus/pickup-in-store/root';\n\nexport const ADD_LOCATION = '[Pickup Locations] Add Location';\nexport const REMOVE_LOCATION = '[Pickup Locations] Remove Location';\nexport const SET_PICKUP_OPTION = '[Pickup Locations] Set Pickup Option';\nexport const GET_STORE_DETAILS = '[Pickup Locations] Get Store Details';\nexport const STORE_DETAILS_SUCCESS =\n  '[Pickup Locations] Get Store Details Success';\nexport const STORE_DETAILS_FAIL = '[Pickup Locations] Get Store Details Fail';\n\nexport const SET_PICKUP_OPTION_TO_DELIVERY =\n  '[Pickup Locations] Set Pickup Option To Delivery';\nexport const SET_PICKUP_OPTION_TO_DELIVERY_SUCCESS =\n  '[Pickup Locations] Set Pickup Option To Delivery Success';\n\nexport const SET_PICKUP_OPTION_TO_PICKUP_IN_STORE =\n  '[Pickup Locations] Set Pickup Option To Pickup In Store';\nexport const SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS =\n  '[Pickup Locations] Set Pickup Option To Pickup In Store Success';\nexport const CART_RELOAD_SUCCESS = '[Pickup Locations] CART_RELOAD_SUCCESS';\nexport const DELIVERY_MODE_SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS =\n  '[Pickup Locations CHECKOUT] CHECKOUT_SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS';\nexport type AddLocationProps = {\n  payload: {\n    productCode: string;\n    location: AugmentedPointOfService;\n  };\n};\n\nexport type SetPickupOptionProps = {\n  productCode: string;\n  pickupOption: PickupOption;\n};\n\n/**\n * Add a proposed pickup location for a product code.\n */\nexport const AddLocation = createAction(\n  ADD_LOCATION,\n  props<AddLocationProps>()\n);\n\n/**\n * Remove a proposed pickup location for a product code.\n */\nexport const RemoveLocation = createAction(\n  REMOVE_LOCATION,\n  props<{ payload: string }>()\n);\n\n/**\n * Set pickup option for a product code.\n */\n\nexport const SetPickupOption = createAction(\n  SET_PICKUP_OPTION,\n  props<{ payload: SetPickupOptionProps }>()\n);\n\n/**\n * Get Store Details By Id\n */\nexport const GetStoreDetailsById = createAction(\n  GET_STORE_DETAILS,\n  props<{ payload: string }>()\n);\n\nexport const SetStoreDetailsSuccess = createAction(\n  STORE_DETAILS_SUCCESS,\n  props<{ payload: PointOfService }>()\n);\n\nexport const SetStoreDetailsFailure = createAction(\n  STORE_DETAILS_FAIL,\n  props<{ payload: any }>()\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction, props } from '@ngrx/store';\nimport { PickupOption } from '@spartacus/pickup-in-store/root';\n\nconst SET_PICKUP_OPTION = '[PickupOption] Set Pickup Option';\nconst REMOVE_PICKUP_OPTION = '[PickupOption] Remove Pickup Option';\nconst REMOVE_ALL_PICKUP_OPTION = '[PickupOption] Remove All Pickup Option';\n\nconst SET_PAGE_CONTEXT = '[PickupOption] Set Page Context';\n\nexport const SetPickupOption = createAction(\n  SET_PICKUP_OPTION,\n  props<{ payload: { entryNumber: number; pickupOption: PickupOption } }>()\n);\n\nexport const RemovePickupOption = createAction(\n  REMOVE_PICKUP_OPTION,\n  props<{ payload: { entryNumber: number } }>()\n);\n\nexport const RemoveAllPickupOptions = createAction(REMOVE_ALL_PICKUP_OPTION);\n\nexport const SetPageContext = createAction(\n  SET_PAGE_CONTEXT,\n  props<{ payload: { pageContext: string } }>()\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils, Stock, StoreFinderStockSearchPage } from '@spartacus/core';\n\nexport const STOCK_FEATURE = 'stock';\nexport const STOCK_DATA = '[Stock] Stock Data';\n\nexport interface StateWithStock {\n  [STOCK_FEATURE]: StockState;\n}\n\nexport interface BrowserLocation {\n  latitude: number | null;\n  longitude: number | null;\n}\n\nexport interface StockState {\n  browserLocation: BrowserLocation;\n  hideOutOfStock: boolean;\n  stockLevel: StateUtils.LoaderState<StockLevelState>;\n  stockLevelAtStore: Record<string, Record<string, Stock | undefined>>;\n}\n\nexport type StockLevelState = Record<string, StoreFinderStockSearchPage>;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction, props } from '@ngrx/store';\nimport { StateUtils, Stock, StoreFinderStockSearchPage } from '@spartacus/core';\nimport { StockLocationSearchParams } from '@spartacus/pickup-in-store/root';\nimport { STOCK_DATA } from '../stock-state';\n\nexport const STOCK_LEVEL = '[Stock] Get Stock Level';\nexport const STOCK_LEVEL_ON_HOLD = '[Stock] On Hold';\nexport const STOCK_LEVEL_FAIL = '[Stock] Get Stock Level Fail';\nexport const STOCK_LEVEL_SUCCESS = '[Stock] Get Stock Level Success';\nexport const CLEAR_STOCK_DATA = '[Stock] Clear Data';\n\nexport const STOCK_LEVEL_AT_STORE = '[Stock] Get Stock Level at Store';\nexport const STOCK_LEVEL_AT_STORE_SUCCESS =\n  '[Stock] Get Stock Level at Store Success';\n\nexport class StockLevel extends StateUtils.LoaderLoadAction {\n  readonly type = STOCK_LEVEL;\n  constructor(public payload: StockLocationSearchParams) {\n    super(STOCK_DATA);\n  }\n}\n\nexport class StockLevelOnHold extends StateUtils.LoaderLoadAction {\n  readonly type = STOCK_LEVEL_ON_HOLD;\n  constructor() {\n    super(STOCK_DATA);\n  }\n}\n\nexport class StockLevelFail extends StateUtils.LoaderFailAction {\n  readonly type = STOCK_LEVEL_FAIL;\n  constructor(public payload: any) {\n    super(STOCK_DATA, payload);\n  }\n}\n\nexport type StockLevelSuccessPayload = {\n  productCode: string;\n  stockLevels: StoreFinderStockSearchPage;\n};\n\nexport class StockLevelSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = STOCK_LEVEL_SUCCESS;\n  constructor(public payload: StockLevelSuccessPayload) {\n    super(STOCK_DATA);\n  }\n}\n\nexport class ClearStockData extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_STOCK_DATA;\n  constructor() {\n    super(STOCK_DATA);\n  }\n}\n\nexport type StockLevelAction =\n  | StockLevel\n  | StockLevelOnHold\n  | StockLevelFail\n  | StockLevelSuccess\n  | ClearStockData;\n\ntype StockLevelAtStorePayload = { productCode: string; storeName: string };\n\n/**\n * Add a proposed pickup location for a product code.\n */\nexport const StockLevelAtStore = createAction(\n  STOCK_LEVEL_AT_STORE,\n  props<{ payload: StockLevelAtStorePayload }>()\n);\n\nexport type StockLevelAtStoreAction = ReturnType<typeof StockLevelAtStore>;\n\ntype StockLevelAtStoreSuccessPayload = StockLevelAtStorePayload & {\n  stockLevel: Stock;\n};\n\n/**\n * Add the stock level for a product at a store.\n */\nexport const StockLevelAtStoreSuccess = createAction(\n  STOCK_LEVEL_AT_STORE_SUCCESS,\n  props<{ payload: StockLevelAtStoreSuccessPayload }>()\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createAction } from '@ngrx/store';\n\nexport const TOGGLE_HIDE_OUT_OF_STOCK_OPTIONS =\n  '[Stock] Toggle Hide Out Of Stock Options';\n\nexport const ToggleHideOutOfStockOptionsAction = createAction(\n  TOGGLE_HIDE_OUT_OF_STOCK_OPTIONS\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as BrowserLocationActions from './browser-location.action';\nimport * as DefaultPointOfServiceActions from './default-point-of-service-name.action';\nimport * as PickupLocationActions from './pickup-location.action';\nimport * as PickupOptionActions from './pickup-option.action';\nimport * as StockLevelActions from './stock.action';\n\nexport * from './hide-out-of-stock.action';\nexport {\n  BrowserLocationActions,\n  StockLevelActions,\n  PickupLocationActions,\n  PickupOptionActions,\n  DefaultPointOfServiceActions,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  getProperty,\n  PointOfServiceNames,\n  PREFERRED_STORE_LOCAL_STORAGE_KEY,\n} from '@spartacus/pickup-in-store/root';\nimport { UserProfileFacade } from '@spartacus/user/profile/root';\nimport { iif, of } from 'rxjs';\n\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { DefaultPointOfServiceActions } from '../actions/index';\nimport { StateWithPickupLocations } from '../pickup-location-state';\n\n@Injectable()\nexport class DefaultPointOfServiceEffect {\n  constructor(\n    private actions$: Actions,\n    protected store: Store<StateWithPickupLocations>,\n    protected userProfileService: UserProfileFacade,\n    protected winRef: WindowRef\n  ) {}\n\n  loadDefaultPointOfService$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DefaultPointOfServiceActions.LOAD_DEFAULT_POINT_OF_SERVICE),\n      switchMap(() =>\n        this.userProfileService.get().pipe(\n          mergeMap((preferredStore) =>\n            iif(\n              () =>\n                !!preferredStore && !!preferredStore.defaultPointOfServiceName,\n              of({\n                name: getProperty(preferredStore, 'defaultPointOfServiceName'),\n                displayName: '',\n              }),\n              (() => {\n                const PREFERRED_STORE = this.winRef.localStorage?.getItem(\n                  PREFERRED_STORE_LOCAL_STORAGE_KEY\n                );\n                return of(\n                  PREFERRED_STORE ? JSON.parse(PREFERRED_STORE) : undefined\n                );\n              })()\n            )\n          ),\n          filter((defaultPointOfService) => defaultPointOfService),\n          map((defaultPointOfService: PointOfServiceNames) =>\n            DefaultPointOfServiceActions.LoadDefaultPointOfServiceSuccess({\n              payload: defaultPointOfService,\n            })\n          ),\n          catchError((_error) =>\n            of(\n              DefaultPointOfServiceActions.LoadDefaultPointOfServiceSuccess({\n                payload: {\n                  name: '',\n                  displayName: '',\n                },\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  setDefaultPointOfService$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(DefaultPointOfServiceActions.SET_DEFAULT_POINT_OF_SERVICE),\n      map((action): PointOfServiceNames => action['payload']),\n      tap((preferredStore: PointOfServiceNames) =>\n        this.winRef.localStorage?.setItem(\n          PREFERRED_STORE_LOCAL_STORAGE_KEY,\n          JSON.stringify(preferredStore)\n        )\n      ),\n      switchMap((preferredStore: PointOfServiceNames) =>\n        this.userProfileService\n          .update({\n            defaultPointOfServiceName: preferredStore.name,\n          })\n          .pipe(\n            map(() => DefaultPointOfServiceActions.LoadDefaultPointOfService()),\n            catchError((_error) =>\n              of(DefaultPointOfServiceActions.LoadDefaultPointOfService)\n            )\n          )\n      ),\n      map(() => DefaultPointOfServiceActions.LoadDefaultPointOfService())\n    )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { LoggerService, normalizeHttpError } from '@spartacus/core';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { PickupLocationConnector } from '../../connectors';\nimport * as PickupLocationActions from '../actions/pickup-location.action';\n\n@Injectable()\nexport class PickupLocationEffect {\n  protected logger = inject(LoggerService);\n\n  constructor(\n    private actions$: Actions,\n    private pickupLocationConnector: PickupLocationConnector\n  ) {\n    // Intentional empty constructor\n  }\n\n  storeDetails$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PickupLocationActions.GET_STORE_DETAILS),\n      map(\n        (\n          action: ReturnType<typeof PickupLocationActions.GetStoreDetailsById>\n        ) => action.payload\n      ),\n      mergeMap((storeName) =>\n        this.pickupLocationConnector.getStoreDetails(storeName).pipe(\n          map((storeDetails) =>\n            PickupLocationActions.SetStoreDetailsSuccess({\n              payload: storeDetails,\n            })\n          ),\n          catchError((error) =>\n            of(\n              PickupLocationActions.SetStoreDetailsFailure({\n                payload: normalizeHttpError(error, this.logger),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { LoggerService, normalizeHttpError } from '@spartacus/core';\nimport { of } from 'rxjs';\nimport { catchError, concatMap, map, switchMap } from 'rxjs/operators';\nimport { StockConnector } from '../../connectors/index';\nimport { StockLevelActions } from '../actions/index';\n\n@Injectable()\nexport class StockEffect {\n  protected logger = inject(LoggerService);\n\n  constructor(\n    private actions$: Actions,\n    private stockConnector: StockConnector\n  ) {\n    // Intentional empty constructor\n  }\n\n  loadStockLevels$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockLevelActions.STOCK_LEVEL),\n      map((action: StockLevelActions.StockLevel) => action.payload),\n      switchMap(({ productCode, ...location }) =>\n        this.stockConnector.loadStockLevels(productCode, location).pipe(\n          map(\n            (stockLevels) =>\n              new StockLevelActions.StockLevelSuccess({\n                productCode,\n                stockLevels,\n              })\n          ),\n          catchError((error) =>\n            of(\n              new StockLevelActions.StockLevelFail(\n                normalizeHttpError(error, this.logger)\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadStockLevelAtStore$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(StockLevelActions.STOCK_LEVEL_AT_STORE),\n      map(({ payload }: StockLevelActions.StockLevelAtStoreAction) => payload),\n      concatMap(({ productCode, storeName }) =>\n        this.stockConnector.loadStockLevelAtStore(productCode, storeName).pipe(\n          map((stockLevel) =>\n            StockLevelActions.StockLevelAtStoreSuccess({\n              payload: { productCode, storeName, stockLevel },\n            })\n          )\n        )\n      )\n    )\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DefaultPointOfServiceEffect } from './default-point-of-service-name.effect';\nimport { PickupLocationEffect } from './pickup-location.effect';\nimport { StockEffect } from './stock.effect';\n\nexport const effects: any[] = [\n  DefaultPointOfServiceEffect,\n  StockEffect,\n  PickupLocationEffect,\n];\n\nexport * from './default-point-of-service-name.effect';\nexport * from './pickup-location.effect';\nexport * from './stock.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PointOfService } from '@spartacus/core';\nimport {\n  AugmentedPointOfService,\n  PointOfServiceNames,\n} from '@spartacus/pickup-in-store/root';\n\nexport const PICKUP_LOCATIONS_FEATURE = 'pickup-locations';\n\nexport interface StateWithPickupLocations {\n  [PICKUP_LOCATIONS_FEATURE]: PickupLocationsState;\n}\n\nexport interface PickupLocationsState {\n  defaultPointOfService: PointOfServiceNames | null;\n  intendedPickupLocations: IntendedPickupLocationsState;\n  storeDetails: Record<string, PointOfService>;\n}\n\nexport type IntendedPickupLocationsState = {\n  [productCode: string]: AugmentedPointOfService;\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PickupOption } from '@spartacus/pickup-in-store/root';\n\nexport const PICKUP_OPTION_FEATURE = 'pickup-option';\n\nexport interface StateWithPickupOption {\n  [PICKUP_OPTION_FEATURE]: PickupOptionState;\n}\n\nexport type EntryPickupOption = {\n  entryNumber: number;\n  pickupOption: PickupOption;\n};\n\nexport interface PickupOptionState {\n  pageContext: string;\n  pickupOption: EntryPickupOption[];\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { DefaultPointOfServiceActions } from '../../actions';\nimport { PickupLocationsState } from '../../pickup-location-state';\n\nexport const defaultPointOfServiceInitialState: PickupLocationsState['defaultPointOfService'] =\n  null;\n\nexport const defaultPointOfServiceReducer = createReducer(\n  defaultPointOfServiceInitialState as PickupLocationsState['defaultPointOfService'],\n  on(\n    DefaultPointOfServiceActions.LoadDefaultPointOfServiceSuccess,\n    (_state, { payload }) => payload\n  )\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { PickupLocationActions } from '../../actions';\nimport { PickupLocationsState } from '../../pickup-location-state';\n\nexport const intendedPickupLocationsInitialState: PickupLocationsState['intendedPickupLocations'] =\n  {};\n\nexport const intendedPickupLocationsReducer = createReducer(\n  intendedPickupLocationsInitialState,\n  on(PickupLocationActions.AddLocation, (state, { payload }) => ({\n    ...state,\n    [payload.productCode]: payload.location,\n  })),\n  on(PickupLocationActions.RemoveLocation, (state, { payload }) => ({\n    ...state,\n    [payload]: { pickupOption: 'delivery' },\n  })),\n  on(PickupLocationActions.SetPickupOption, (state, { payload }) => ({\n    ...state,\n    [payload.productCode]: {\n      ...state[payload.productCode],\n      pickupOption: payload.pickupOption,\n    },\n  }))\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { PickupLocationActions } from '../../actions';\nimport { PickupLocationsState } from '../../pickup-location-state';\n\nexport const storeDetailsInitialState: PickupLocationsState['storeDetails'] =\n  {};\n\nexport const storeDetailsReducer = createReducer(\n  storeDetailsInitialState,\n\n  on(PickupLocationActions.SetStoreDetailsSuccess, (state, { payload }) => ({\n    ...state,\n    ...(payload.name ? { [payload.name]: payload } : {}),\n  }))\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap, MetaReducer } from '@ngrx/store';\n\nimport { PickupLocationsState } from '../../pickup-location-state';\nimport { defaultPointOfServiceReducer } from './default-point-of-service-name.reducer';\nimport { intendedPickupLocationsReducer } from './pickup-locations.reducer';\nimport { storeDetailsReducer } from './store-details.reducer';\n\nexport function getReducers(): ActionReducerMap<PickupLocationsState> {\n  return {\n    intendedPickupLocations: intendedPickupLocationsReducer,\n    storeDetails: storeDetailsReducer,\n    defaultPointOfService: defaultPointOfServiceReducer,\n  };\n}\n\nexport const pickupLocationsReducersToken: InjectionToken<\n  ActionReducerMap<PickupLocationsState>\n> = new InjectionToken<ActionReducerMap<PickupLocationsState>>(\n  'PickupLocationsReducers'\n);\n\nexport const pickupLocationsReducersProvider: Provider = {\n  provide: pickupLocationsReducersToken,\n  useFactory: getReducers,\n};\n\nexport const pickupLocationsMetaReducers: MetaReducer<any>[] = [];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { PickupOptionActions } from '../../actions';\nimport { PickupOptionState } from '../../pickup-option-state';\n\nexport const initialState: PickupOptionState['pageContext'] = '';\n\nexport const pageContextReducer = createReducer(\n  initialState,\n  on(\n    PickupOptionActions.SetPageContext,\n    (_state: PickupOptionState['pageContext'], { payload }) =>\n      payload.pageContext\n  )\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { PickupOptionActions } from '../../actions';\nimport { PickupOptionState } from '../../pickup-option-state';\n\nexport const initialState: PickupOptionState['pickupOption'] = [];\n\nexport const pickupOptionReducer = createReducer(\n  initialState,\n  on(\n    PickupOptionActions.SetPickupOption,\n    (state: PickupOptionState['pickupOption'], { payload }) => {\n      const newState = state.filter(\n        (entry) => entry.entryNumber !== payload.entryNumber\n      );\n      return [...newState, payload];\n    }\n  ),\n  on(\n    PickupOptionActions.RemovePickupOption,\n    (state: PickupOptionState['pickupOption'], { payload }) => {\n      return state\n        .filter((entry) => entry.entryNumber !== payload.entryNumber)\n        .map((entry) => ({\n          ...entry,\n          entryNumber:\n            entry.entryNumber > payload.entryNumber\n              ? entry.entryNumber - 1\n              : entry.entryNumber,\n        }));\n    }\n  ),\n  on(\n    PickupOptionActions.RemoveAllPickupOptions,\n    (_state: PickupOptionState['pickupOption']) => initialState\n  )\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap, MetaReducer } from '@ngrx/store';\n\nimport { PickupOptionState } from '../../pickup-option-state';\nimport { pageContextReducer } from './page-context.reducer';\nimport { pickupOptionReducer } from './pickup-option.reducer';\n\nexport function getPickupReducers(): ActionReducerMap<PickupOptionState> {\n  return {\n    pageContext: pageContextReducer,\n    pickupOption: pickupOptionReducer,\n  };\n}\n\nexport const pickupOptionReducersToken: InjectionToken<\n  ActionReducerMap<PickupOptionState>\n> = new InjectionToken<ActionReducerMap<PickupOptionState>>(\n  'PickupOptionReducers'\n);\nexport const pickupOptionReducersProvider: Provider = {\n  provide: pickupOptionReducersToken,\n  useFactory: getPickupReducers,\n};\n\nexport const pickupOptionMetaReducers: MetaReducer<any>[] = [];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { BrowserLocationActions } from '../../actions/index';\nimport { StockState } from '../../stock-state';\n\nexport const initialState: StockState['browserLocation'] = {\n  latitude: null,\n  longitude: null,\n};\n\nexport const browserLocationReducer = createReducer(\n  initialState,\n  on(BrowserLocationActions.AddBrowserLocation, (state, { payload }) => ({\n    ...state,\n    latitude: payload.latitude,\n    longitude: payload.longitude,\n  }))\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createReducer, on } from '@ngrx/store';\nimport { ToggleHideOutOfStockOptionsAction } from '../../actions/index';\nimport { StockState } from '../../stock-state';\n\nexport const initialState: StockState['hideOutOfStock'] = false;\n\nexport const hideOutOfStockReducer = createReducer(\n  initialState,\n  on(\n    ToggleHideOutOfStockOptionsAction,\n    (state: StockState['hideOutOfStock']): StockState['hideOutOfStock'] =>\n      !state\n  )\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action, createAction, createReducer, on, props } from '@ngrx/store';\nimport { StockLevelActions } from '../../actions/index';\nimport { StockLevelSuccessPayload } from '../../actions/stock.action';\nimport { StockLevelState, StockState } from '../../stock-state';\n\nexport const initialStockLevelState: StockLevelState = {};\n\nconst _stockReducer = createReducer(\n  initialStockLevelState,\n  on(\n    createAction(\n      StockLevelActions.STOCK_LEVEL_SUCCESS,\n      props<{ payload: StockLevelSuccessPayload }>()\n    ),\n    (\n      state: StockLevelState,\n      { payload: { productCode, stockLevels } }\n    ): StockLevelState => ({\n      ...state,\n      [productCode]: stockLevels,\n    })\n  ),\n  on(\n    createAction(StockLevelActions.CLEAR_STOCK_DATA),\n    (_state: StockLevelState): StockLevelState => ({})\n  )\n);\n\nexport function stockReducer(\n  state: StockLevelState | undefined,\n  action: Action\n) {\n  return _stockReducer(state, action);\n}\n\nexport const initialStockLevelAtStoreState: StockState['stockLevelAtStore'] =\n  {};\n\nexport const stockAtStoreReducer = createReducer(\n  initialStockLevelAtStoreState,\n  on(StockLevelActions.StockLevelAtStoreSuccess, (state, { payload }) => ({\n    ...state,\n    [payload.productCode]: { [payload.storeName]: payload.stockLevel },\n  }))\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  MetaReducer,\n} from '@ngrx/store';\nimport { StateUtils } from '@spartacus/core';\n\nimport { StockLevelActions } from '../../actions/index';\nimport { StockLevelState, StockState, STOCK_DATA } from '../../stock-state';\nimport { browserLocationReducer } from './browser-location.reducer';\nimport { hideOutOfStockReducer } from './hide-out-of-stock.reducer';\nimport { stockAtStoreReducer, stockReducer } from './stock-level.reducer';\n\nfunction getReducers(): ActionReducerMap<StockState> {\n  return {\n    browserLocation: browserLocationReducer,\n    hideOutOfStock: hideOutOfStockReducer,\n    stockLevel: StateUtils.loaderReducer<StockLevelState, any>(\n      STOCK_DATA,\n      stockReducer\n    ),\n    stockLevelAtStore: stockAtStoreReducer,\n  };\n}\n\nexport const stockReducersToken: InjectionToken<ActionReducerMap<StockState>> =\n  new InjectionToken<ActionReducerMap<StockState>>('StockReducers');\n\nexport const stockReducersProvider: Provider = {\n  provide: stockReducersToken,\n  useFactory: getReducers,\n};\n\nexport function clearStockState(\n  reducer: ActionReducer<StockState, Action>\n): ActionReducer<StockState, Action> {\n  return function (state, action) {\n    const STATE = new Map([[StockLevelActions.CLEAR_STOCK_DATA, undefined]]);\n    return reducer(\n      STATE.has(action.type) ? STATE.get(action.type) : state,\n      action\n    );\n  };\n}\n\nexport const stockMetaReducers: MetaReducer<any>[] = [clearStockState];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './pickup-locations/index';\nexport * from './pickup-option/index';\nexport * from './stock/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { effects } from './effects/index';\nimport { PICKUP_LOCATIONS_FEATURE } from './pickup-location-state';\nimport { PICKUP_OPTION_FEATURE } from './pickup-option-state';\nimport {\n  pickupLocationsMetaReducers,\n  pickupLocationsReducersProvider,\n  pickupLocationsReducersToken,\n  pickupOptionMetaReducers,\n  pickupOptionReducersProvider,\n  pickupOptionReducersToken,\n  stockMetaReducers,\n  stockReducersProvider,\n  stockReducersToken,\n} from './reducers/index';\nimport { STOCK_FEATURE } from './stock-state';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(\n      PICKUP_LOCATIONS_FEATURE,\n      pickupLocationsReducersToken,\n      {\n        metaReducers: pickupLocationsMetaReducers,\n      }\n    ),\n    StoreModule.forFeature(PICKUP_OPTION_FEATURE, pickupOptionReducersToken, {\n      metaReducers: pickupOptionMetaReducers,\n    }),\n    StoreModule.forFeature(STOCK_FEATURE, stockReducersToken, {\n      metaReducers: stockMetaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [\n    pickupLocationsReducersProvider,\n    pickupOptionReducersProvider,\n    stockReducersProvider,\n  ],\n})\nexport class PickupInStoreStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  PickupLocationsState,\n  PICKUP_LOCATIONS_FEATURE,\n  StateWithPickupLocations,\n} from '../pickup-location-state';\nimport {\n  PickupOptionState,\n  PICKUP_OPTION_FEATURE,\n  StateWithPickupOption,\n} from '../pickup-option-state';\nimport { StateWithStock, StockState, STOCK_FEATURE } from '../stock-state';\n\nexport const getPickupLocationsState: MemoizedSelector<\n  StateWithPickupLocations,\n  PickupLocationsState\n> = createFeatureSelector<PickupLocationsState>(PICKUP_LOCATIONS_FEATURE);\n\nexport const getPickupOptionState: MemoizedSelector<\n  StateWithPickupOption,\n  PickupOptionState\n> = createFeatureSelector<PickupOptionState>(PICKUP_OPTION_FEATURE);\n\nexport const getStockState: MemoizedSelector<StateWithStock, StockState> =\n  createFeatureSelector<StockState>(STOCK_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  PickupLocationsState,\n  StateWithPickupLocations,\n} from '../pickup-location-state';\nimport { getPickupLocationsState } from './feature.selectors';\n\nexport const getPreferredStore: MemoizedSelector<\n  StateWithPickupLocations,\n  PickupLocationsState['defaultPointOfService']\n> = createSelector(\n  getPickupLocationsState,\n  (pickupLocationsState) => pickupLocationsState.defaultPointOfService\n);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateWithStock, StockState } from '../stock-state';\nimport { getStockState } from './feature.selectors';\n\nexport const getHideOutOfStockState: MemoizedSelector<\n  StateWithStock,\n  StockState['hideOutOfStock']\n> = createSelector(getStockState, (stockState) => stockState.hideOutOfStock);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PointOfService } from '@spartacus/core';\nimport {\n  AugmentedPointOfService,\n  PickupOption,\n} from '@spartacus/pickup-in-store/root';\nimport {\n  PickupLocationsState,\n  StateWithPickupLocations,\n} from '../pickup-location-state';\nimport { getPickupLocationsState } from './feature.selectors';\n\n/**\n * Get all the intended pickup locations.\n */\nexport const getIntendedPickupLocations: MemoizedSelector<\n  StateWithPickupLocations,\n  PickupLocationsState['intendedPickupLocations']\n> = createSelector(\n  getPickupLocationsState,\n  (state: PickupLocationsState) => state.intendedPickupLocations\n);\n\n/**\n * Get the intended pickup location for a given product.\n * @param productCode The product code of the product to get the intended pickup location for.\n * @returns The intended pickup location for the product.\n */\nexport const getIntendedPickupLocationByProductCode = (\n  productCode: string\n): MemoizedSelector<\n  StateWithPickupLocations,\n  AugmentedPointOfService | undefined\n> =>\n  createSelector(\n    getIntendedPickupLocations,\n    (\n      state: PickupLocationsState['intendedPickupLocations']\n    ): AugmentedPointOfService | undefined => state[productCode]\n  );\n\nexport const getPickupOptionByProductCode = (\n  productCode: string\n): MemoizedSelector<StateWithPickupLocations, PickupOption> =>\n  createSelector(\n    getIntendedPickupLocationByProductCode(productCode),\n    (_getIntendedPickupLocationByProductCode) =>\n      _getIntendedPickupLocationByProductCode?.pickupOption ?? 'delivery'\n  );\n\nexport const getStoreDetailsByName = (\n  storeName: string\n): MemoizedSelector<StateWithPickupLocations, PointOfService> =>\n  createSelector(\n    getPickupLocationsState,\n    (state: PickupLocationsState) => state.storeDetails[storeName]\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PickupOption } from '@spartacus/pickup-in-store/root';\nimport {\n  PickupOptionState,\n  StateWithPickupOption,\n} from '../pickup-option-state';\nimport { getPickupOptionState } from './feature.selectors';\n\nexport const getPageContext = (): MemoizedSelector<\n  StateWithPickupOption,\n  string\n> =>\n  createSelector(\n    getPickupOptionState,\n    (state: PickupOptionState) => state.pageContext\n  );\n\nexport const getPickupOption = (\n  entryNumber: number\n): MemoizedSelector<StateWithPickupOption, PickupOption | undefined> =>\n  createSelector(getPickupOptionState, (state: PickupOptionState) => {\n    return state.pickupOption.find((entry) => entry.entryNumber === entryNumber)\n      ?.pickupOption;\n  });\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PointOfServiceStock, Stock } from '@spartacus/core';\n\nexport function isInStock(stockInfo: Stock | undefined): boolean {\n  return (\n    !!stockInfo &&\n    stockInfo.stockLevelStatus !== 'outOfStock' &&\n    stockInfo.stockLevelStatus !== 'lowStock'\n  );\n}\n\nexport function storeHasStock({ stockInfo }: PointOfServiceStock): boolean {\n  return isInStock(stockInfo);\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './utils';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { PointOfServiceStock, StateUtils, Stock } from '@spartacus/core';\nimport { storeHasStock } from '../../utils';\nimport { StateWithStock, StockLevelState } from '../stock-state';\nimport { getStockState } from './feature.selectors';\nimport { getHideOutOfStockState } from './hide-out-of-stock.selectors';\n\nexport const getStockLevelState: MemoizedSelector<\n  StateWithStock,\n  StateUtils.LoaderState<StockLevelState>\n> = createSelector(getStockState, (stockState) => stockState.stockLevel);\n\nexport const getStockEntities: MemoizedSelector<\n  StateWithStock,\n  StockLevelState\n> = createSelector(getStockLevelState, (state) =>\n  StateUtils.loaderValueSelector(state)\n);\n\nexport const getStockLoading: MemoizedSelector<StateWithStock, boolean> =\n  createSelector(getStockLevelState, (state) =>\n    StateUtils.loaderLoadingSelector(state)\n  );\n\nexport const getStockSuccess: MemoizedSelector<StateWithStock, boolean> =\n  createSelector(getStockLevelState, (state) =>\n    StateUtils.loaderSuccessSelector(state)\n  );\n\nexport const getStockError: MemoizedSelector<StateWithStock, boolean> =\n  createSelector(getStockLevelState, (state) =>\n    StateUtils.loaderErrorSelector(state)\n  );\n\nexport const hasSearchStarted: MemoizedSelector<StateWithStock, boolean> =\n  createSelector(\n    getStockLoading,\n    getStockSuccess,\n    getStockError,\n    (_getStockLoading, _getStockSuccess, _getStockError) =>\n      _getStockLoading || _getStockSuccess || _getStockError\n  );\n\nexport const hasSearchStartedForProductCode = (\n  productCode: string\n): MemoizedSelector<StateWithStock, boolean> =>\n  createSelector(\n    hasSearchStarted,\n    getStockEntities,\n    (hasSearchBeenStarted, stockEntities) => {\n      return hasSearchBeenStarted && !!stockEntities[productCode];\n    }\n  );\n\nexport const getStoresWithStockForProductCode = (\n  productCode: string\n): MemoizedSelector<StateWithStock, PointOfServiceStock[]> =>\n  createSelector(\n    getStockEntities,\n    getHideOutOfStockState,\n    (stockEntities, hideOutOfStock) =>\n      stockEntities[productCode]?.stores?.filter(\n        (store) => !hideOutOfStock || storeHasStock(store)\n      ) ?? []\n  );\n\nexport const getStockAtStore = (\n  productCode: string,\n  storeName: string\n): MemoizedSelector<StateWithStock, Stock | undefined> =>\n  createSelector(\n    getStockState,\n    (stockState) => stockState?.stockLevelAtStore?.[productCode]?.[storeName]\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as DefaultPointOfServiceSelectors from './default-point-of-service-name.selectors';\nimport * as HideOutOfStockSelectors from './hide-out-of-stock.selectors';\nimport * as PickupLocationsSelectors from './pickup-locations.selectors';\nimport * as PickupOptionSelectors from './pickup-option.selectors';\nimport * as StockSelectors from './stock.selectors';\n\nexport {\n  HideOutOfStockSelectors,\n  PickupLocationsSelectors,\n  PickupOptionSelectors,\n  StockSelectors,\n  DefaultPointOfServiceSelectors,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './actions/index';\nexport * from './effects/index';\nexport * from './pickup-in-store-store.module';\nexport * from './pickup-location-state';\nexport * from './pickup-option-state';\nexport * from './reducers/index';\nexport * from './selectors/index';\nexport * from './stock-state';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  PickupLocationsSearchFacade,\n  PointOfServiceNames,\n  PreferredStoreFacade,\n  PREFERRED_STORE_LOCAL_STORAGE_KEY,\n} from '@spartacus/pickup-in-store/root';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { PickupInStoreConfig } from '../config';\nimport {\n  DefaultPointOfServiceSelectors,\n  StateWithPickupLocations,\n} from '../store';\nimport {\n  LoadDefaultPointOfService,\n  SetDefaultPointOfService,\n} from '../store/actions/default-point-of-service-name.action';\nimport { isInStock } from '../utils';\n\n/**\n * Service to store the user's preferred store for Pickup in Store in local storage.\n */\n@Injectable()\nexport class PreferredStoreService implements PreferredStoreFacade {\n  constructor(\n    protected config: PickupInStoreConfig,\n    protected pickupLocationsSearchService: PickupLocationsSearchFacade,\n    protected winRef: WindowRef,\n    protected store: Store<StateWithPickupLocations>\n  ) {\n    this.store.dispatch(LoadDefaultPointOfService());\n  }\n\n  /**\n   * Gets the user's preferred store for Pickup in Store.\n   * @returns the preferred store from the store\n   */\n  getPreferredStore$(): Observable<PointOfServiceNames | null> {\n    return this.store.pipe(\n      select(DefaultPointOfServiceSelectors.getPreferredStore)\n    );\n  }\n\n  /**\n   * Sets the user's preferred store for Pickup in Store.\n   * @param preferredStore the preferred store to set\n   */\n  setPreferredStore(preferredStore: PointOfServiceNames): void {\n    this.store.dispatch(SetDefaultPointOfService({ payload: preferredStore }));\n  }\n\n  /**\n   * Clears the user's preferred store for Pickup in Store.\n   */\n  clearPreferredStore(): void {\n    this.winRef.localStorage?.removeItem(PREFERRED_STORE_LOCAL_STORAGE_KEY);\n  }\n\n  /**\n   * Get the user's preferred store from local storage and only return it if it\n   * has stock for the given product.\n   * @param productCode The product code to check the stock level of\n   */\n  getPreferredStoreWithProductInStock(\n    productCode: string\n  ): Observable<PointOfServiceNames> {\n    return this.getPreferredStore$().pipe(\n      filter((store): store is PointOfServiceNames => !!store),\n      tap((preferredStore) => {\n        this.pickupLocationsSearchService.stockLevelAtStore(\n          productCode,\n          preferredStore.name\n        );\n      }),\n      switchMap((store) =>\n        this.pickupLocationsSearchService\n          .getStockLevelAtStore(productCode, store.name)\n          .pipe(\n            filter(isInStock),\n            map((_) => store),\n            tap((preferredStore) => ({\n              name: preferredStore.name,\n              displayName: preferredStore.name,\n            }))\n          )\n      )\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './preferred-store.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  AugmentedPointOfService,\n  IntendedPickupLocationFacade,\n  PickupOption,\n} from '@spartacus/pickup-in-store/root';\nimport { Observable } from 'rxjs';\n\nimport { PickupLocationActions, PickupLocationsSelectors } from '../store';\nimport { StateWithPickupLocations } from '../store/pickup-location-state';\n\n/**\n * Store the Point of Service a user wants to collect a product from before it is added to the cart.\n */\n@Injectable()\nexport class IntendedPickupLocationService\n  implements IntendedPickupLocationFacade\n{\n  constructor(protected store: Store<StateWithPickupLocations>) {\n    // Intentional empty constructor\n  }\n\n  getIntendedLocation(\n    productCode: string\n  ): Observable<AugmentedPointOfService | undefined> {\n    return this.store.pipe(\n      select(\n        PickupLocationsSelectors.getIntendedPickupLocationByProductCode(\n          productCode\n        )\n      )\n    );\n  }\n\n  getPickupOption(productCode: string): Observable<PickupOption> {\n    return this.store.pipe(\n      select(PickupLocationsSelectors.getPickupOptionByProductCode(productCode))\n    );\n  }\n\n  setPickupOption(productCode: string, pickupOption: PickupOption): void {\n    this.store.dispatch(\n      PickupLocationActions.SetPickupOption({\n        payload: { productCode, pickupOption },\n      })\n    );\n  }\n\n  setIntendedLocation(\n    productCode: string,\n    location: AugmentedPointOfService\n  ): void {\n    this.store.dispatch(\n      PickupLocationActions.AddLocation({ payload: { productCode, location } })\n    );\n  }\n\n  removeIntendedLocation(productCode: string): void {\n    this.store.dispatch(\n      PickupLocationActions.RemoveLocation({ payload: productCode })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { PointOfService, PointOfServiceStock, Stock } from '@spartacus/core';\nimport {\n  PickupLocationsSearchFacade,\n  StockLocationSearchParams,\n} from '@spartacus/pickup-in-store/root';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport {\n  BrowserLocationActions,\n  HideOutOfStockSelectors,\n  PickupLocationActions,\n  PickupLocationsSelectors,\n  StateWithPickupLocations,\n  StateWithStock,\n  StockLevelActions,\n  StockSelectors,\n  ToggleHideOutOfStockOptionsAction,\n} from '../store/index';\n\n@Injectable()\nexport class PickupLocationsSearchService\n  implements PickupLocationsSearchFacade, OnDestroy\n{\n  subscription: Subscription = new Subscription();\n  constructor(\n    protected store: Store<StateWithStock & StateWithPickupLocations>\n  ) {\n    // Intentional empty constructor\n  }\n\n  stockLevelAtStore(productCode: string, storeName: string): void {\n    this.store.dispatch(\n      StockLevelActions.StockLevelAtStore({\n        payload: { productCode, storeName },\n      })\n    );\n  }\n\n  getStockLevelAtStore(\n    productCode: string,\n    storeName: string\n  ): Observable<Stock | undefined> {\n    return this.store.pipe(\n      select(StockSelectors.getStockAtStore(productCode, storeName))\n    );\n  }\n\n  startSearch(searchParams: StockLocationSearchParams): void {\n    this.store.dispatch(new StockLevelActions.StockLevel(searchParams));\n  }\n\n  hasSearchStarted(productCode: string): Observable<boolean> {\n    return this.store.pipe(\n      select(StockSelectors.hasSearchStartedForProductCode(productCode))\n    );\n  }\n\n  isSearchRunning(): Observable<boolean> {\n    return this.store.pipe(select(StockSelectors.getStockLoading));\n  }\n\n  getSearchResults(productCode: string): Observable<PointOfServiceStock[]> {\n    return this.store.pipe(\n      select(StockSelectors.getStoresWithStockForProductCode(productCode))\n    );\n  }\n\n  clearSearchResults(): void {\n    this.store.dispatch(new StockLevelActions.ClearStockData());\n  }\n\n  getHideOutOfStock(): Observable<boolean> {\n    return this.store.pipe(\n      select(HideOutOfStockSelectors.getHideOutOfStockState)\n    );\n  }\n\n  setBrowserLocation(latitude: number, longitude: number): void {\n    this.store.dispatch(\n      BrowserLocationActions.AddBrowserLocation({\n        payload: { latitude, longitude },\n      })\n    );\n  }\n\n  toggleHideOutOfStock(): void {\n    this.store.dispatch(ToggleHideOutOfStockOptionsAction());\n  }\n\n  loadStoreDetails(storeName: string): void {\n    this.subscription.add(\n      this.getStoreDetails(storeName)\n        .pipe(\n          filter((storeDetails) => !storeDetails),\n          tap((_storeDetails) =>\n            this.store.dispatch(\n              PickupLocationActions.GetStoreDetailsById({ payload: storeName })\n            )\n          )\n        )\n        .subscribe()\n    );\n  }\n\n  getStoreDetails(name: string): Observable<PointOfService> {\n    return this.store.pipe(\n      select(PickupLocationsSelectors.getStoreDetailsByName(name))\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  PickupOption,\n  PickupOptionFacade,\n} from '@spartacus/pickup-in-store/root';\nimport { Observable } from 'rxjs';\nimport {\n  PickupOptionActions,\n  PickupOptionSelectors,\n  StateWithPickupOption,\n} from '../store/index';\n\n/**\n * A service for managing the page context and pickup option for a cart entry.\n */\n@Injectable()\nexport class PickupOptionService implements PickupOptionFacade {\n  constructor(protected store: Store<StateWithPickupOption>) {\n    // Intentional empty constructor\n  }\n\n  setPageContext(pageContext: string): void {\n    this.store.dispatch(\n      PickupOptionActions.SetPageContext({\n        payload: { pageContext },\n      })\n    );\n  }\n\n  getPageContext(): Observable<string> {\n    return this.store.pipe(select(PickupOptionSelectors.getPageContext()));\n  }\n\n  setPickupOption(entryNumber: number, pickupOption: PickupOption): void {\n    this.store.dispatch(\n      PickupOptionActions.SetPickupOption({\n        payload: { entryNumber, pickupOption },\n      })\n    );\n  }\n\n  getPickupOption(entryNumber: number): Observable<PickupOption | undefined> {\n    return this.store.pipe(\n      select(PickupOptionSelectors.getPickupOption(entryNumber))\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport {\n  IntendedPickupLocationFacade,\n  PickupLocationsSearchFacade,\n  PickupOptionFacade,\n  PreferredStoreFacade,\n} from '@spartacus/pickup-in-store/root';\nimport { PreferredStoreService } from '../services';\nimport { IntendedPickupLocationService } from './intended-pickup-location.service';\nimport { PickupLocationsSearchService } from './pickup-locations-search.service';\nimport { PickupOptionService } from './pickup-option.service';\n\nexport const facadeProviders: Provider[] = [\n  IntendedPickupLocationService,\n  {\n    provide: IntendedPickupLocationFacade,\n    useExisting: IntendedPickupLocationService,\n  },\n  PickupLocationsSearchService,\n  {\n    provide: PickupLocationsSearchFacade,\n    useExisting: PickupLocationsSearchService,\n  },\n  PickupOptionService,\n  {\n    provide: PickupOptionFacade,\n    useExisting: PickupOptionService,\n  },\n  PreferredStoreService,\n  { provide: PreferredStoreFacade, useExisting: PreferredStoreService },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './facade-providers';\nexport * from './pickup-locations-search.service';\nexport * from './pickup-option.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPickupInStoreConfig } from './config/index';\nimport { PickupLocationConnector, StockConnector } from './connectors/index';\nimport { facadeProviders } from './facade/index';\nimport { PickupInStoreStoreModule } from './store/index';\n\n@NgModule({\n  imports: [PickupInStoreStoreModule],\n  providers: [\n    provideDefaultConfig(defaultPickupInStoreConfig),\n    StockConnector,\n    PickupLocationConnector,\n    ...facadeProviders,\n  ],\n})\nexport class PickupInStoreCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/index';\nexport * from './connectors/index';\nexport * from './facade/index';\nexport * from './pickup-in-store-core.module';\nexport * from './services/index';\nexport * from './store/index';\nexport * from './utils/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.PickupLocationAdapter","i1.StockAdapter","SET_PICKUP_OPTION","SetPickupOption","DefaultPointOfServiceActions.LOAD_DEFAULT_POINT_OF_SERVICE","DefaultPointOfServiceActions.LoadDefaultPointOfServiceSuccess","DefaultPointOfServiceActions.SET_DEFAULT_POINT_OF_SERVICE","DefaultPointOfServiceActions.LoadDefaultPointOfService","i2","PickupLocationActions.GET_STORE_DETAILS","PickupLocationActions.SetStoreDetailsSuccess","PickupLocationActions.SetStoreDetailsFailure","i2.PickupLocationConnector","StockLevelActions.STOCK_LEVEL","StockLevelActions.StockLevelSuccess","StockLevelActions.StockLevelFail","StockLevelActions.STOCK_LEVEL_AT_STORE","StockLevelActions.StockLevelAtStoreSuccess","i2.StockConnector","PickupLocationActions.AddLocation","PickupLocationActions.RemoveLocation","PickupLocationActions.SetPickupOption","getReducers","initialState","PickupOptionActions.SetPageContext","PickupOptionActions.SetPickupOption","PickupOptionActions.RemovePickupOption","PickupOptionActions.RemoveAllPickupOptions","BrowserLocationActions.AddBrowserLocation","StockLevelActions.STOCK_LEVEL_SUCCESS","StockLevelActions.CLEAR_STOCK_DATA","i1","DefaultPointOfServiceSelectors.getPreferredStore","i1.PickupInStoreConfig","i3","i4","PickupLocationsSelectors.getIntendedPickupLocationByProductCode","PickupLocationsSelectors.getPickupOptionByProductCode","StockLevelActions.StockLevelAtStore","StockSelectors.getStockAtStore","StockLevelActions.StockLevel","StockSelectors.hasSearchStartedForProductCode","StockSelectors.getStockLoading","StockSelectors.getStoresWithStockForProductCode","StockLevelActions.ClearStockData","HideOutOfStockSelectors.getHideOutOfStockState","PickupLocationActions.GetStoreDetailsById","PickupLocationsSelectors.getStoreDetailsByName","PickupOptionSelectors.getPageContext","PickupOptionSelectors.getPickupOption"],"mappings":"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"}