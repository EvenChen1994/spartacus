/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../../services/current-location.service";
import * as i2 from "@spartacus/core";
/**
 * The search box and find my location button for finding points of
 * service to pickup from. Also with controls for toggling the display of
 * locations without stock.
 */
export class StoreSearchComponent {
    constructor(currentLocationService) {
        this.currentLocationService = currentLocationService;
        /** Whether the hide out of stock checkbox appears checked */
        this.hideOutOfStock = false;
        /** Whether out of stock locations should be hidden in the search list */
        this.eventHideOutOfStock = new EventEmitter();
        /** The search parameters used to find pickup stores */
        this.findStores = new EventEmitter();
        /** Whether the loading spinner should be displayed */
        this.showSpinner = new EventEmitter();
        // Intentional empty constructor
    }
    /** Initiate a free text location search */
    onFindStores(location) {
        this.findStores.emit({ location });
        return false;
    }
    /** Toggle whether locations without stock should be displayed */
    onHideOutOfStock() {
        this.eventHideOutOfStock.emit(!this.hideOutOfStock);
    }
    /** Initiate a latitude and longitude search using the current browser location */
    useMyLocation() {
        this.showSpinner.emit(true);
        this.currentLocationService.getCurrentLocation(({ coords: { latitude, longitude } }) => {
            this.findStores.emit({ latitude, longitude });
            this.showSpinner.emit(false);
        });
    }
}
StoreSearchComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: StoreSearchComponent, deps: [{ token: i1.CurrentLocationService }], target: i0.ɵɵFactoryTarget.Component });
StoreSearchComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: StoreSearchComponent, selector: "cx-store-search", inputs: { hideOutOfStock: "hideOutOfStock" }, outputs: { eventHideOutOfStock: "eventHideOutOfStock", findStores: "findStores", showSpinner: "showSpinner" }, ngImport: i0, template: "<div class=\"cx-find-a-store-container\">\n  <div class=\"cx-find-a-store-label\">\n    <label for=\"txtFindAStore\">\n      {{ 'storeSearch.findAStore' | cxTranslate }}\n    </label>\n  </div>\n  <div class=\"cx-find-a-store-input\">\n    <input\n      [placeholder]=\"'storeSearch.searchPlaceholder' | cxTranslate\"\n      class=\"form-control\"\n      type=\"text\"\n      id=\"txtFindAStore\"\n      #txtFindAStore\n    />\n  </div>\n  <div class=\"cx-find-a-store-button\">\n    <button\n      (click)=\"onFindStores(txtFindAStore.value)\"\n      class=\"btn btn-primary btn-block\"\n      id=\"btnFindStores\"\n    >\n      {{ 'storeSearch.findStores' | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"cx-find-a-store-link-container\">\n    <a\n      class=\"cx-find-a-store-link\"\n      id=\"lnkUseMyLocation\"\n      (click)=\"useMyLocation()\"\n      tabindex=\"0\"\n      role=\"button\"\n    >\n      {{ 'storeSearch.useMyLocation' | cxTranslate }}\n    </a>\n  </div>\n  <div class=\"cx-find-a-store-hide-out-of-stock\">\n    <div class=\"cx-find-a-store-checkbox-group form-check\">\n      <label\n        class=\"cx-hide-out-of-stock-label form-check-label\"\n        for=\"chkHideOutOfStock\"\n      >\n        {{ 'storeSearch.hideOutOfStockOptions' | cxTranslate }}\n      </label>\n      <input\n        (click)=\"onHideOutOfStock()\"\n        [checked]=\"hideOutOfStock\"\n        class=\"form-check-input\"\n        id=\"chkHideOutOfStock\"\n        type=\"checkbox\"\n      />\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: StoreSearchComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-store-search', template: "<div class=\"cx-find-a-store-container\">\n  <div class=\"cx-find-a-store-label\">\n    <label for=\"txtFindAStore\">\n      {{ 'storeSearch.findAStore' | cxTranslate }}\n    </label>\n  </div>\n  <div class=\"cx-find-a-store-input\">\n    <input\n      [placeholder]=\"'storeSearch.searchPlaceholder' | cxTranslate\"\n      class=\"form-control\"\n      type=\"text\"\n      id=\"txtFindAStore\"\n      #txtFindAStore\n    />\n  </div>\n  <div class=\"cx-find-a-store-button\">\n    <button\n      (click)=\"onFindStores(txtFindAStore.value)\"\n      class=\"btn btn-primary btn-block\"\n      id=\"btnFindStores\"\n    >\n      {{ 'storeSearch.findStores' | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"cx-find-a-store-link-container\">\n    <a\n      class=\"cx-find-a-store-link\"\n      id=\"lnkUseMyLocation\"\n      (click)=\"useMyLocation()\"\n      tabindex=\"0\"\n      role=\"button\"\n    >\n      {{ 'storeSearch.useMyLocation' | cxTranslate }}\n    </a>\n  </div>\n  <div class=\"cx-find-a-store-hide-out-of-stock\">\n    <div class=\"cx-find-a-store-checkbox-group form-check\">\n      <label\n        class=\"cx-hide-out-of-stock-label form-check-label\"\n        for=\"chkHideOutOfStock\"\n      >\n        {{ 'storeSearch.hideOutOfStockOptions' | cxTranslate }}\n      </label>\n      <input\n        (click)=\"onHideOutOfStock()\"\n        [checked]=\"hideOutOfStock\"\n        class=\"form-check-input\"\n        id=\"chkHideOutOfStock\"\n        type=\"checkbox\"\n      />\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CurrentLocationService }]; }, propDecorators: { hideOutOfStock: [{
                type: Input
            }], eventHideOutOfStock: [{
                type: Output
            }], findStores: [{
                type: Output
            }], showSpinner: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtc2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9waWNrdXAtaW4tc3RvcmUvY29tcG9uZW50cy9jb250YWluZXIvc3RvcmUtc2VhcmNoL3N0b3JlLXNlYXJjaC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcGlja3VwLWluLXN0b3JlL2NvbXBvbmVudHMvY29udGFpbmVyL3N0b3JlLXNlYXJjaC9zdG9yZS1zZWFyY2guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFJdkU7Ozs7R0FJRztBQUtILE1BQU0sT0FBTyxvQkFBb0I7SUFXL0IsWUFBc0Isc0JBQThDO1FBQTlDLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7UUFWcEUsNkRBQTZEO1FBQ3BELG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBRWhDLHlFQUF5RTtRQUMvRCx3QkFBbUIsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO1FBQzVELHVEQUF1RDtRQUM3QyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQXdCLENBQUM7UUFDaEUsc0RBQXNEO1FBQzVDLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztRQUdsRCxnQ0FBZ0M7SUFDbEMsQ0FBQztJQUVELDJDQUEyQztJQUMzQyxZQUFZLENBQUMsUUFBZ0I7UUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELGlFQUFpRTtJQUNqRSxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRCxrRkFBa0Y7SUFDbEYsYUFBYTtRQUNYLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxrQkFBa0IsQ0FDNUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7O2lIQW5DVSxvQkFBb0I7cUdBQXBCLG9CQUFvQixvTkNuQmpDLG1nREFxREE7MkZEbENhLG9CQUFvQjtrQkFKaEMsU0FBUzsrQkFDRSxpQkFBaUI7NkdBS2xCLGNBQWM7c0JBQXRCLEtBQUs7Z0JBR0ksbUJBQW1CO3NCQUE1QixNQUFNO2dCQUVHLFVBQVU7c0JBQW5CLE1BQU07Z0JBRUcsV0FBVztzQkFBcEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2NhdGlvblNlYXJjaFBhcmFtcyB9IGZyb20gJ0BzcGFydGFjdXMvcGlja3VwLWluLXN0b3JlL3Jvb3QnO1xuaW1wb3J0IHsgQ3VycmVudExvY2F0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2N1cnJlbnQtbG9jYXRpb24uc2VydmljZSc7XG5cbi8qKlxuICogVGhlIHNlYXJjaCBib3ggYW5kIGZpbmQgbXkgbG9jYXRpb24gYnV0dG9uIGZvciBmaW5kaW5nIHBvaW50cyBvZlxuICogc2VydmljZSB0byBwaWNrdXAgZnJvbS4gQWxzbyB3aXRoIGNvbnRyb2xzIGZvciB0b2dnbGluZyB0aGUgZGlzcGxheSBvZlxuICogbG9jYXRpb25zIHdpdGhvdXQgc3RvY2suXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LXN0b3JlLXNlYXJjaCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zdG9yZS1zZWFyY2guY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBTdG9yZVNlYXJjaENvbXBvbmVudCB7XG4gIC8qKiBXaGV0aGVyIHRoZSBoaWRlIG91dCBvZiBzdG9jayBjaGVja2JveCBhcHBlYXJzIGNoZWNrZWQgKi9cbiAgQElucHV0KCkgaGlkZU91dE9mU3RvY2sgPSBmYWxzZTtcblxuICAvKiogV2hldGhlciBvdXQgb2Ygc3RvY2sgbG9jYXRpb25zIHNob3VsZCBiZSBoaWRkZW4gaW4gdGhlIHNlYXJjaCBsaXN0ICovXG4gIEBPdXRwdXQoKSBldmVudEhpZGVPdXRPZlN0b2NrID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuICAvKiogVGhlIHNlYXJjaCBwYXJhbWV0ZXJzIHVzZWQgdG8gZmluZCBwaWNrdXAgc3RvcmVzICovXG4gIEBPdXRwdXQoKSBmaW5kU3RvcmVzID0gbmV3IEV2ZW50RW1pdHRlcjxMb2NhdGlvblNlYXJjaFBhcmFtcz4oKTtcbiAgLyoqIFdoZXRoZXIgdGhlIGxvYWRpbmcgc3Bpbm5lciBzaG91bGQgYmUgZGlzcGxheWVkICovXG4gIEBPdXRwdXQoKSBzaG93U3Bpbm5lciA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3VycmVudExvY2F0aW9uU2VydmljZTogQ3VycmVudExvY2F0aW9uU2VydmljZSkge1xuICAgIC8vIEludGVudGlvbmFsIGVtcHR5IGNvbnN0cnVjdG9yXG4gIH1cblxuICAvKiogSW5pdGlhdGUgYSBmcmVlIHRleHQgbG9jYXRpb24gc2VhcmNoICovXG4gIG9uRmluZFN0b3Jlcyhsb2NhdGlvbjogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgdGhpcy5maW5kU3RvcmVzLmVtaXQoeyBsb2NhdGlvbiB9KTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKiogVG9nZ2xlIHdoZXRoZXIgbG9jYXRpb25zIHdpdGhvdXQgc3RvY2sgc2hvdWxkIGJlIGRpc3BsYXllZCAqL1xuICBvbkhpZGVPdXRPZlN0b2NrKCk6IHZvaWQge1xuICAgIHRoaXMuZXZlbnRIaWRlT3V0T2ZTdG9jay5lbWl0KCF0aGlzLmhpZGVPdXRPZlN0b2NrKTtcbiAgfVxuXG4gIC8qKiBJbml0aWF0ZSBhIGxhdGl0dWRlIGFuZCBsb25naXR1ZGUgc2VhcmNoIHVzaW5nIHRoZSBjdXJyZW50IGJyb3dzZXIgbG9jYXRpb24gKi9cbiAgdXNlTXlMb2NhdGlvbigpOiB2b2lkIHtcbiAgICB0aGlzLnNob3dTcGlubmVyLmVtaXQodHJ1ZSk7XG4gICAgdGhpcy5jdXJyZW50TG9jYXRpb25TZXJ2aWNlLmdldEN1cnJlbnRMb2NhdGlvbihcbiAgICAgICh7IGNvb3JkczogeyBsYXRpdHVkZSwgbG9uZ2l0dWRlIH0gfSkgPT4ge1xuICAgICAgICB0aGlzLmZpbmRTdG9yZXMuZW1pdCh7IGxhdGl0dWRlLCBsb25naXR1ZGUgfSk7XG4gICAgICAgIHRoaXMuc2hvd1NwaW5uZXIuZW1pdChmYWxzZSk7XG4gICAgICB9XG4gICAgKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImN4LWZpbmQtYS1zdG9yZS1jb250YWluZXJcIj5cbiAgPGRpdiBjbGFzcz1cImN4LWZpbmQtYS1zdG9yZS1sYWJlbFwiPlxuICAgIDxsYWJlbCBmb3I9XCJ0eHRGaW5kQVN0b3JlXCI+XG4gICAgICB7eyAnc3RvcmVTZWFyY2guZmluZEFTdG9yZScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgIDwvbGFiZWw+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY3gtZmluZC1hLXN0b3JlLWlucHV0XCI+XG4gICAgPGlucHV0XG4gICAgICBbcGxhY2Vob2xkZXJdPVwiJ3N0b3JlU2VhcmNoLnNlYXJjaFBsYWNlaG9sZGVyJyB8IGN4VHJhbnNsYXRlXCJcbiAgICAgIGNsYXNzPVwiZm9ybS1jb250cm9sXCJcbiAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgIGlkPVwidHh0RmluZEFTdG9yZVwiXG4gICAgICAjdHh0RmluZEFTdG9yZVxuICAgIC8+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY3gtZmluZC1hLXN0b3JlLWJ1dHRvblwiPlxuICAgIDxidXR0b25cbiAgICAgIChjbGljayk9XCJvbkZpbmRTdG9yZXModHh0RmluZEFTdG9yZS52YWx1ZSlcIlxuICAgICAgY2xhc3M9XCJidG4gYnRuLXByaW1hcnkgYnRuLWJsb2NrXCJcbiAgICAgIGlkPVwiYnRuRmluZFN0b3Jlc1wiXG4gICAgPlxuICAgICAge3sgJ3N0b3JlU2VhcmNoLmZpbmRTdG9yZXMnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICA8L2J1dHRvbj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjeC1maW5kLWEtc3RvcmUtbGluay1jb250YWluZXJcIj5cbiAgICA8YVxuICAgICAgY2xhc3M9XCJjeC1maW5kLWEtc3RvcmUtbGlua1wiXG4gICAgICBpZD1cImxua1VzZU15TG9jYXRpb25cIlxuICAgICAgKGNsaWNrKT1cInVzZU15TG9jYXRpb24oKVwiXG4gICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgcm9sZT1cImJ1dHRvblwiXG4gICAgPlxuICAgICAge3sgJ3N0b3JlU2VhcmNoLnVzZU15TG9jYXRpb24nIHwgY3hUcmFuc2xhdGUgfX1cbiAgICA8L2E+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiY3gtZmluZC1hLXN0b3JlLWhpZGUtb3V0LW9mLXN0b2NrXCI+XG4gICAgPGRpdiBjbGFzcz1cImN4LWZpbmQtYS1zdG9yZS1jaGVja2JveC1ncm91cCBmb3JtLWNoZWNrXCI+XG4gICAgICA8bGFiZWxcbiAgICAgICAgY2xhc3M9XCJjeC1oaWRlLW91dC1vZi1zdG9jay1sYWJlbCBmb3JtLWNoZWNrLWxhYmVsXCJcbiAgICAgICAgZm9yPVwiY2hrSGlkZU91dE9mU3RvY2tcIlxuICAgICAgPlxuICAgICAgICB7eyAnc3RvcmVTZWFyY2guaGlkZU91dE9mU3RvY2tPcHRpb25zJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2xhYmVsPlxuICAgICAgPGlucHV0XG4gICAgICAgIChjbGljayk9XCJvbkhpZGVPdXRPZlN0b2NrKClcIlxuICAgICAgICBbY2hlY2tlZF09XCJoaWRlT3V0T2ZTdG9ja1wiXG4gICAgICAgIGNsYXNzPVwiZm9ybS1jaGVjay1pbnB1dFwiXG4gICAgICAgIGlkPVwiY2hrSGlkZU91dE9mU3RvY2tcIlxuICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgLz5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==