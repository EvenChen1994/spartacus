/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import { select } from '@ngrx/store';
import { PickupLocationActions, PickupLocationsSelectors } from '../store';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
/**
 * Store the Point of Service a user wants to collect a product from before it is added to the cart.
 */
export class IntendedPickupLocationService {
    constructor(store) {
        this.store = store;
        // Intentional empty constructor
    }
    getIntendedLocation(productCode) {
        return this.store.pipe(select(PickupLocationsSelectors.getIntendedPickupLocationByProductCode(productCode)));
    }
    getPickupOption(productCode) {
        return this.store.pipe(select(PickupLocationsSelectors.getPickupOptionByProductCode(productCode)));
    }
    setPickupOption(productCode, pickupOption) {
        this.store.dispatch(PickupLocationActions.SetPickupOption({
            payload: { productCode, pickupOption },
        }));
    }
    setIntendedLocation(productCode, location) {
        this.store.dispatch(PickupLocationActions.AddLocation({ payload: { productCode, location } }));
    }
    removeIntendedLocation(productCode) {
        this.store.dispatch(PickupLocationActions.RemoveLocation({ payload: productCode }));
    }
}
IntendedPickupLocationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: IntendedPickupLocationService, deps: [{ token: i1.Store }], target: i0.ɵɵFactoryTarget.Injectable });
IntendedPickupLocationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: IntendedPickupLocationService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: IntendedPickupLocationService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Store }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZW5kZWQtcGlja3VwLWxvY2F0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcGlja3VwLWluLXN0b3JlL2NvcmUvZmFjYWRlL2ludGVuZGVkLXBpY2t1cC1sb2NhdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQVMsTUFBTSxhQUFhLENBQUM7QUFRNUMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLHdCQUF3QixFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFHM0U7O0dBRUc7QUFFSCxNQUFNLE9BQU8sNkJBQTZCO0lBR3hDLFlBQXNCLEtBQXNDO1FBQXRDLFVBQUssR0FBTCxLQUFLLENBQWlDO1FBQzFELGdDQUFnQztJQUNsQyxDQUFDO0lBRUQsbUJBQW1CLENBQ2pCLFdBQW1CO1FBRW5CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQ3BCLE1BQU0sQ0FDSix3QkFBd0IsQ0FBQyxzQ0FBc0MsQ0FDN0QsV0FBVyxDQUNaLENBQ0YsQ0FDRixDQUFDO0lBQ0osQ0FBQztJQUVELGVBQWUsQ0FBQyxXQUFtQjtRQUNqQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUNwQixNQUFNLENBQUMsd0JBQXdCLENBQUMsNEJBQTRCLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FDM0UsQ0FBQztJQUNKLENBQUM7SUFFRCxlQUFlLENBQUMsV0FBbUIsRUFBRSxZQUEwQjtRQUM3RCxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FDakIscUJBQXFCLENBQUMsZUFBZSxDQUFDO1lBQ3BDLE9BQU8sRUFBRSxFQUFFLFdBQVcsRUFBRSxZQUFZLEVBQUU7U0FDdkMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsbUJBQW1CLENBQ2pCLFdBQW1CLEVBQ25CLFFBQWlDO1FBRWpDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUNqQixxQkFBcUIsQ0FBQyxXQUFXLENBQUMsRUFBRSxPQUFPLEVBQUUsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUMxRSxDQUFDO0lBQ0osQ0FBQztJQUVELHNCQUFzQixDQUFDLFdBQW1CO1FBQ3hDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUNqQixxQkFBcUIsQ0FBQyxjQUFjLENBQUMsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLENBQUMsQ0FDL0QsQ0FBQztJQUNKLENBQUM7OzBIQTlDVSw2QkFBNkI7OEhBQTdCLDZCQUE2QjsyRkFBN0IsNkJBQTZCO2tCQUR6QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgc2VsZWN0LCBTdG9yZSB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7XG4gIEF1Z21lbnRlZFBvaW50T2ZTZXJ2aWNlLFxuICBJbnRlbmRlZFBpY2t1cExvY2F0aW9uRmFjYWRlLFxuICBQaWNrdXBPcHRpb24sXG59IGZyb20gJ0BzcGFydGFjdXMvcGlja3VwLWluLXN0b3JlL3Jvb3QnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQaWNrdXBMb2NhdGlvbkFjdGlvbnMsIFBpY2t1cExvY2F0aW9uc1NlbGVjdG9ycyB9IGZyb20gJy4uL3N0b3JlJztcbmltcG9ydCB7IFN0YXRlV2l0aFBpY2t1cExvY2F0aW9ucyB9IGZyb20gJy4uL3N0b3JlL3BpY2t1cC1sb2NhdGlvbi1zdGF0ZSc7XG5cbi8qKlxuICogU3RvcmUgdGhlIFBvaW50IG9mIFNlcnZpY2UgYSB1c2VyIHdhbnRzIHRvIGNvbGxlY3QgYSBwcm9kdWN0IGZyb20gYmVmb3JlIGl0IGlzIGFkZGVkIHRvIHRoZSBjYXJ0LlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW50ZW5kZWRQaWNrdXBMb2NhdGlvblNlcnZpY2VcbiAgaW1wbGVtZW50cyBJbnRlbmRlZFBpY2t1cExvY2F0aW9uRmFjYWRlXG57XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBzdG9yZTogU3RvcmU8U3RhdGVXaXRoUGlja3VwTG9jYXRpb25zPikge1xuICAgIC8vIEludGVudGlvbmFsIGVtcHR5IGNvbnN0cnVjdG9yXG4gIH1cblxuICBnZXRJbnRlbmRlZExvY2F0aW9uKFxuICAgIHByb2R1Y3RDb2RlOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxBdWdtZW50ZWRQb2ludE9mU2VydmljZSB8IHVuZGVmaW5lZD4ge1xuICAgIHJldHVybiB0aGlzLnN0b3JlLnBpcGUoXG4gICAgICBzZWxlY3QoXG4gICAgICAgIFBpY2t1cExvY2F0aW9uc1NlbGVjdG9ycy5nZXRJbnRlbmRlZFBpY2t1cExvY2F0aW9uQnlQcm9kdWN0Q29kZShcbiAgICAgICAgICBwcm9kdWN0Q29kZVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGdldFBpY2t1cE9wdGlvbihwcm9kdWN0Q29kZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxQaWNrdXBPcHRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZS5waXBlKFxuICAgICAgc2VsZWN0KFBpY2t1cExvY2F0aW9uc1NlbGVjdG9ycy5nZXRQaWNrdXBPcHRpb25CeVByb2R1Y3RDb2RlKHByb2R1Y3RDb2RlKSlcbiAgICApO1xuICB9XG5cbiAgc2V0UGlja3VwT3B0aW9uKHByb2R1Y3RDb2RlOiBzdHJpbmcsIHBpY2t1cE9wdGlvbjogUGlja3VwT3B0aW9uKTogdm9pZCB7XG4gICAgdGhpcy5zdG9yZS5kaXNwYXRjaChcbiAgICAgIFBpY2t1cExvY2F0aW9uQWN0aW9ucy5TZXRQaWNrdXBPcHRpb24oe1xuICAgICAgICBwYXlsb2FkOiB7IHByb2R1Y3RDb2RlLCBwaWNrdXBPcHRpb24gfSxcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHNldEludGVuZGVkTG9jYXRpb24oXG4gICAgcHJvZHVjdENvZGU6IHN0cmluZyxcbiAgICBsb2NhdGlvbjogQXVnbWVudGVkUG9pbnRPZlNlcnZpY2VcbiAgKTogdm9pZCB7XG4gICAgdGhpcy5zdG9yZS5kaXNwYXRjaChcbiAgICAgIFBpY2t1cExvY2F0aW9uQWN0aW9ucy5BZGRMb2NhdGlvbih7IHBheWxvYWQ6IHsgcHJvZHVjdENvZGUsIGxvY2F0aW9uIH0gfSlcbiAgICApO1xuICB9XG5cbiAgcmVtb3ZlSW50ZW5kZWRMb2NhdGlvbihwcm9kdWN0Q29kZTogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5zdG9yZS5kaXNwYXRjaChcbiAgICAgIFBpY2t1cExvY2F0aW9uQWN0aW9ucy5SZW1vdmVMb2NhdGlvbih7IHBheWxvYWQ6IHByb2R1Y3RDb2RlIH0pXG4gICAgKTtcbiAgfVxufVxuIl19