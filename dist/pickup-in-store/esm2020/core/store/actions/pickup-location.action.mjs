/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { createAction, props } from '@ngrx/store';
export const ADD_LOCATION = '[Pickup Locations] Add Location';
export const REMOVE_LOCATION = '[Pickup Locations] Remove Location';
export const SET_PICKUP_OPTION = '[Pickup Locations] Set Pickup Option';
export const GET_STORE_DETAILS = '[Pickup Locations] Get Store Details';
export const STORE_DETAILS_SUCCESS = '[Pickup Locations] Get Store Details Success';
export const STORE_DETAILS_FAIL = '[Pickup Locations] Get Store Details Fail';
export const SET_PICKUP_OPTION_TO_DELIVERY = '[Pickup Locations] Set Pickup Option To Delivery';
export const SET_PICKUP_OPTION_TO_DELIVERY_SUCCESS = '[Pickup Locations] Set Pickup Option To Delivery Success';
export const SET_PICKUP_OPTION_TO_PICKUP_IN_STORE = '[Pickup Locations] Set Pickup Option To Pickup In Store';
export const SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS = '[Pickup Locations] Set Pickup Option To Pickup In Store Success';
export const CART_RELOAD_SUCCESS = '[Pickup Locations] CART_RELOAD_SUCCESS';
export const DELIVERY_MODE_SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS = '[Pickup Locations CHECKOUT] CHECKOUT_SET_PICKUP_OPTION_TO_PICKUP_IN_STORE_SUCCESS';
/**
 * Add a proposed pickup location for a product code.
 */
export const AddLocation = createAction(ADD_LOCATION, props());
/**
 * Remove a proposed pickup location for a product code.
 */
export const RemoveLocation = createAction(REMOVE_LOCATION, props());
/**
 * Set pickup option for a product code.
 */
export const SetPickupOption = createAction(SET_PICKUP_OPTION, props());
/**
 * Get Store Details By Id
 */
export const GetStoreDetailsById = createAction(GET_STORE_DETAILS, props());
export const SetStoreDetailsSuccess = createAction(STORE_DETAILS_SUCCESS, props());
export const SetStoreDetailsFailure = createAction(STORE_DETAILS_FAIL, props());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja3VwLWxvY2F0aW9uLmFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9waWNrdXAtaW4tc3RvcmUvY29yZS9zdG9yZS9hY3Rpb25zL3BpY2t1cC1sb2NhdGlvbi5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBT2xELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxpQ0FBaUMsQ0FBQztBQUM5RCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsb0NBQW9DLENBQUM7QUFDcEUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsc0NBQXNDLENBQUM7QUFDeEUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsc0NBQXNDLENBQUM7QUFDeEUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQ2hDLDhDQUE4QyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLDJDQUEyQyxDQUFDO0FBRTlFLE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUN4QyxrREFBa0QsQ0FBQztBQUNyRCxNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FDaEQsMERBQTBELENBQUM7QUFFN0QsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQy9DLHlEQUF5RCxDQUFDO0FBQzVELE1BQU0sQ0FBQyxNQUFNLDRDQUE0QyxHQUN2RCxpRUFBaUUsQ0FBQztBQUNwRSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyx3Q0FBd0MsQ0FBQztBQUM1RSxNQUFNLENBQUMsTUFBTSwwREFBMEQsR0FDckUsbUZBQW1GLENBQUM7QUFhdEY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsWUFBWSxDQUNyQyxZQUFZLEVBQ1osS0FBSyxFQUFvQixDQUMxQixDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsWUFBWSxDQUN4QyxlQUFlLEVBQ2YsS0FBSyxFQUF1QixDQUM3QixDQUFDO0FBRUY7O0dBRUc7QUFFSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsWUFBWSxDQUN6QyxpQkFBaUIsRUFDakIsS0FBSyxFQUFxQyxDQUMzQyxDQUFDO0FBRUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxZQUFZLENBQzdDLGlCQUFpQixFQUNqQixLQUFLLEVBQXVCLENBQzdCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxZQUFZLENBQ2hELHFCQUFxQixFQUNyQixLQUFLLEVBQStCLENBQ3JDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxZQUFZLENBQ2hELGtCQUFrQixFQUNsQixLQUFLLEVBQW9CLENBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBjcmVhdGVBY3Rpb24sIHByb3BzIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgUG9pbnRPZlNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHtcbiAgQXVnbWVudGVkUG9pbnRPZlNlcnZpY2UsXG4gIFBpY2t1cE9wdGlvbixcbn0gZnJvbSAnQHNwYXJ0YWN1cy9waWNrdXAtaW4tc3RvcmUvcm9vdCc7XG5cbmV4cG9ydCBjb25zdCBBRERfTE9DQVRJT04gPSAnW1BpY2t1cCBMb2NhdGlvbnNdIEFkZCBMb2NhdGlvbic7XG5leHBvcnQgY29uc3QgUkVNT1ZFX0xPQ0FUSU9OID0gJ1tQaWNrdXAgTG9jYXRpb25zXSBSZW1vdmUgTG9jYXRpb24nO1xuZXhwb3J0IGNvbnN0IFNFVF9QSUNLVVBfT1BUSU9OID0gJ1tQaWNrdXAgTG9jYXRpb25zXSBTZXQgUGlja3VwIE9wdGlvbic7XG5leHBvcnQgY29uc3QgR0VUX1NUT1JFX0RFVEFJTFMgPSAnW1BpY2t1cCBMb2NhdGlvbnNdIEdldCBTdG9yZSBEZXRhaWxzJztcbmV4cG9ydCBjb25zdCBTVE9SRV9ERVRBSUxTX1NVQ0NFU1MgPVxuICAnW1BpY2t1cCBMb2NhdGlvbnNdIEdldCBTdG9yZSBEZXRhaWxzIFN1Y2Nlc3MnO1xuZXhwb3J0IGNvbnN0IFNUT1JFX0RFVEFJTFNfRkFJTCA9ICdbUGlja3VwIExvY2F0aW9uc10gR2V0IFN0b3JlIERldGFpbHMgRmFpbCc7XG5cbmV4cG9ydCBjb25zdCBTRVRfUElDS1VQX09QVElPTl9UT19ERUxJVkVSWSA9XG4gICdbUGlja3VwIExvY2F0aW9uc10gU2V0IFBpY2t1cCBPcHRpb24gVG8gRGVsaXZlcnknO1xuZXhwb3J0IGNvbnN0IFNFVF9QSUNLVVBfT1BUSU9OX1RPX0RFTElWRVJZX1NVQ0NFU1MgPVxuICAnW1BpY2t1cCBMb2NhdGlvbnNdIFNldCBQaWNrdXAgT3B0aW9uIFRvIERlbGl2ZXJ5IFN1Y2Nlc3MnO1xuXG5leHBvcnQgY29uc3QgU0VUX1BJQ0tVUF9PUFRJT05fVE9fUElDS1VQX0lOX1NUT1JFID1cbiAgJ1tQaWNrdXAgTG9jYXRpb25zXSBTZXQgUGlja3VwIE9wdGlvbiBUbyBQaWNrdXAgSW4gU3RvcmUnO1xuZXhwb3J0IGNvbnN0IFNFVF9QSUNLVVBfT1BUSU9OX1RPX1BJQ0tVUF9JTl9TVE9SRV9TVUNDRVNTID1cbiAgJ1tQaWNrdXAgTG9jYXRpb25zXSBTZXQgUGlja3VwIE9wdGlvbiBUbyBQaWNrdXAgSW4gU3RvcmUgU3VjY2Vzcyc7XG5leHBvcnQgY29uc3QgQ0FSVF9SRUxPQURfU1VDQ0VTUyA9ICdbUGlja3VwIExvY2F0aW9uc10gQ0FSVF9SRUxPQURfU1VDQ0VTUyc7XG5leHBvcnQgY29uc3QgREVMSVZFUllfTU9ERV9TRVRfUElDS1VQX09QVElPTl9UT19QSUNLVVBfSU5fU1RPUkVfU1VDQ0VTUyA9XG4gICdbUGlja3VwIExvY2F0aW9ucyBDSEVDS09VVF0gQ0hFQ0tPVVRfU0VUX1BJQ0tVUF9PUFRJT05fVE9fUElDS1VQX0lOX1NUT1JFX1NVQ0NFU1MnO1xuZXhwb3J0IHR5cGUgQWRkTG9jYXRpb25Qcm9wcyA9IHtcbiAgcGF5bG9hZDoge1xuICAgIHByb2R1Y3RDb2RlOiBzdHJpbmc7XG4gICAgbG9jYXRpb246IEF1Z21lbnRlZFBvaW50T2ZTZXJ2aWNlO1xuICB9O1xufTtcblxuZXhwb3J0IHR5cGUgU2V0UGlja3VwT3B0aW9uUHJvcHMgPSB7XG4gIHByb2R1Y3RDb2RlOiBzdHJpbmc7XG4gIHBpY2t1cE9wdGlvbjogUGlja3VwT3B0aW9uO1xufTtcblxuLyoqXG4gKiBBZGQgYSBwcm9wb3NlZCBwaWNrdXAgbG9jYXRpb24gZm9yIGEgcHJvZHVjdCBjb2RlLlxuICovXG5leHBvcnQgY29uc3QgQWRkTG9jYXRpb24gPSBjcmVhdGVBY3Rpb24oXG4gIEFERF9MT0NBVElPTixcbiAgcHJvcHM8QWRkTG9jYXRpb25Qcm9wcz4oKVxuKTtcblxuLyoqXG4gKiBSZW1vdmUgYSBwcm9wb3NlZCBwaWNrdXAgbG9jYXRpb24gZm9yIGEgcHJvZHVjdCBjb2RlLlxuICovXG5leHBvcnQgY29uc3QgUmVtb3ZlTG9jYXRpb24gPSBjcmVhdGVBY3Rpb24oXG4gIFJFTU9WRV9MT0NBVElPTixcbiAgcHJvcHM8eyBwYXlsb2FkOiBzdHJpbmcgfT4oKVxuKTtcblxuLyoqXG4gKiBTZXQgcGlja3VwIG9wdGlvbiBmb3IgYSBwcm9kdWN0IGNvZGUuXG4gKi9cblxuZXhwb3J0IGNvbnN0IFNldFBpY2t1cE9wdGlvbiA9IGNyZWF0ZUFjdGlvbihcbiAgU0VUX1BJQ0tVUF9PUFRJT04sXG4gIHByb3BzPHsgcGF5bG9hZDogU2V0UGlja3VwT3B0aW9uUHJvcHMgfT4oKVxuKTtcblxuLyoqXG4gKiBHZXQgU3RvcmUgRGV0YWlscyBCeSBJZFxuICovXG5leHBvcnQgY29uc3QgR2V0U3RvcmVEZXRhaWxzQnlJZCA9IGNyZWF0ZUFjdGlvbihcbiAgR0VUX1NUT1JFX0RFVEFJTFMsXG4gIHByb3BzPHsgcGF5bG9hZDogc3RyaW5nIH0+KClcbik7XG5cbmV4cG9ydCBjb25zdCBTZXRTdG9yZURldGFpbHNTdWNjZXNzID0gY3JlYXRlQWN0aW9uKFxuICBTVE9SRV9ERVRBSUxTX1NVQ0NFU1MsXG4gIHByb3BzPHsgcGF5bG9hZDogUG9pbnRPZlNlcnZpY2UgfT4oKVxuKTtcblxuZXhwb3J0IGNvbnN0IFNldFN0b3JlRGV0YWlsc0ZhaWx1cmUgPSBjcmVhdGVBY3Rpb24oXG4gIFNUT1JFX0RFVEFJTFNfRkFJTCxcbiAgcHJvcHM8eyBwYXlsb2FkOiBhbnkgfT4oKVxuKTtcbiJdfQ==