import { MemoizedSelector } from '@ngrx/store';
import { PointOfServiceStock, StateUtils, Stock } from '@spartacus/core';
import { StateWithStock, StockLevelState } from '../stock-state';
export declare const getStockLevelState: MemoizedSelector<StateWithStock, StateUtils.LoaderState<StockLevelState>>;
export declare const getStockEntities: MemoizedSelector<StateWithStock, StockLevelState>;
export declare const getStockLoading: MemoizedSelector<StateWithStock, boolean>;
export declare const getStockSuccess: MemoizedSelector<StateWithStock, boolean>;
export declare const getStockError: MemoizedSelector<StateWithStock, boolean>;
export declare const hasSearchStarted: MemoizedSelector<StateWithStock, boolean>;
export declare const hasSearchStartedForProductCode: (productCode: string) => MemoizedSelector<StateWithStock, boolean>;
export declare const getStoresWithStockForProductCode: (productCode: string) => MemoizedSelector<StateWithStock, PointOfServiceStock[]>;
export declare const getStockAtStore: (productCode: string, storeName: string) => MemoizedSelector<StateWithStock, Stock | undefined>;
