{"version":3,"file":"spartacus-organization-unit-order-core.mjs","sources":["../../../feature-libs/organization/unit-order/core/connectors/unit-order.adapter.ts","../../../feature-libs/organization/unit-order/core/connectors/unit-order.connector.ts","../../../feature-libs/organization/unit-order/core/connectors/index.ts","../../../feature-libs/organization/unit-order/core/guards/unit-level-orders-viewer.guard.ts","../../../feature-libs/organization/unit-order/core/guards/index.ts","../../../feature-libs/organization/unit-order/core/model/unit-order.model.ts","../../../feature-libs/organization/unit-order/core/model/augmented-core.model.ts","../../../feature-libs/organization/unit-order/core/model/index.ts","../../../feature-libs/organization/unit-order/core/store/unit-order-state.ts","../../../feature-libs/organization/unit-order/core/store/actions/unit-order.action.ts","../../../feature-libs/organization/unit-order/core/store/actions/unit-order-group.actions.ts","../../../feature-libs/organization/unit-order/core/store/actions/index.ts","../../../feature-libs/organization/unit-order/core/store/effects/unit-order.effect.ts","../../../feature-libs/organization/unit-order/core/store/effects/index.ts","../../../feature-libs/organization/unit-order/core/store/reducers/unit-order.reducer.ts","../../../feature-libs/organization/unit-order/core/store/reducers/index.ts","../../../feature-libs/organization/unit-order/core/store/selectors/feature.selector.ts","../../../feature-libs/organization/unit-order/core/store/selectors/unit-order.selector.ts","../../../feature-libs/organization/unit-order/core/store/selectors/unit-order-group.selectors.ts","../../../feature-libs/organization/unit-order/core/store/selectors/index.ts","../../../feature-libs/organization/unit-order/core/store/index.ts","../../../feature-libs/organization/unit-order/core/services/unit-order.service.ts","../../../feature-libs/organization/unit-order/core/services/index.ts","../../../feature-libs/organization/unit-order/core/store/unit-order-store.module.ts","../../../feature-libs/organization/unit-order/core/unit-order-core.module.ts","../../../feature-libs/organization/unit-order/core/public_api.ts","../../../feature-libs/organization/unit-order/core/spartacus-organization-unit-order-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { Observable } from 'rxjs';\n\nexport abstract class UnitOrderAdapter {\n  /**\n   * Abstract method used to load order history for units.\n   *\n   * @param userId The `userId` for given user\n   * @param pageSize\n   * @param currentPage\n   * @param filters\n   * @param sort Sorting method\n   */\n  abstract loadUnitOrderHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    filters?: string,\n    sort?: string\n  ): Observable<OrderHistoryList>;\n\n  /**\n   * Abstract method used to load order data.\n   *\n   * @param userId The `userId` for given user\n   * @param orderCode The `orderCode` for given order\n   */\n  abstract loadUnitOrderDetail(\n    userId: string,\n    orderCode: string\n  ): Observable<Order>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { Observable } from 'rxjs';\nimport { UnitOrderAdapter } from './unit-order.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitOrderConnector {\n  constructor(protected adapter: UnitOrderAdapter) {}\n\n  public getUnitOrderHistory(\n    userId: string,\n    pageSize?: number,\n    currentPage?: number,\n    filters?: string,\n    sort?: string\n  ): Observable<OrderHistoryList> {\n    return this.adapter.loadUnitOrderHistory(\n      userId,\n      pageSize,\n      currentPage,\n      filters,\n      sort\n    );\n  }\n\n  public getUnitOrderDetail(\n    userId: string,\n    orderCode: string\n  ): Observable<Order> {\n    return this.adapter.loadUnitOrderDetail(userId, orderCode);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './unit-order.connector';\nexport * from './unit-order.adapter';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  B2BUserRight,\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { User, UserAccountFacade } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitLevelOrdersViewerGuard implements CanActivate {\n  constructor(\n    protected userAccountFacade: UserAccountFacade,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.userAccountFacade.get().pipe(\n      filter((user): user is User => !!user && Object.keys(user).length > 0),\n      map((user) => (user as User & { roles?: string[] }).roles),\n      map((roles) => {\n        const hasRole =\n          Array.isArray(roles) &&\n          (roles.includes(B2BUserRight.UNITORDERVIEWER) ||\n            roles.includes(B2BUserRole.ADMIN));\n\n        if (!hasRole) {\n          this.routingService.go({ cxRoute: 'home' });\n\n          this.globalMessageService.add(\n            {\n              key: 'organization.notification.noSufficientPermissions',\n            },\n            GlobalMessageType.MSG_TYPE_WARNING\n          );\n        }\n\n        return hasRole;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './unit-level-orders-viewer.guard';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface OrderHistoryQueryParams {\n  currentPage?: number;\n  sortCode?: string;\n  filters?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { B2BUnit, B2BUser } from '@spartacus/core';\n\ndeclare module '@spartacus/order/root' {\n  interface OrderHistory {\n    orgUnit?: B2BUnit;\n    orgCustomer?: B2BUser;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './unit-order.model';\n\n// Imported for side effects (module augmentation)\nimport './augmented-core.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\n\nexport const UNIT_ORDER_FEATURE = 'unit order';\nexport const UNIT_ORDERS = '[Unit Order] Unit Orders';\nexport const UNIT_ORDER_DETAILS = '[Unit Order] Order Details';\n\nexport interface StateWithUnitOrder {\n  [UNIT_ORDER_FEATURE]: UnitOrderState;\n}\n\nexport interface UnitOrderState {\n  orders: StateUtils.LoaderState<OrderHistoryList>;\n  orderDetail: StateUtils.LoaderState<Order>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { UNIT_ORDERS, UNIT_ORDER_DETAILS } from '../unit-order-state';\n\nexport const LOAD_UNIT_ORDERS = '[Unit Order] Load Unit Orders';\nexport const LOAD_UNIT_ORDERS_FAIL = '[Unit Order] Load Unit Orders Fail';\nexport const LOAD_UNIT_ORDERS_SUCCESS = '[Unit Order] Load Unit Orders Success';\nexport const CLEAR_UNIT_ORDERS = '[Unit Order] Clear Unit Orders';\n\nexport const LOAD_ORDER_DETAILS = '[Unit Order] Load Unit Order Details';\nexport const LOAD_ORDER_DETAILS_FAIL =\n  '[Unit Order] Load Unit Order Details Fail';\nexport const LOAD_ORDER_DETAILS_SUCCESS =\n  '[Unit Order] Load Unit Order Details Success';\nexport const CLEAR_ORDER_DETAILS = '[Unit Order] Clear Unit Order Details';\n\nexport class LoadUnitOrders extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_UNIT_ORDERS;\n  constructor(\n    public payload: {\n      userId: string;\n      pageSize?: number;\n      currentPage?: number;\n      filters?: string;\n      sort?: string;\n    }\n  ) {\n    super(UNIT_ORDERS);\n  }\n}\n\nexport class LoadUnitOrdersFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_UNIT_ORDERS_FAIL;\n  constructor(public payload: any) {\n    super(UNIT_ORDERS, payload);\n  }\n}\n\nexport class LoadUnitOrdersSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_UNIT_ORDERS_SUCCESS;\n  constructor(public payload?: OrderHistoryList) {\n    super(UNIT_ORDERS);\n  }\n}\n\nexport class ClearUnitOrders extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_UNIT_ORDERS;\n  constructor() {\n    super(UNIT_ORDERS);\n  }\n}\n\nexport class LoadOrderDetails extends StateUtils.LoaderLoadAction {\n  readonly type = LOAD_ORDER_DETAILS;\n  constructor(\n    public payload: {\n      userId: string;\n      orderCode: string;\n    }\n  ) {\n    super(UNIT_ORDER_DETAILS);\n  }\n}\n\nexport class LoadOrderDetailsFail extends StateUtils.LoaderFailAction {\n  readonly type = LOAD_ORDER_DETAILS_FAIL;\n  constructor(public payload: any) {\n    super(UNIT_ORDER_DETAILS, payload);\n  }\n}\n\nexport class LoadOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {\n  readonly type = LOAD_ORDER_DETAILS_SUCCESS;\n  constructor(public payload: Order) {\n    super(UNIT_ORDER_DETAILS);\n  }\n}\n\nexport class ClearOrderDetails extends StateUtils.LoaderResetAction {\n  readonly type = CLEAR_ORDER_DETAILS;\n  constructor() {\n    super(UNIT_ORDER_DETAILS);\n  }\n}\n\nexport type UnitOrdersAction =\n  | LoadUnitOrders\n  | LoadUnitOrdersFail\n  | LoadUnitOrdersSuccess\n  | ClearUnitOrders\n  | LoadOrderDetails\n  | LoadOrderDetailsFail\n  | LoadOrderDetailsSuccess\n  | ClearOrderDetails;\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './unit-order.action';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as UnitOrderActions from './unit-order-group.actions';\n\nexport { UnitOrderActions };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  LoggerService,\n  SiteContextActions,\n  normalizeHttpError,\n} from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { UnitOrderConnector } from '../../connectors/unit-order.connector';\nimport { UnitOrderActions } from '../actions';\n\n@Injectable()\nexport class UnitOrderEffect {\n  protected logger = inject(LoggerService);\n\n  constructor(\n    private actions$: Actions,\n    private orderConnector: UnitOrderConnector\n  ) {}\n\n  loadUnitOrders$: Observable<UnitOrderActions.UnitOrdersAction> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(UnitOrderActions.LOAD_UNIT_ORDERS),\n        map((action: UnitOrderActions.LoadUnitOrders) => action.payload),\n        switchMap((payload) => {\n          return this.orderConnector\n            .getUnitOrderHistory(\n              payload.userId,\n              payload.pageSize,\n              payload.currentPage,\n              payload.filters,\n              payload.sort\n            )\n            .pipe(\n              map((orders: OrderHistoryList) => {\n                return new UnitOrderActions.LoadUnitOrdersSuccess(orders);\n              }),\n              catchError((error) =>\n                of(\n                  new UnitOrderActions.LoadUnitOrdersFail(\n                    normalizeHttpError(error, this.logger)\n                  )\n                )\n              )\n            );\n        })\n      )\n  );\n\n  resetUserOrders$: Observable<UnitOrderActions.ClearUnitOrders> = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(SiteContextActions.LANGUAGE_CHANGE),\n        map(() => {\n          return new UnitOrderActions.ClearUnitOrders();\n        })\n      )\n  );\n\n  loadOrderDetails$: Observable<UnitOrderActions.UnitOrdersAction> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(UnitOrderActions.LOAD_ORDER_DETAILS),\n        map((action: UnitOrderActions.LoadOrderDetails) => action.payload),\n        switchMap((payload) => {\n          return this.orderConnector\n            .getUnitOrderDetail(payload.userId, payload.orderCode)\n            .pipe(\n              map((order: Order) => {\n                return new UnitOrderActions.LoadOrderDetailsSuccess(order);\n              }),\n              catchError((error) =>\n                of(\n                  new UnitOrderActions.LoadOrderDetailsFail(\n                    normalizeHttpError(error, this.logger)\n                  )\n                )\n              )\n            );\n        })\n      )\n    );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { UnitOrderEffect } from './unit-order.effect';\n\nexport const effects: any[] = [UnitOrderEffect];\n\nexport * from './unit-order.effect';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { UnitOrderActions } from '../actions';\n\nexport const initialState: OrderHistoryList = {\n  orders: [],\n  pagination: {},\n  sorts: [],\n};\n\nexport const detailInitialState: Order = {};\n\nexport function historyReducer(\n  state = initialState,\n  action: UnitOrderActions.UnitOrdersAction\n): OrderHistoryList {\n  switch (action.type) {\n    case UnitOrderActions.LOAD_UNIT_ORDERS_SUCCESS: {\n      return action.payload ? action.payload : initialState;\n    }\n    case UnitOrderActions.LOAD_UNIT_ORDERS_FAIL: {\n      return initialState;\n    }\n  }\n\n  return state;\n}\n\nexport function detailReducer(\n  state = detailInitialState,\n  action: UnitOrderActions.UnitOrdersAction\n): Order {\n  switch (action.type) {\n    case UnitOrderActions.LOAD_ORDER_DETAILS_SUCCESS: {\n      const order: Order = action.payload;\n      return order;\n    }\n    case UnitOrderActions.LOAD_ORDER_DETAILS_FAIL:\n    case UnitOrderActions.LOAD_ORDER_DETAILS: {\n      return detailInitialState;\n    }\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { StateUtils } from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport {\n  UnitOrderState,\n  UNIT_ORDERS,\n  UNIT_ORDER_DETAILS,\n} from '../unit-order-state';\n\nimport * as fromUnitOrdersReducer from './unit-order.reducer';\n\nexport function getReducers(): ActionReducerMap<UnitOrderState, any> {\n  return {\n    orders: StateUtils.loaderReducer<OrderHistoryList, any>(\n      UNIT_ORDERS,\n      fromUnitOrdersReducer.historyReducer\n    ),\n    orderDetail: StateUtils.loaderReducer<Order, any>(\n      UNIT_ORDER_DETAILS,\n      fromUnitOrdersReducer.detailReducer\n    ),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<UnitOrderState>> =\n  new InjectionToken<ActionReducerMap<UnitOrderState>>('UnitOrderReducers');\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  StateWithUnitOrder,\n  UnitOrderState,\n  UNIT_ORDER_FEATURE,\n} from '../unit-order-state';\n\nexport const getOrderState: MemoizedSelector<\n  StateWithUnitOrder,\n  UnitOrderState\n> = createFeatureSelector<UnitOrderState>(UNIT_ORDER_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { StateUtils } from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { StateWithUnitOrder, UnitOrderState } from '../unit-order-state';\nimport { getOrderState } from './feature.selector';\n\nexport const getOrdersState: MemoizedSelector<\n  StateWithUnitOrder,\n  StateUtils.LoaderState<OrderHistoryList>\n> = createSelector(getOrderState, (state: UnitOrderState) => state.orders);\n\nexport const getOrdersLoaded: MemoizedSelector<StateWithUnitOrder, boolean> =\n  createSelector(\n    getOrdersState,\n    (state: StateUtils.LoaderState<OrderHistoryList>) =>\n      StateUtils.loaderSuccessSelector(state)\n  );\n\nexport const getOrders: MemoizedSelector<StateWithUnitOrder, OrderHistoryList> =\n  createSelector(\n    getOrdersState,\n    (state: StateUtils.LoaderState<OrderHistoryList>) =>\n      StateUtils.loaderValueSelector(state)\n  );\n\nexport const getOrderDetailState: MemoizedSelector<\n  StateWithUnitOrder,\n  StateUtils.LoaderState<Order>\n> = createSelector(getOrderState, (state: UnitOrderState) => state.orderDetail);\n\nexport const getOrderDetails: MemoizedSelector<StateWithUnitOrder, Order> =\n  createSelector(getOrderDetailState, (state: StateUtils.LoaderState<Order>) =>\n    StateUtils.loaderValueSelector(state)\n  );\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './feature.selector';\nexport * from './unit-order.selector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as UnitOrderSelectors from './unit-order-group.selectors';\n\nexport { UnitOrderSelectors };\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './actions/index';\nexport * from './effects/index';\nexport * from './unit-order-state';\nexport * from './reducers/index';\nexport * from './selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { RoutingService, UserIdService } from '@spartacus/core';\nimport { Order, OrderHistoryList } from '@spartacus/order/root';\nimport { UnitOrderFacade } from '@spartacus/organization/unit-order/root';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  StateWithUnitOrder,\n  UnitOrderActions,\n  UnitOrderSelectors,\n} from '../store';\n\n@Injectable({ providedIn: 'root' })\nexport class UnitOrderService implements UnitOrderFacade {\n  constructor(\n    protected store: Store<StateWithUnitOrder>,\n    protected userIdService: UserIdService,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Returns order history list\n   */\n  getOrderHistoryList(\n    pageSize: number\n  ): Observable<OrderHistoryList | undefined> {\n    return this.store.pipe(\n      select(UnitOrderSelectors.getOrdersState),\n      tap((orderListState) => {\n        const attemptedLoad =\n          orderListState.loading ||\n          orderListState.success ||\n          orderListState.error;\n        if (!attemptedLoad) {\n          this.loadOrderList(pageSize);\n        }\n      }),\n      map((orderListState) => orderListState.value)\n    );\n  }\n\n  /**\n   * Returns a loaded flag for order history list\n   */\n  getOrderHistoryListLoaded(): Observable<boolean> {\n    return this.store.pipe(select(UnitOrderSelectors.getOrdersLoaded));\n  }\n\n  /**\n   * Retrieves an order list\n   * @param pageSize page size\n   * @param currentPage current page\n   * @param sort sort\n   */\n  loadOrderList(\n    pageSize: number,\n    currentPage?: number,\n    filters?: string,\n    sort?: string\n  ): void {\n    this.userIdService.takeUserId(true).subscribe({\n      next: (userId) => {\n        this.store.dispatch(\n          new UnitOrderActions.LoadUnitOrders({\n            userId,\n            pageSize,\n            currentPage,\n            filters,\n            sort,\n          })\n        );\n      },\n      error: () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      },\n    });\n  }\n\n  /**\n   * Cleaning order list\n   */\n  clearOrderList(): void {\n    this.store.dispatch(new UnitOrderActions.ClearUnitOrders());\n  }\n\n  /**\n   * Returns an order's detail\n   */\n  getOrderDetails(): Observable<Order> {\n    return this.store.pipe(select(UnitOrderSelectors.getOrderDetails));\n  }\n\n  /**\n   * Retrieves order's details\n   *\n   * @param orderCode an order code\n   */\n  loadOrderDetails(orderCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) => {\n      this.store.dispatch(\n        new UnitOrderActions.LoadOrderDetails({\n          userId,\n          orderCode,\n        })\n      );\n    });\n  }\n\n  /**\n   * Clears order's details\n   */\n  clearOrderDetails(): void {\n    this.store.dispatch(new UnitOrderActions.ClearOrderDetails());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './unit-order.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { effects } from './effects/index';\nimport { reducerProvider, reducerToken } from './reducers/index';\nimport { UNIT_ORDER_FEATURE } from './unit-order-state';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(UNIT_ORDER_FEATURE, reducerToken),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class UnitOrderStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { UnitOrderFacade } from '@spartacus/organization/unit-order/root';\nimport { UnitOrderConnector } from './connectors';\nimport { UnitOrderService } from './services';\nimport { UnitOrderStoreModule } from './store/unit-order-store.module';\n\n@NgModule({\n  imports: [UnitOrderStoreModule],\n})\nexport class UnitOrderCoreModule {\n  static forRoot(): ModuleWithProviders<UnitOrderCoreModule> {\n    return {\n      ngModule: UnitOrderCoreModule,\n      providers: [\n        {\n          provide: UnitOrderFacade,\n          useExisting: UnitOrderService,\n        },\n        UnitOrderConnector,\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './guards/index';\nexport * from './model/index';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/selectors/index';\nexport * from './unit-order-core.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.UnitOrderAdapter","UnitOrderActions.LOAD_UNIT_ORDERS","UnitOrderActions.LoadUnitOrdersSuccess","UnitOrderActions.LoadUnitOrdersFail","UnitOrderActions.ClearUnitOrders","UnitOrderActions.LOAD_ORDER_DETAILS","UnitOrderActions.LoadOrderDetailsSuccess","UnitOrderActions.LoadOrderDetailsFail","i1","i2.UnitOrderConnector","UnitOrderActions.LOAD_UNIT_ORDERS_SUCCESS","UnitOrderActions.LOAD_UNIT_ORDERS_FAIL","UnitOrderActions.LOAD_ORDER_DETAILS_SUCCESS","UnitOrderActions.LOAD_ORDER_DETAILS_FAIL","fromUnitOrdersReducer.historyReducer","fromUnitOrdersReducer.detailReducer","UnitOrderSelectors.getOrdersState","UnitOrderSelectors.getOrdersLoaded","UnitOrderActions.LoadUnitOrders","UnitOrderSelectors.getOrderDetails","UnitOrderActions.LoadOrderDetails","UnitOrderActions.ClearOrderDetails","i2"],"mappings":";;;;;;;;;;;;;AAAA;;;;AAIG;MAKmB,gBAAgB,CAAA;AA4BrC;;ACrCD;;;;AAIG;MAUU,kBAAkB,CAAA;AAC7B,IAAA,WAAA,CAAsB,OAAyB,EAAA;QAAzB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAkB;KAAI;IAE5C,mBAAmB,CACxB,MAAc,EACd,QAAiB,EACjB,WAAoB,EACpB,OAAgB,EAChB,IAAa,EAAA;AAEb,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,CACtC,MAAM,EACN,QAAQ,EACR,WAAW,EACX,OAAO,EACP,IAAI,CACL,CAAC;KACH;IAEM,kBAAkB,CACvB,MAAc,EACd,SAAiB,EAAA;QAEjB,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;KAC5D;;+GAxBU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAFjB,MAAM,EAAA,CAAA,CAAA;2FAEP,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAH9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACbD;;;;AAIG;;ACJH;;;;AAIG;MAkBU,0BAA0B,CAAA;AACrC,IAAA,WAAA,CACY,iBAAoC,EACpC,cAA8B,EAC9B,oBAA0C,EAAA;QAF1C,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;KAClD;IAEJ,WAAW,GAAA;QACT,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,IAAI,CACtC,MAAM,CAAC,CAAC,IAAI,KAAmB,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,EACtE,GAAG,CAAC,CAAC,IAAI,KAAM,IAAoC,CAAC,KAAK,CAAC,EAC1D,GAAG,CAAC,CAAC,KAAK,KAAI;AACZ,YAAA,MAAM,OAAO,GACX,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AACpB,iBAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC;oBAC3C,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAEvC,IAAI,CAAC,OAAO,EAAE;gBACZ,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;AAE5C,gBAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC3B;AACE,oBAAA,GAAG,EAAE,mDAAmD;AACzD,iBAAA,EACD,iBAAiB,CAAC,gBAAgB,CACnC,CAAC;AACH,aAAA;AAED,YAAA,OAAO,OAAO,CAAC;SAChB,CAAC,CACH,CAAC;KACH;;uHA/BU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,cAFzB,MAAM,EAAA,CAAA,CAAA;2FAEP,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAHtC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACrBD;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;AAKI,MAAM,kBAAkB,GAAG,YAAY,CAAC;AACxC,MAAM,WAAW,GAAG,0BAA0B,CAAC;AAC/C,MAAM,kBAAkB,GAAG,4BAA4B;;ACX9D;;;;AAIG;AAMI,MAAM,gBAAgB,GAAG,+BAA+B,CAAC;AACzD,MAAM,qBAAqB,GAAG,oCAAoC,CAAC;AACnE,MAAM,wBAAwB,GAAG,uCAAuC,CAAC;AACzE,MAAM,iBAAiB,GAAG,gCAAgC,CAAC;AAE3D,MAAM,kBAAkB,GAAG,sCAAsC,CAAC;AAClE,MAAM,uBAAuB,GAClC,2CAA2C,CAAC;AACvC,MAAM,0BAA0B,GACrC,8CAA8C,CAAC;AAC1C,MAAM,mBAAmB,GAAG,uCAAuC,CAAC;AAE9D,MAAA,cAAe,SAAQ,UAAU,CAAC,gBAAgB,CAAA;AAE7D,IAAA,WAAA,CACS,OAMN,EAAA;QAED,KAAK,CAAC,WAAW,CAAC,CAAC;QARZ,IAAO,CAAA,OAAA,GAAP,OAAO,CAMb;QARM,IAAI,CAAA,IAAA,GAAG,gBAAgB,CAAC;KAWhC;AACF,CAAA;AAEY,MAAA,kBAAmB,SAAQ,UAAU,CAAC,gBAAgB,CAAA;AAEjE,IAAA,WAAA,CAAmB,OAAY,EAAA;AAC7B,QAAA,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QADX,IAAO,CAAA,OAAA,GAAP,OAAO,CAAK;QADtB,IAAI,CAAA,IAAA,GAAG,qBAAqB,CAAC;KAGrC;AACF,CAAA;AAEY,MAAA,qBAAsB,SAAQ,UAAU,CAAC,mBAAmB,CAAA;AAEvE,IAAA,WAAA,CAAmB,OAA0B,EAAA;QAC3C,KAAK,CAAC,WAAW,CAAC,CAAC;QADF,IAAO,CAAA,OAAA,GAAP,OAAO,CAAmB;QADpC,IAAI,CAAA,IAAA,GAAG,wBAAwB,CAAC;KAGxC;AACF,CAAA;AAEY,MAAA,eAAgB,SAAQ,UAAU,CAAC,iBAAiB,CAAA;AAE/D,IAAA,WAAA,GAAA;QACE,KAAK,CAAC,WAAW,CAAC,CAAC;QAFZ,IAAI,CAAA,IAAA,GAAG,iBAAiB,CAAC;KAGjC;AACF,CAAA;AAEY,MAAA,gBAAiB,SAAQ,UAAU,CAAC,gBAAgB,CAAA;AAE/D,IAAA,WAAA,CACS,OAGN,EAAA;QAED,KAAK,CAAC,kBAAkB,CAAC,CAAC;QALnB,IAAO,CAAA,OAAA,GAAP,OAAO,CAGb;QALM,IAAI,CAAA,IAAA,GAAG,kBAAkB,CAAC;KAQlC;AACF,CAAA;AAEY,MAAA,oBAAqB,SAAQ,UAAU,CAAC,gBAAgB,CAAA;AAEnE,IAAA,WAAA,CAAmB,OAAY,EAAA;AAC7B,QAAA,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;QADlB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAK;QADtB,IAAI,CAAA,IAAA,GAAG,uBAAuB,CAAC;KAGvC;AACF,CAAA;AAEY,MAAA,uBAAwB,SAAQ,UAAU,CAAC,mBAAmB,CAAA;AAEzE,IAAA,WAAA,CAAmB,OAAc,EAAA;QAC/B,KAAK,CAAC,kBAAkB,CAAC,CAAC;QADT,IAAO,CAAA,OAAA,GAAP,OAAO,CAAO;QADxB,IAAI,CAAA,IAAA,GAAG,0BAA0B,CAAC;KAG1C;AACF,CAAA;AAEY,MAAA,iBAAkB,SAAQ,UAAU,CAAC,iBAAiB,CAAA;AAEjE,IAAA,WAAA,GAAA;QACE,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAFnB,IAAI,CAAA,IAAA,GAAG,mBAAmB,CAAC;KAGnC;AACF;;ACzFD;;;;AAIG;;;;;;;;;;;;;;;;;;;;;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAgBU,eAAe,CAAA;IAG1B,WACU,CAAA,QAAiB,EACjB,cAAkC,EAAA;QADlC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QACjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAoB;AAJlC,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAOzC,QAAA,IAAA,CAAA,eAAe,GAAkD,YAAY,CAC3E,MACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACC,gBAAiC,CAAC,EACzC,GAAG,CAAC,CAAC,MAAuC,KAAK,MAAM,CAAC,OAAO,CAAC,EAChE,SAAS,CAAC,CAAC,OAAO,KAAI;YACpB,OAAO,IAAI,CAAC,cAAc;iBACvB,mBAAmB,CAClB,OAAO,CAAC,MAAM,EACd,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,IAAI,CACb;AACA,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,MAAwB,KAAI;AAC/B,gBAAA,OAAO,IAAIC,qBAAsC,CAAC,MAAM,CAAC,CAAC;AAC5D,aAAC,CAAC,EACF,UAAU,CAAC,CAAC,KAAK,KACf,EAAE,CACA,IAAIC,kBAAmC,CACrC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CACvC,CACF,CACF,CACF,CAAC;SACL,CAAC,CACH,CACJ,CAAC;QAEF,IAAgB,CAAA,gBAAA,GAAiD,YAAY,CAC3E,MACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAAC,kBAAkB,CAAC,eAAe,CAAC,EAC1C,GAAG,CAAC,MAAK;AACP,YAAA,OAAO,IAAIC,eAAgC,EAAE,CAAC;SAC/C,CAAC,CACH,CACJ,CAAC;AAEF,QAAA,IAAA,CAAA,iBAAiB,GACf,YAAY,CAAC,MACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,MAAM,CAACC,kBAAmC,CAAC,EAC3C,GAAG,CAAC,CAAC,MAAyC,KAAK,MAAM,CAAC,OAAO,CAAC,EAClE,SAAS,CAAC,CAAC,OAAO,KAAI;YACpB,OAAO,IAAI,CAAC,cAAc;iBACvB,kBAAkB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,SAAS,CAAC;AACrD,iBAAA,IAAI,CACH,GAAG,CAAC,CAAC,KAAY,KAAI;AACnB,gBAAA,OAAO,IAAIC,uBAAwC,CAAC,KAAK,CAAC,CAAC;AAC7D,aAAC,CAAC,EACF,UAAU,CAAC,CAAC,KAAK,KACf,EAAE,CACA,IAAIC,oBAAqC,CACvC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CACvC,CACF,CACF,CACF,CAAC;SACL,CAAC,CACH,CACF,CAAC;KAhEA;;4GANO,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;gHAAf,eAAe,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAD3B,UAAU;;;ACnBX;;;;AAIG;AAII,MAAM,OAAO,GAAU,CAAC,eAAe,CAAC;;ACR/C;;;;AAIG;AAKI,MAAM,YAAY,GAAqB;AAC5C,IAAA,MAAM,EAAE,EAAE;AACV,IAAA,UAAU,EAAE,EAAE;AACd,IAAA,KAAK,EAAE,EAAE;CACV,CAAC;AAEK,MAAM,kBAAkB,GAAU,EAAE,CAAC;SAE5B,cAAc,CAC5B,KAAK,GAAG,YAAY,EACpB,MAAyC,EAAA;IAEzC,QAAQ,MAAM,CAAC,IAAI;AACjB,QAAA,KAAKC,wBAAyC,EAAE;AAC9C,YAAA,OAAO,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC;AACvD,SAAA;AACD,QAAA,KAAKC,qBAAsC,EAAE;AAC3C,YAAA,OAAO,YAAY,CAAC;AACrB,SAAA;AACF,KAAA;AAED,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;SAEe,aAAa,CAC3B,KAAK,GAAG,kBAAkB,EAC1B,MAAyC,EAAA;IAEzC,QAAQ,MAAM,CAAC,IAAI;AACjB,QAAA,KAAKC,0BAA2C,EAAE;AAChD,YAAA,MAAM,KAAK,GAAU,MAAM,CAAC,OAAO,CAAC;AACpC,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,KAAKC,uBAAwC,CAAC;AAC9C,QAAA,KAAKR,kBAAmC,EAAE;AACxC,YAAA,OAAO,kBAAkB,CAAC;AAC3B,SAAA;AACF,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf;;AChDA;;;;AAIG;SAca,WAAW,GAAA;IACzB,OAAO;QACL,MAAM,EAAE,UAAU,CAAC,aAAa,CAC9B,WAAW,EACXS,cAAoC,CACrC;QACD,WAAW,EAAE,UAAU,CAAC,aAAa,CACnC,kBAAkB,EAClBC,aAAmC,CACpC;KACF,CAAC;AACJ,CAAC;AAEM,MAAM,YAAY,GACvB,IAAI,cAAc,CAAmC,mBAAmB,CAAC,CAAC;AAErE,MAAM,eAAe,GAAa;AACvC,IAAA,OAAO,EAAE,YAAY;AACrB,IAAA,UAAU,EAAE,WAAW;CACxB;;ACrCD;;;;AAIG;AASI,MAAM,aAAa,GAGtB,qBAAqB,CAAiB,kBAAkB,CAAC;;AChB7D;;;;AAIG;AAQI,MAAM,cAAc,GAGvB,cAAc,CAAC,aAAa,EAAE,CAAC,KAAqB,KAAK,KAAK,CAAC,MAAM,CAAC,CAAC;AAEpE,MAAM,eAAe,GAC1B,cAAc,CACZ,cAAc,EACd,CAAC,KAA+C,KAC9C,UAAU,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAC1C,CAAC;AAEG,MAAM,SAAS,GACpB,cAAc,CACZ,cAAc,EACd,CAAC,KAA+C,KAC9C,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,CACxC,CAAC;AAEG,MAAM,mBAAmB,GAG5B,cAAc,CAAC,aAAa,EAAE,CAAC,KAAqB,KAAK,KAAK,CAAC,WAAW,CAAC,CAAC;AAEzE,MAAM,eAAe,GAC1B,cAAc,CAAC,mBAAmB,EAAE,CAAC,KAAoC,KACvE,UAAU,CAAC,mBAAmB,CAAC,KAAK,CAAC,CACtC;;ACvCH;;;;AAIG;;;;;;;;;;;;ACJH;;;;AAIG;;ACJH;;;;AAIG;;ACJH;;;;AAIG;MAgBU,gBAAgB,CAAA;AAC3B,IAAA,WAAA,CACY,KAAgC,EAChC,aAA4B,EAC5B,cAA8B,EAAA;QAF9B,IAAK,CAAA,KAAA,GAAL,KAAK,CAA2B;QAChC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KACtC;AAEJ;;AAEG;AACH,IAAA,mBAAmB,CACjB,QAAgB,EAAA;AAEhB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CACpB,MAAM,CAACC,cAAiC,CAAC,EACzC,GAAG,CAAC,CAAC,cAAc,KAAI;AACrB,YAAA,MAAM,aAAa,GACjB,cAAc,CAAC,OAAO;AACtB,gBAAA,cAAc,CAAC,OAAO;gBACtB,cAAc,CAAC,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,EAAE;AAClB,gBAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,aAAA;AACH,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,KAAK,CAAC,CAC9C,CAAC;KACH;AAED;;AAEG;IACH,yBAAyB,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAACC,eAAkC,CAAC,CAAC,CAAC;KACpE;AAED;;;;;AAKG;AACH,IAAA,aAAa,CACX,QAAgB,EAChB,WAAoB,EACpB,OAAgB,EAChB,IAAa,EAAA;QAEb,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;AAC5C,YAAA,IAAI,EAAE,CAAC,MAAM,KAAI;gBACf,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAIC,cAA+B,CAAC;oBAClC,MAAM;oBACN,QAAQ;oBACR,WAAW;oBACX,OAAO;oBACP,IAAI;AACL,iBAAA,CAAC,CACH,CAAC;aACH;YACD,KAAK,EAAE,MAAK;;aAEX;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;AAEG;IACH,cAAc,GAAA;QACZ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAId,eAAgC,EAAE,CAAC,CAAC;KAC7D;AAED;;AAEG;IACH,eAAe,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAACe,eAAkC,CAAC,CAAC,CAAC;KACpE;AAED;;;;AAIG;AACH,IAAA,gBAAgB,CAAC,SAAiB,EAAA;QAChC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;YACnD,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAIC,gBAAiC,CAAC;gBACpC,MAAM;gBACN,SAAS;AACV,aAAA,CAAC,CACH,CAAC;AACJ,SAAC,CAAC,CAAC;KACJ;AAED;;AAEG;IACH,iBAAiB,GAAA;QACf,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAIC,iBAAkC,EAAE,CAAC,CAAC;KAC/D;;6GApGU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAb,IAAA,CAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cADH,MAAM,EAAA,CAAA,CAAA;2FACnB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAD5B,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ACnBlC;;;;AAIG;;ACJH;;;;AAIG;MAgBU,oBAAoB,CAAA;;iHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAApB,oBAAoB,EAAA,OAAA,EAAA,CAAAA,IAAA,CAAA,kBAAA,EAAAc,IAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAFpB,SAAA,EAAA,CAAC,eAAe,CAAC,EAH1B,OAAA,EAAA,CAAA,WAAW,CAAC,UAAU,CAAC,kBAAkB,EAAE,YAAY,CAAC;AACxD,QAAA,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA,EAAA,CAAA,CAAA;2FAIxB,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAPhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;AACP,wBAAA,WAAW,CAAC,UAAU,CAAC,kBAAkB,EAAE,YAAY,CAAC;AACxD,wBAAA,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC;AAClC,qBAAA;oBACD,SAAS,EAAE,CAAC,eAAe,CAAC;AAC7B,iBAAA,CAAA;;;ACnBD;;;;AAIG;MAWU,mBAAmB,CAAA;AAC9B,IAAA,OAAO,OAAO,GAAA;QACZ,OAAO;AACL,YAAA,QAAQ,EAAE,mBAAmB;AAC7B,YAAA,SAAS,EAAE;AACT,gBAAA;AACE,oBAAA,OAAO,EAAE,eAAe;AACxB,oBAAA,WAAW,EAAE,gBAAgB;AAC9B,iBAAA;gBACD,kBAAkB;AACnB,aAAA;SACF,CAAC;KACH;;gHAZU,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAFpB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YAFpB,oBAAoB,CAAA,EAAA,CAAA,CAAA;2FAEnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAH/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAChC,iBAAA,CAAA;;;ACdD;;;;AAIG;;ACJH;;AAEG;;;;"}