{"version":3,"file":"spartacus-organization-account-summary-components.mjs","sources":["../../../feature-libs/organization/account-summary/components/details/document/filter/account-summary-document-filter.component.ts","../../../feature-libs/organization/account-summary/components/details/document/filter/account-summary-document-filter.component.html","../../../feature-libs/organization/account-summary/components/details/document/account-summary-document.component.ts","../../../feature-libs/organization/account-summary/components/details/document/account-summary-document.component.html","../../../feature-libs/organization/account-summary/components/details/document/filter/account-summary-document-filter.module.ts","../../../feature-libs/organization/account-summary/components/details/document/filter/index.ts","../../../feature-libs/organization/account-summary/components/details/document/account-summary-document.module.ts","../../../feature-libs/organization/account-summary/components/details/header/account-summary-header.component.ts","../../../feature-libs/organization/account-summary/components/details/header/account-summary-header.component.html","../../../feature-libs/organization/account-summary/components/details/header/account-summary-header.module.ts","../../../feature-libs/organization/account-summary/components/list/account-summary-list.component.ts","../../../feature-libs/organization/account-summary/components/list/account-summary-list.component.html","../../../feature-libs/organization/account-summary/components/services/account-summary-item.service.ts","../../../feature-libs/organization/account-summary/components/services/account-summary-unit-list.service.ts","../../../feature-libs/organization/account-summary/components/list/account-summary-list.config.ts","../../../feature-libs/organization/account-summary/components/list/account-summary-list.module.ts","../../../feature-libs/organization/account-summary/components/account-summary-components.module.ts","../../../feature-libs/organization/account-summary/components/details/document/index.ts","../../../feature-libs/organization/account-summary/components/details/header/index.ts","../../../feature-libs/organization/account-summary/components/list/index.ts","../../../feature-libs/organization/account-summary/components/model/augmented.model.ts","../../../feature-libs/organization/account-summary/components/model/index.ts","../../../feature-libs/organization/account-summary/components/services/index.ts","../../../feature-libs/organization/account-summary/components/public_api.ts","../../../feature-libs/organization/account-summary/components/spartacus-organization-account-summary-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { TranslationService } from '@spartacus/core';\nimport {\n  AccountSummaryDocumentType,\n  DocumentQueryParams,\n  DocumentStatus,\n  FilterByOptions,\n} from '@spartacus/organization/account-summary/root';\nimport { Subscription, zip } from 'rxjs';\n\nimport {\n  AbstractControl,\n  AbstractControlOptions,\n  FormBuilder,\n  FormGroup,\n  ValidationErrors,\n} from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface ItemType {\n  code: string;\n  name?: string;\n}\n\ninterface GroupValidator {\n  startRange?: ValidationErrors | null;\n  endRange?: ValidationErrors | null;\n  groupValidator?: ValidationErrors | null;\n}\n\n@Component({\n  selector: 'cx-account-summary-document-filter',\n  templateUrl: './account-summary-document-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountSummaryDocumentFilterComponent\n  implements OnInit, OnDestroy\n{\n  @Input()\n  documentTypeOptions: Array<AccountSummaryDocumentType>;\n\n  @Input()\n  set initialFilters(initialFilters: DocumentQueryParams) {\n    this.initializeForm(initialFilters);\n  }\n\n  @Output()\n  filterListEvent = new EventEmitter<DocumentQueryParams>();\n\n  /* For Enum use in HTML */\n  FilterByOptions = FilterByOptions;\n\n  filterForm: FormGroup;\n\n  private subscription = new Subscription();\n\n  statusOptions: ItemType[];\n  filterByOptions: ItemType[];\n\n  constructor(\n    protected translation: TranslationService,\n    protected fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.getStatusOptions().subscribe(\n        (statusOptions) => (this.statusOptions = [...statusOptions])\n      )\n    );\n\n    this.subscription.add(\n      this.getFilterByOptions().subscribe(\n        (filterOptions) => (this.filterByOptions = [...filterOptions])\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  formSearch(): void {\n    const status = this.filterForm.get('status')?.value as DocumentStatus;\n    const filterByKey = this.filterForm.get('filterBy')\n      ?.value as FilterByOptions;\n    let filterByValue;\n    let startRange;\n    let endRange;\n\n    switch (filterByKey) {\n      case FilterByOptions.DOCUMENT_TYPE: {\n        filterByValue = this.filterForm.get('documentType')?.value;\n        break;\n      }\n      case FilterByOptions.DOCUMENT_NUMBER: {\n        filterByValue = this.filterForm.get('documentNumber')?.value;\n        break;\n      }\n      case FilterByOptions.DOCUMENT_NUMBER_RANGE: {\n        startRange = this.filterForm.get('documentNumberRange.from')?.value;\n        endRange = this.filterForm.get('documentNumberRange.to')?.value;\n        break;\n      }\n      case FilterByOptions.DATE_RANGE: {\n        const from = this.filterForm.get('documentDateRange.from')?.value;\n        const to = this.filterForm.get('documentDateRange.to')?.value;\n        startRange = from ? this.encodeDate(from) : '';\n        endRange = to ? this.encodeDate(to) : '';\n        break;\n      }\n      case FilterByOptions.DUE_DATE_RANGE: {\n        const from = this.filterForm.get('dueDateRange.from')?.value;\n        const to = this.filterForm.get('dueDateRange.to')?.value;\n        startRange = from ? this.encodeDate(from) : '';\n        endRange = to ? this.encodeDate(to) : '';\n        break;\n      }\n      case FilterByOptions.AMOUNT_RANGE: {\n        startRange = this.filterForm.get('originalAmountRange.from')?.value;\n        endRange = this.filterForm.get('originalAmountRange.to')?.value;\n        break;\n      }\n      case FilterByOptions.OPEN_AMOUNT_RANGE: {\n        startRange = this.filterForm.get('openAmountRange.from')?.value;\n        endRange = this.filterForm.get('openAmountRange.to')?.value;\n        break;\n      }\n    }\n    this.filterListEvent.emit({\n      status,\n      filterByKey,\n      filterByValue,\n      startRange,\n      endRange,\n    });\n  }\n\n  resetForm(andSearch = false): void {\n    const defaults = {\n      documentType: '',\n      documentNumber: '',\n      documentNumberRange: { from: '', to: '' },\n      documentDateRange: { from: '', to: '' },\n      dueDateRange: { from: '', to: '' },\n      originalAmountRange: { from: '', to: '' },\n      openAmountRange: { from: '', to: '' },\n    };\n\n    if (andSearch) {\n      // if set, clear all fields and perform search\n      this.filterForm.patchValue({\n        ...defaults,\n        status: DocumentStatus.OPEN,\n        filterBy: FilterByOptions.DOCUMENT_NUMBER,\n      });\n      this.formSearch();\n    } else {\n      // otherwise just clear all fields except status and filterBy\n      this.filterForm.patchValue(defaults);\n    }\n  }\n\n  protected getStatusOptions(): Observable<ItemType[]> {\n    const statusOptions: ItemType[] = (\n      Object.values(DocumentStatus) as Array<string>\n    ).map((code) => ({ code }));\n\n    const translations = statusOptions.map((status) =>\n      this.translation.translate(`orgAccountSummary.statuses.${status.code}`)\n    );\n\n    return zip(...translations).pipe(\n      map((texts) => {\n        texts.forEach((text, index) => (statusOptions[index].name = text));\n        return statusOptions;\n      })\n    );\n  }\n\n  protected getFilterByOptions(): Observable<ItemType[]> {\n    const filterByOptions: ItemType[] = (\n      Object.values(FilterByOptions) as Array<string>\n    ).map((code) => ({ code }));\n\n    const translations = filterByOptions.map((status) =>\n      this.translation.translate(\n        `orgAccountSummary.filterByOptions.${status.code}`\n      )\n    );\n\n    return zip(...translations).pipe(\n      map((texts) => {\n        texts.forEach((text, index) => (filterByOptions[index].name = text));\n        return filterByOptions;\n      })\n    );\n  }\n\n  private initializeForm({\n    status,\n    filterByKey,\n    filterByValue,\n    startRange,\n    endRange,\n  }: DocumentQueryParams): void {\n    const generateRangeGroup = (\n      filterByOption: FilterByOptions,\n      validator?: GroupValidator\n    ): FormGroup => {\n      return this.fb.group(\n        {\n          from: [\n            filterByKey === filterByOption && (startRange ?? ''),\n            validator?.startRange,\n          ],\n          to: [\n            filterByKey === filterByOption && (endRange ?? ''),\n            validator?.endRange,\n          ],\n        },\n        { validators: validator?.groupValidator } as AbstractControlOptions\n      );\n    };\n\n    const generateDateRangeGroup = (\n      filterByOption: FilterByOptions,\n      validator?: GroupValidator | null\n    ): FormGroup => {\n      return this.fb.group(\n        {\n          from: [\n            filterByKey === filterByOption && startRange\n              ? this.decodeDate(startRange)\n              : '',\n            validator?.startRange,\n          ],\n          to: [\n            filterByKey === filterByOption && endRange\n              ? this.decodeDate(endRange)\n              : '',\n            validator?.endRange,\n          ],\n        },\n        { validators: validator?.groupValidator } as AbstractControlOptions\n      );\n    };\n\n    const validRange = (type: 'date' | 'number'): ValidationErrors => {\n      return (c: AbstractControl): ValidationErrors | null => {\n        const from = c.get('from') as AbstractControl;\n        const to = c.get('to') as AbstractControl;\n\n        if (from.pristine || from.invalid || to.pristine || to.invalid) {\n          return null;\n        }\n        if (type === 'date' && from.value > to.value) {\n          return { toDateMustComeAfterFrom: true };\n        }\n        if (type === 'number') {\n          return isFromLargerThanTo(from, to)\n            ? { toAmountMustBeLargeThanFrom: true }\n            : null;\n        }\n        return null;\n      };\n    };\n\n    function isFromLargerThanTo(\n      from: AbstractControl<any, any>,\n      to: AbstractControl<any, any>\n    ) {\n      const fromValue = parseFloat(from.value) || 0;\n      const toValue = parseFloat(to.value) || 0;\n      return !isNaN(from.value) && !isNaN(to.value) && fromValue > toValue;\n    }\n\n    this.filterForm = this.fb.group({\n      status: status || DocumentStatus.OPEN,\n      filterBy: filterByKey || FilterByOptions.DOCUMENT_NUMBER,\n      documentType:\n        filterByKey === FilterByOptions.DOCUMENT_TYPE && (filterByValue ?? ''),\n      documentNumber:\n        filterByKey === FilterByOptions.DOCUMENT_NUMBER &&\n        (filterByValue ?? ''),\n      documentNumberRange: generateRangeGroup(\n        FilterByOptions.DOCUMENT_NUMBER_RANGE\n      ),\n      documentDateRange: generateDateRangeGroup(FilterByOptions.DATE_RANGE, {\n        groupValidator: validRange('date'),\n      }),\n      dueDateRange: generateDateRangeGroup(FilterByOptions.DUE_DATE_RANGE, {\n        groupValidator: validRange('date'),\n      }),\n      originalAmountRange: generateRangeGroup(FilterByOptions.AMOUNT_RANGE, {\n        groupValidator: validRange('number'),\n      }),\n      openAmountRange: generateRangeGroup(FilterByOptions.OPEN_AMOUNT_RANGE, {\n        groupValidator: validRange('number'),\n      }),\n    });\n    this.subscription.add(\n      this.filterForm\n        .get('filterBy')\n        ?.valueChanges.subscribe(() => this.filterByChanged())\n    );\n  }\n\n  private filterByChanged() {\n    this.resetForm(false);\n  }\n\n  private encodeDate(inputDate: string): string {\n    const [year, month, day] = inputDate.split('-');\n    return `${month}/${day}/${year}`;\n  }\n\n  private decodeDate(inputDate: string): string {\n    const [month, day, year] = inputDate.split('/');\n    return `${year}-${month}-${day}`;\n  }\n}\n","<ng-template #rangeInput let-formGroup=\"formGroup\" let-type=\"type\">\n  <ng-container [formGroup]=\"formGroup\">\n    <label class=\"cx-account-summary-document-filter-form-item\">\n      <span>{{ 'orgAccountSummary.filter.startRange' | cxTranslate }}</span>\n      <ng-container *ngIf=\"type === 'date'; else inputFrom\">\n        <cx-date-picker [control]=\"formGroup.controls.from\"></cx-date-picker>\n      </ng-container>\n      <ng-template #inputFrom>\n        <input\n          class=\"cx-account-summary-document-filter-form-input\"\n          [type]=\"type\"\n          formControlName=\"from\"\n        />\n        <cx-form-errors [control]=\"formGroup.controls.from\"></cx-form-errors>\n      </ng-template>\n    </label>\n\n    <label class=\"cx-account-summary-document-filter-form-item\">\n      <span>{{ 'orgAccountSummary.filter.endRange' | cxTranslate }}</span>\n      <ng-container *ngIf=\"type === 'date'; else inputTo\">\n        <cx-date-picker [control]=\"formGroup.controls.to\"></cx-date-picker>\n      </ng-container>\n      <ng-template #inputTo>\n        <input\n          class=\"cx-account-summary-document-filter-form-input\"\n          [type]=\"type\"\n          formControlName=\"to\"\n        />\n        <cx-form-errors [control]=\"formGroup.controls.to\"></cx-form-errors>\n      </ng-template>\n      <cx-form-errors\n        [control]=\"formGroup\"\n        [prefix]=\"'orgAccountSummary.filter.errors'\"\n      ></cx-form-errors>\n    </label>\n  </ng-container>\n</ng-template>\n\n<form (ngSubmit)=\"formSearch()\" [formGroup]=\"filterForm\">\n  <div\n    class=\"cx-account-summary-document-filter-form\"\n    *ngIf=\"filterForm.controls.filterBy.value as filterBy\"\n  >\n    <label class=\"cx-account-summary-document-filter-form-item\">\n      <span>{{ 'orgAccountSummary.filter.status' | cxTranslate }}</span>\n      <ng-select\n        formControlName=\"status\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"statusOptions\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        [cxNgSelectA11y]=\"{\n          ariaLabel: 'orgAccountSummary.filter.status' | cxTranslate,\n          ariaControls: 'cx-account-summary-document-table'\n        }\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"filterForm.controls.status\"></cx-form-errors>\n    </label>\n\n    <label class=\"cx-account-summary-document-filter-form-item\">\n      <span>{{ 'orgAccountSummary.filter.filterBy' | cxTranslate }}</span>\n      <ng-select\n        formControlName=\"filterBy\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"filterByOptions\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        [cxNgSelectA11y]=\"{\n          ariaLabel: 'orgAccountSummary.filter.filterBy' | cxTranslate,\n          ariaControls: 'cx-account-summary-document-table'\n        }\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"filterForm.controls.filterBy\"></cx-form-errors>\n    </label>\n\n    <label\n      class=\"cx-account-summary-document-filter-form-item\"\n      *ngIf=\"filterBy === FilterByOptions.DOCUMENT_TYPE\"\n    >\n      <span>{{ 'orgAccountSummary.filter.documentType' | cxTranslate }}</span>\n      <ng-select\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"documentTypeOptions\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        formControlName=\"documentType\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"filterForm.controls.documentType\"\n      ></cx-form-errors>\n    </label>\n\n    <label\n      class=\"cx-account-summary-document-filter-form-item\"\n      *ngIf=\"filterBy === FilterByOptions.DOCUMENT_NUMBER\"\n    >\n      <span>{{ 'orgAccountSummary.filter.documentNumber' | cxTranslate }}</span>\n      <input\n        class=\"cx-account-summary-document-filter-form-input\"\n        formControlName=\"documentNumber\"\n      />\n      <cx-form-errors\n        [control]=\"filterForm.controls.documentNumber\"\n      ></cx-form-errors>\n    </label>\n\n    <ng-template [ngIf]=\"filterBy === FilterByOptions.DOCUMENT_NUMBER_RANGE\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          rangeInput;\n          context: {\n            formGroup: filterForm.get('documentNumberRange'),\n            type: 'text'\n          }\n        \"\n      >\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"filterBy === FilterByOptions.DATE_RANGE\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          rangeInput;\n          context: {\n            formGroup: filterForm.get('documentDateRange'),\n            type: 'date'\n          }\n        \"\n      >\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"filterBy === FilterByOptions.DUE_DATE_RANGE\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          rangeInput;\n          context: { formGroup: filterForm.get('dueDateRange'), type: 'date' }\n        \"\n      >\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"filterBy === FilterByOptions.AMOUNT_RANGE\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          rangeInput;\n          context: {\n            formGroup: filterForm.get('originalAmountRange'),\n            type: 'number'\n          }\n        \"\n      >\n      </ng-container>\n    </ng-template>\n\n    <ng-template [ngIf]=\"filterBy === FilterByOptions.OPEN_AMOUNT_RANGE\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          rangeInput;\n          context: {\n            formGroup: filterForm.get('openAmountRange'),\n            type: 'number'\n          }\n        \"\n      >\n      </ng-container>\n    </ng-template>\n\n    <div class=\"cx-account-summary-document-filter-form-button-block\">\n      <button\n        class=\"cx-action-link clear-btn\"\n        type=\"button\"\n        (click)=\"resetForm(true)\"\n      >\n        {{ 'orgAccountSummary.filter.clear' | cxTranslate }}\n      </button>\n      <button class=\"btn btn-primary\" type=\"submit\">\n        {{ 'orgAccountSummary.filter.search' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</form>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  LanguageService,\n  SortModel,\n  TranslationService,\n} from '@spartacus/core';\nimport {\n  AccountSummaryDocumentType,\n  AccountSummaryFacade,\n  AccountSummaryList,\n  DocumentFields,\n  DocumentQueryParams,\n  DocumentStatus,\n  FilterByOptions,\n} from '@spartacus/organization/account-summary/root';\nimport { FileDownloadService, ICON_TYPE } from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { skip, switchMap, take, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-account-summary-document',\n  templateUrl: './account-summary-document.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountSummaryDocumentComponent implements OnInit, OnDestroy {\n  /* For Enum use in HTML */\n  ICON_TYPE = ICON_TYPE;\n\n  documentTypeOptions: AccountSummaryDocumentType[];\n  sortOptions: SortModel[];\n\n  // Contains the initial query parameters and will be updated with current state of filters\n  _queryParams: DocumentQueryParams = {\n    status: DocumentStatus.OPEN,\n    filterByKey: FilterByOptions.DOCUMENT_NUMBER,\n    page: 0,\n    pageSize: 10,\n    fields: DocumentFields.FULL,\n  };\n  // Used to fire event every time query params are changed\n  queryParams$ = new BehaviorSubject<DocumentQueryParams>(this._queryParams);\n  // Used by template to subscribe to data from documents api\n  accountSummary$: Observable<AccountSummaryList> = this.queryParams$.pipe(\n    switchMap((param) => this.accountSummaryFacade.getDocumentList(param)),\n    tap((accountSummaryList: AccountSummaryList) => {\n      if (accountSummaryList.orgDocumentTypes) {\n        this.documentTypeOptions = accountSummaryList.orgDocumentTypes;\n      }\n\n      if (accountSummaryList.sorts) {\n        this.addNamesToSortModel(accountSummaryList.sorts);\n      }\n    })\n  );\n\n  private subscription = new Subscription();\n\n  constructor(\n    protected accountSummaryFacade: AccountSummaryFacade,\n    protected translation: TranslationService,\n    protected downloadService: FileDownloadService,\n    protected languageService: LanguageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .pipe(skip(1))\n        .subscribe(() =>\n          this.updateQueryParams({ fields: DocumentFields.FULL })\n        )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  pageChange(page: number): void {\n    this.updateQueryParams({\n      page: page,\n    });\n  }\n\n  changeSortCode(sortCode: string): void {\n    this.updateQueryParams({\n      sort: sortCode,\n      page: 0,\n    });\n  }\n\n  filterChange(newFilters: DocumentQueryParams): void {\n    this.updateQueryParams({\n      ...newFilters,\n      page: 0,\n    });\n  }\n\n  downloadAttachment(documentId?: string, attachmentId?: string): void {\n    this.accountSummaryFacade\n      .getDocumentAttachment(documentId, attachmentId)\n      .pipe(take(1))\n      .subscribe((data) => {\n        const file = new Blob([data], { type: data.type });\n        const url = URL.createObjectURL(file);\n        this.downloadService.download(url, attachmentId);\n      });\n  }\n\n  private updateQueryParams(partialParams: DocumentQueryParams) {\n    // Overwrite each value present in partialParams to _queryParams\n    Object.entries(partialParams).forEach(\n      (param) => ((this._queryParams as any)[param[0]] = param[1])\n    );\n    // Every request that doesn't specify fields should be set to DEFAULT\n    if (!partialParams.fields) {\n      this._queryParams.fields = DocumentFields.DEFAULT;\n    }\n\n    this.queryParams$.next(this._queryParams);\n  }\n\n  private addNamesToSortModel(sorts: Array<SortModel>) {\n    this.sortOptions = sorts;\n    const translations = sorts.map((sort) =>\n      this.translation.translate(`orgAccountSummary.sorts.${sort.code}`)\n    );\n\n    combineLatest(translations)\n      .pipe(take(1))\n      .subscribe((translated) =>\n        this.sortOptions.forEach(\n          (sort, index) => (sort.name = translated[index])\n        )\n      );\n  }\n}\n","<ng-container *ngIf=\"accountSummary$ | async as accountSummary\">\n  <div>\n    <!-- HEADER -->\n    <div class=\"cx-account-summary-document-header\">\n      <h2>\n        {{ 'orgAccountSummary.document.header' | cxTranslate }}\n      </h2>\n    </div>\n\n    <!-- BODY -->\n    <div class=\"cx-account-summary-document-body\">\n      <cx-account-summary-document-filter\n        [documentTypeOptions]=\"documentTypeOptions\"\n        [initialFilters]=\"_queryParams\"\n        (filterListEvent)=\"filterChange($event)\"\n      >\n      </cx-account-summary-document-filter>\n\n      <ng-container\n        *ngIf=\"\n          accountSummary.pagination && accountSummary.pagination.totalResults;\n          else noDocument\n        \"\n      >\n        <div class=\"cx-account-summary-document-sort top\">\n          <label class=\"cx-account-summary-document-form-group form-group\">\n            <span>\n              {{ 'orgAccountSummary.sortBy' | cxTranslate }}\n            </span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"accountSummary.pagination.sort\"\n              placeholder=\"{{ 'orgAccountSummary.sortBy' | cxTranslate }}\"\n              [ariaLabel]=\"'orgAccountSummary.sortDocuments' | cxTranslate\"\n              ariaControls=\"cx-account-summary-document-table\"\n            ></cx-sorting>\n          </label>\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <!-- TABLE -->\n        <table\n          id=\"cx-account-summary-document-table\"\n          class=\"table cx-account-summary-document-table\"\n        >\n          <thead class=\"cx-account-summary-document-thead-mobile\">\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.id' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.type' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.date' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.originalAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.status' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              <cx-icon\n                [type]=\"ICON_TYPE.DOWNLOAD\"\n                class=\"cx-account-summary-document-attachment-icon\"\n                title=\"{{\n                  'orgAccountSummary.document.attachment' | cxTranslate\n                }}\"\n              ></cx-icon>\n            </th>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let document of accountSummary.orgDocuments\"\n              class=\"cx-account-summary-document-row\"\n            >\n              <td class=\"cx-account-summary-document-code\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.id' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.id }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-type\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.type' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.orgDocumentType?.name }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.date' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.createdAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.dueAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{\n                    'orgAccountSummary.document.originalAmount' | cxTranslate\n                  }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedOpenAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-status\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.status' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <span\n                    [ngClass]=\"{\n                      'status-open': document.status === 'open',\n                      'status-closed': document.status === 'closed'\n                    }\"\n                  >\n                    {{\n                      'orgAccountSummary.statuses.' + document?.status\n                        | cxTranslate\n                    }}\n                  </span>\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-attachment\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.attachment' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <button\n                    *ngIf=\"document.attachments?.[0]?.id as attachmentId\"\n                    class=\"cx-account-summary-document-attachment-btn\"\n                    (click)=\"downloadAttachment(document.id, attachmentId)\"\n                    attr.aria-label=\"{{\n                      'orgAccountSummary.document.attachmentDescription'\n                        | cxTranslate\n                          : {\n                              id: document.id,\n                              type: document.orgDocumentType?.name\n                            }\n                    }}\"\n                  >\n                    <cx-icon\n                      [type]=\"ICON_TYPE.FILE\"\n                      class=\"cx-account-summary-document-attachment-icon\"\n                      title=\"{{\n                        'orgAccountSummary.document.download' | cxTranslate\n                      }}\"\n                    >\n                    </cx-icon>\n                    <span\n                      class=\"cx-account-summary-document-attachment-text\"\n                      [innerText]=\"\n                        'orgAccountSummary.document.download' | cxTranslate\n                      \"\n                    >\n                    </span>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-account-summary-document-sort bottom\">\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </ng-container>\n\n      <!-- NO DOCUMENT CONTAINER -->\n      <ng-template #noDocument>\n        <div class=\"cx-account-summary-document-no-document\">\n          {{ 'orgAccountSummary.document.noneFound' | cxTranslate }}\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { AccountSummaryDocumentFilterComponent } from './account-summary-document-filter.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  DatePickerModule,\n  FormErrorsModule,\n  NgSelectA11yModule,\n} from '@spartacus/storefront';\n\n@NgModule({\n  declarations: [AccountSummaryDocumentFilterComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    NgSelectModule,\n    NgSelectA11yModule,\n    ReactiveFormsModule,\n    DatePickerModule,\n    FormErrorsModule,\n  ],\n  exports: [AccountSummaryDocumentFilterComponent],\n})\nexport class AccountSummaryDocumentFilterModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-document-filter.component';\nexport * from './account-summary-document-filter.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport {\n  IconModule,\n  PaginationModule,\n  SortingModule,\n} from '@spartacus/storefront';\nimport { AccountSummaryDocumentComponent } from './account-summary-document.component';\nimport { AccountSummaryDocumentFilterModule } from './filter';\n\nexport const accountSummaryDocumentCmsConfig: CmsConfig = {\n  cmsComponents: {\n    AccountSummaryDocumentComponent: {\n      component: AccountSummaryDocumentComponent,\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\n@NgModule({\n  declarations: [AccountSummaryDocumentComponent],\n  imports: [\n    AccountSummaryDocumentFilterModule,\n    CommonModule,\n    I18nModule,\n    SortingModule,\n    PaginationModule,\n    IconModule,\n  ],\n  providers: [provideDefaultConfig(accountSummaryDocumentCmsConfig)],\n})\nexport class AccountSummaryDocumentModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Address, LanguageService, TranslationService } from '@spartacus/core';\nimport {\n  AccountSummaryDetails,\n  AccountSummaryFacade,\n} from '@spartacus/organization/account-summary/root';\nimport { Card } from '@spartacus/storefront';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-account-summary-header',\n  templateUrl: './account-summary-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AccountSummaryHeaderComponent implements OnInit, OnDestroy {\n  notApplicable: string;\n  headerDetails$: Observable<AccountSummaryDetails> = this.languageService\n    .getActive()\n    .pipe(switchMap(() => this.accountSummaryFacade.getAccountSummary()));\n\n  protected subscriptions = new Subscription();\n\n  constructor(\n    protected accountSummaryFacade: AccountSummaryFacade,\n    protected languageService: LanguageService,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.translation\n        .translate('orgAccountSummary.details.notApplicable')\n        .subscribe((text) => (this.notApplicable = text))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  getIdCardContent(id?: string): Observable<Card> {\n    return this.translation.translate('orgAccountSummary.details.uid').pipe(\n      map((idTitle) => ({\n        title: idTitle,\n        text: [id || this.notApplicable],\n      }))\n    );\n  }\n\n  getNameCardContent(name?: string): Observable<Card> {\n    return this.translation.translate('orgAccountSummary.details.name').pipe(\n      map((nameTitle) => ({\n        title: nameTitle,\n        text: [name || this.notApplicable],\n      }))\n    );\n  }\n\n  getAddressCardContent(billingAddress?: Address): Observable<Card> {\n    return this.translation.translate('orgAccountSummary.details.address').pipe(\n      map((addressTitle) => {\n        const name = `${billingAddress?.title}, ${billingAddress?.firstName} ${billingAddress?.lastName}`;\n        const address = billingAddress?.formattedAddress;\n        const country = billingAddress?.country?.name;\n        return {\n          title: addressTitle,\n          text: Boolean(billingAddress)\n            ? [name, address, country]\n            : [this.notApplicable],\n        } as Card;\n      })\n    );\n  }\n\n  getCreditRepCardContent(creditRep?: string): Observable<Card> {\n    return this.translation\n      .translate('orgAccountSummary.details.creditRep')\n      .pipe(\n        map((creditRepTitle) => ({\n          title: creditRepTitle,\n          text: [creditRep || this.notApplicable],\n        }))\n      );\n  }\n\n  getCreditLineCardContent(creditLine?: string): Observable<Card> {\n    return this.translation\n      .translate('orgAccountSummary.details.creditLine')\n      .pipe(\n        map((creditLineTitle) => ({\n          title: creditLineTitle,\n          text: [creditLine || this.notApplicable],\n        }))\n      );\n  }\n\n  getCurrentBalanceCardContent(currentBalance?: string): Observable<Card> {\n    return this.translation\n      .translate('orgAccountSummary.details.currentBalance')\n      .pipe(\n        map((currentBalanceTitle) => ({\n          title: currentBalanceTitle,\n          text: [currentBalance || this.notApplicable],\n        }))\n      );\n  }\n\n  getOpenBalanceCardContent(openBalance?: string): Observable<Card> {\n    return this.translation\n      .translate('orgAccountSummary.details.openBalance')\n      .pipe(\n        map((openBalanceTitle) => ({\n          title: openBalanceTitle,\n          text: [openBalance || this.notApplicable],\n        }))\n      );\n  }\n\n  getPastDueBalanceCardContent(pastDueBalance?: string): Observable<Card> {\n    return this.translation\n      .translate('orgAccountSummary.details.pastDueBalance')\n      .pipe(\n        map((pastDueBalanceTitle) => ({\n          title: pastDueBalanceTitle,\n          text: [pastDueBalance ?? this.notApplicable],\n        }))\n      );\n  }\n}\n","<div class=\"cx-account-summary\" *ngIf=\"headerDetails$ | async as headerDetails\">\n  <div class=\"cx-account-summary-header-cards\">\n    <div\n      class=\"\n        cx-summary-card-responsive-group cx-summary-card-group-unit-address\n      \"\n    >\n      <!-- Card: Unit ID & Unit Name -->\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"getIdCardContent(headerDetails?.orgUnit?.uid) | async\"\n        >\n        </cx-card>\n\n        <cx-card\n          [content]=\"getNameCardContent(headerDetails?.orgUnit?.name) | async\"\n        >\n        </cx-card>\n      </div>\n\n      <!-- Card: Address -->\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"\n            getAddressCardContent(headerDetails?.billingAddress) | async\n          \"\n        >\n        </cx-card>\n      </div>\n    </div>\n\n    <div\n      class=\"\n        cx-summary-card-responsive-group cx-summary-card-group-credit-balance\n      \"\n    >\n      <!-- Card: Credit Rep & Credit Line -->\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"\n            getCreditRepCardContent(headerDetails?.accountManagerName) | async\n          \"\n        >\n        </cx-card>\n\n        <cx-card\n          [content]=\"\n            getCreditLineCardContent(headerDetails?.creditLimit) | async\n          \"\n        >\n        </cx-card>\n      </div>\n\n      <!-- Card: Current Balance & Open Balance -->\n      <div class=\"cx-summary-card cx-summary-card-balance\">\n        <cx-card\n          [content]=\"\n            getCurrentBalanceCardContent(\n              headerDetails?.amountBalance?.currentBalance\n            ) | async\n          \"\n        >\n        </cx-card>\n\n        <cx-card\n          [content]=\"\n            getOpenBalanceCardContent(headerDetails?.amountBalance?.openBalance)\n              | async\n          \"\n        >\n        </cx-card>\n      </div>\n    </div>\n\n    <!-- Card: Past Due Balance & Date Ranges -->\n    <div class=\"cx-summary-card cx-summary-card-group-due\">\n      <!-- If there range of past due balances are provided, display them here in a bordered section -->\n      <div\n        *ngIf=\"\n          headerDetails.amountBalance &&\n            headerDetails.amountBalance.dueBalances as pastDue;\n          else noDueRange\n        \"\n        [class.cx-account-summary-header-past-due-section]=\"pastDue.length > 0\"\n      >\n        <!-- Dynamically create lines of past due date ranges -->\n        <div\n          *ngIf=\"pastDue.length > 0\"\n          class=\"cx-account-summary-header-past-due-range-dates\"\n        >\n          <div\n            *ngFor=\"let rangeBalance of pastDue\"\n            class=\"cx-account-summary-header-past-due-range-collection\"\n            [tabindex]=\"-1\"\n          >\n            <div\n              class=\"cx-past-due-range-date\"\n              *ngIf=\"rangeBalance.dayRange as dayRange\"\n            >\n              <ng-template [ngIf]=\"dayRange?.maxBoundary\" [ngIfElse]=\"dayPlus\">\n                {{\n                  'orgAccountSummary.details.dayRange'\n                    | cxTranslate\n                      : {\n                          minBoundary: dayRange.minBoundary,\n                          maxBoundary: dayRange.maxBoundary\n                        }\n                }}\n              </ng-template>\n\n              <ng-template #dayPlus>\n                {{\n                  'orgAccountSummary.details.dayPlus'\n                    | cxTranslate: { minBoundary: dayRange.minBoundary }\n                }}\n              </ng-template>\n            </div>\n            <div>\n              {{ rangeBalance.amount }}\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"cx-account-summary-header-past-due-balance-total\"\n          [tabindex]=\"-1\"\n        >\n          <div class=\"cx-past-due-balance-label cx-card-title\">\n            {{ 'orgAccountSummary.details.pastDueBalance' | cxTranslate }}\n          </div>\n          <div>{{ headerDetails?.amountBalance?.pastDueBalance }}</div>\n        </div>\n      </div>\n\n      <!-- When there are no Ranges, only show a card containing the Past Due Balance -->\n      <ng-template #noDueRange>\n        <cx-card\n          [content]=\"\n            getPastDueBalanceCardContent(\n              headerDetails?.amountBalance?.pastDueBalance\n            ) | async\n          \"\n        >\n        </cx-card>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { CardModule } from '@spartacus/storefront';\nimport { AccountSummaryHeaderComponent } from './account-summary-header.component';\n\nexport const accountSummaryHeaderCmsConfig: CmsConfig = {\n  cmsComponents: {\n    AccountSummaryHeaderComponent: {\n      component: AccountSummaryHeaderComponent,\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\n@NgModule({\n  declarations: [AccountSummaryHeaderComponent],\n  imports: [CardModule, CommonModule, I18nModule],\n  providers: [provideDefaultConfig(accountSummaryHeaderCmsConfig)],\n})\nexport class AccountSummaryHeaderModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component } from '@angular/core';\nimport { UnitListComponent } from '@spartacus/organization/administration/components';\n@Component({\n  selector: 'cx-account-summary-list',\n  templateUrl: './account-summary-list.component.html',\n})\nexport class AccountSummaryListComponent extends UnitListComponent {}\n","<cx-org-list [hideAddButton]=\"true\">\n  <ng-container actions>\n    <button class=\"link\" (click)=\"expandAll()\">\n      {{ 'orgUnit.tree.expandAll' | cxTranslate }}\n    </button>\n    <button class=\"link\" (click)=\"collapseAll()\">\n      {{ 'orgUnit.tree.collapseAll' | cxTranslate }}\n    </button>\n  </ng-container>\n</cx-org-list>\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountSummaryItemService {\n  constructor(protected routingService: RoutingService) {}\n\n  launchDetails(item: B2BUnit): void {\n    if (item && Object.keys(item).length > 0) {\n      this.routingService.go({\n        cxRoute: 'orgAccountSummaryDetails',\n        params: item,\n      });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  OrganizationTableType,\n  UnitListService,\n} from '@spartacus/organization/administration/components';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountSummaryUnitListService extends UnitListService {\n  protected tableType = OrganizationTableType.ACCOUNT_SUMMARY_UNIT as any;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { ACCOUNT_SUMMARY_LIST_TRANSLATION_KEY } from '@spartacus/organization/account-summary/core';\nimport {\n  ItemService,\n  ListService,\n  OrganizationTableType,\n  ToggleLinkCellComponent,\n} from '@spartacus/organization/administration/components';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { AccountSummaryDocumentComponent } from '../details/document/account-summary-document.component';\nimport { AccountSummaryListComponent } from './account-summary-list.component';\nimport { AccountSummaryItemService } from '../services/account-summary-item.service';\nimport { AccountSummaryUnitListService } from '../services/account-summary-unit-list.service';\nimport { BREAKPOINT, TableConfig, TableLayout } from '@spartacus/storefront';\n\nexport const ACCOUNT_SUMMARY_DETAILS_TRANSLATION_KEY =\n  'orgAccountSummaryList.breadcrumbs.details';\n\nexport function accountSummaryUnitsTableConfigFactory(): TableConfig {\n  return {\n    table: {\n      [OrganizationTableType.ACCOUNT_SUMMARY_UNIT]: {\n        cells: ['name'],\n        options: {\n          layout: TableLayout.VERTICAL,\n          cells: {\n            name: {\n              dataComponent: ToggleLinkCellComponent,\n            },\n          },\n        },\n        [BREAKPOINT.lg]: {\n          cells: ['name'],\n        },\n      },\n    },\n  };\n}\n\nexport const accountSummaryListCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageAccountSummaryListComponent: {\n      component: AccountSummaryListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: AccountSummaryUnitListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: AccountSummaryItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: ACCOUNT_SUMMARY_LIST_TRANSLATION_KEY,\n            },\n          },\n        },\n        children: [\n          {\n            path: `:${ROUTE_PARAMS.unitCode}`,\n            component: AccountSummaryDocumentComponent,\n            data: {\n              cxPageMeta: {\n                breadcrumb: ACCOUNT_SUMMARY_DETAILS_TRANSLATION_KEY,\n              },\n            },\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  I18nModule,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { ListModule } from '@spartacus/organization/administration/components';\nimport { AccountSummaryListComponent } from './account-summary-list.component';\nimport {\n  accountSummaryListCmsConfig,\n  accountSummaryUnitsTableConfigFactory,\n} from './account-summary-list.config';\n\n@NgModule({\n  imports: [I18nModule, ListModule],\n  providers: [\n    provideDefaultConfig(accountSummaryListCmsConfig),\n    provideDefaultConfigFactory(accountSummaryUnitsTableConfigFactory),\n  ],\n  declarations: [AccountSummaryListComponent],\n  exports: [AccountSummaryListComponent],\n})\nexport class AccountSummaryListModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { AccountSummaryDocumentModule } from './details/document/account-summary-document.module';\nimport { AccountSummaryHeaderModule } from './details/header/account-summary-header.module';\nimport { AccountSummaryListModule } from './list/account-summary-list.module';\n\n@NgModule({\n  imports: [\n    AccountSummaryListModule,\n    AccountSummaryHeaderModule,\n    AccountSummaryDocumentModule,\n  ],\n})\nexport class AccountSummaryComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-document.component';\nexport * from './account-summary-document.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-header.component';\nexport * from './account-summary-header.module';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-list.component';\nexport * from './account-summary-list.module';\nexport * from './account-summary-list.config';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@spartacus/organization/administration/components';\nimport { OrganizationTableType } from '@spartacus/organization/administration/components';\n\ndeclare module '@spartacus/organization/administration/components' {\n  enum OrganizationTableType {\n    ACCOUNT_SUMMARY_UNIT = 'orgAccountSummary',\n  }\n}\n\n(OrganizationTableType as any)['ACCOUNT_SUMMARY_UNIT'] = 'orgAccountSummary';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './augmented.model';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-item.service';\nexport * from './account-summary-unit-list.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './account-summary-components.module';\nexport * from './details/document/filter/index';\nexport * from './details/document/index';\nexport * from './details/header/index';\nexport * from './list/index';\nexport * from './model/index';\nexport * from './services/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i3","i5","i4.AccountSummaryDocumentFilterComponent","i4"],"mappings":"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"}