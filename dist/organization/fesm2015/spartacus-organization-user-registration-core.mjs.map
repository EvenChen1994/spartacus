{"version":3,"file":"spartacus-organization-user-registration-core.mjs","sources":["../../../feature-libs/organization/user-registration/core/connectors/converters.ts","../../../feature-libs/organization/user-registration/core/connectors/user-registration.adapter.ts","../../../feature-libs/organization/user-registration/core/connectors/user-registration.connector.ts","../../../feature-libs/organization/user-registration/core/connectors/index.ts","../../../feature-libs/organization/user-registration/core/facade/user-registration.service.ts","../../../feature-libs/organization/user-registration/core/facade/facade-providers.ts","../../../feature-libs/organization/user-registration/core/http-interceptors/conflict/conflict.handler.ts","../../../feature-libs/organization/user-registration/core/http-interceptors/index.ts","../../../feature-libs/organization/user-registration/core/user-registration-core.module.ts","../../../feature-libs/organization/user-registration/core/public_api.ts","../../../feature-libs/organization/user-registration/core/spartacus-organization-user-registration-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { OrganizationUserRegistration } from '@spartacus/organization/user-registration/root';\n\nexport const ORGANIZATION_USER_REGISTRATION_SERIALIZER = new InjectionToken<\n  Converter<OrganizationUserRegistration, any>\n>('OrganizationUserRegistrationSerializer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\nimport { OrganizationUserRegistration } from '@spartacus/organization/user-registration/root';\n\nexport abstract class UserRegistrationAdapter {\n  /**\n   *\n   * Abstract method used to register B2B user\n   */\n  abstract registerUser(\n    userData: OrganizationUserRegistration\n  ): Observable<OrganizationUserRegistration>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrganizationUserRegistration } from '@spartacus/organization/user-registration/root';\nimport { UserRegistrationAdapter } from './user-registration.adapter';\n\n@Injectable()\nexport class UserRegistrationConnector {\n  constructor(protected adapter: UserRegistrationAdapter) {}\n\n  registerUser(\n    userData: OrganizationUserRegistration\n  ): Observable<OrganizationUserRegistration> {\n    return this.adapter.registerUser(userData);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters';\nexport * from './user-registration.adapter';\nexport * from './user-registration.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Command, CommandService } from '@spartacus/core';\nimport {\n  UserRegistrationFacade,\n  OrganizationUserRegistration,\n} from '@spartacus/organization/user-registration/root';\nimport { Observable } from 'rxjs';\nimport { UserRegistrationConnector } from '../connectors/user-registration.connector';\n\n@Injectable()\nexport class UserRegistrationService implements UserRegistrationFacade {\n  protected registerOrganizationUserCommand: Command<\n    {\n      userData: OrganizationUserRegistration;\n    },\n    OrganizationUserRegistration\n  > = this.command.create((payload) =>\n    this.userRegistrationConnector.registerUser(payload.userData)\n  );\n\n  constructor(\n    protected userRegistrationConnector: UserRegistrationConnector,\n    protected command: CommandService\n  ) {}\n\n  /**\n   * Register a new org user.\n   *\n   * @param userData\n   */\n  registerUser(\n    userData: OrganizationUserRegistration\n  ): Observable<OrganizationUserRegistration> {\n    return this.registerOrganizationUserCommand.execute({ userData });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { UserRegistrationFacade } from '@spartacus/organization/user-registration/root';\nimport { UserRegistrationService } from './user-registration.service';\n\nexport const facadeProviders: Provider[] = [\n  UserRegistrationService,\n  {\n    provide: UserRegistrationFacade,\n    useExisting: UserRegistrationService,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport {\n  ErrorModel,\n  HttpErrorHandler,\n  Priority,\n  HttpResponseStatus,\n  GlobalMessageType,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationUserRegistrationConflictHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.CONFLICT;\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse) {\n    if (request && this.getErrors(response)?.length) {\n      this.globalMessageService.add(\n        { key: 'userRegistrationForm.httpHandlers.conflict' },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors).filter(\n      (error: any) => error?.type === 'AlreadyExistsError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './conflict/conflict.handler';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpErrorHandler } from '@spartacus/core';\nimport { UserRegistrationConnector } from './connectors';\nimport { facadeProviders } from './facade/facade-providers';\nimport { OrganizationUserRegistrationConflictHandler } from './http-interceptors';\n\n@NgModule({})\nexport class UserRegistrationCoreModule {\n  static forRoot(): ModuleWithProviders<UserRegistrationCoreModule> {\n    return {\n      ngModule: UserRegistrationCoreModule,\n      providers: [\n        ...facadeProviders,\n        UserRegistrationConnector,\n        {\n          provide: HttpErrorHandler,\n          useExisting: OrganizationUserRegistrationConflictHandler,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-registration-core.module';\nexport * from './connectors/index';\nexport * from './http-interceptors/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.UserRegistrationAdapter","i1.UserRegistrationConnector"],"mappings":"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"}