import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { OrderHistoryQueryParams } from '@spartacus/organization/unit-order/core';
import { ICON_TYPE } from '@spartacus/storefront';
import * as i0 from "@angular/core";
export declare class UnitLevelOrderHistoryFilterComponent {
    protected renderer: Renderer2;
    iconTypes: typeof ICON_TYPE;
    encodedFilter: string;
    filterForm: FormGroup;
    filterFormMobile: FormGroup;
    filterByBuyer: string;
    filterByUnit: string;
    filterNav: ElementRef;
    filterNavUnit: ElementRef;
    filterNavBuyer: ElementRef;
    buyerFilterMobileId: ElementRef;
    unitFilterMobileId: ElementRef;
    filterListEvent: EventEmitter<OrderHistoryQueryParams>;
    unitFilterMobileValue: string | null;
    buyerFilterMobileValue: string | null;
    constructor(renderer: Renderer2);
    searchUnitLevelOrders(): void;
    emitFilterEvent(buyer: string, unit: string): void;
    clearAll(): void;
    launchMobileFilters(): void;
    searchUnitLevelOrdersForMobile(): void;
    getFormValuesForMobileAndEmitFilterEvent(): void;
    closeFilterNav(): void;
    backFilterSubNav(): void;
    launchSubNav(option: string): void;
    clearUnit(): void;
    clearBuyer(): void;
    clearUnitMobile(): void;
    clearBuyerMobile(): void;
    searchBuyer(inputElement: HTMLInputElement): void;
    searchUnit(inputElement: HTMLInputElement): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UnitLevelOrderHistoryFilterComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UnitLevelOrderHistoryFilterComponent, "cx-unit-level-order-history-filter", never, {}, { "filterListEvent": "filterListEvent"; }, never, never, false, never>;
}
