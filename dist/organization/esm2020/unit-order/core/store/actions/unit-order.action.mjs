/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { StateUtils } from '@spartacus/core';
import { UNIT_ORDERS, UNIT_ORDER_DETAILS } from '../unit-order-state';
export const LOAD_UNIT_ORDERS = '[Unit Order] Load Unit Orders';
export const LOAD_UNIT_ORDERS_FAIL = '[Unit Order] Load Unit Orders Fail';
export const LOAD_UNIT_ORDERS_SUCCESS = '[Unit Order] Load Unit Orders Success';
export const CLEAR_UNIT_ORDERS = '[Unit Order] Clear Unit Orders';
export const LOAD_ORDER_DETAILS = '[Unit Order] Load Unit Order Details';
export const LOAD_ORDER_DETAILS_FAIL = '[Unit Order] Load Unit Order Details Fail';
export const LOAD_ORDER_DETAILS_SUCCESS = '[Unit Order] Load Unit Order Details Success';
export const CLEAR_ORDER_DETAILS = '[Unit Order] Clear Unit Order Details';
export class LoadUnitOrders extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(UNIT_ORDERS);
        this.payload = payload;
        this.type = LOAD_UNIT_ORDERS;
    }
}
export class LoadUnitOrdersFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(UNIT_ORDERS, payload);
        this.payload = payload;
        this.type = LOAD_UNIT_ORDERS_FAIL;
    }
}
export class LoadUnitOrdersSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(UNIT_ORDERS);
        this.payload = payload;
        this.type = LOAD_UNIT_ORDERS_SUCCESS;
    }
}
export class ClearUnitOrders extends StateUtils.LoaderResetAction {
    constructor() {
        super(UNIT_ORDERS);
        this.type = CLEAR_UNIT_ORDERS;
    }
}
export class LoadOrderDetails extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(UNIT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_ORDER_DETAILS;
    }
}
export class LoadOrderDetailsFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(UNIT_ORDER_DETAILS, payload);
        this.payload = payload;
        this.type = LOAD_ORDER_DETAILS_FAIL;
    }
}
export class LoadOrderDetailsSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(UNIT_ORDER_DETAILS);
        this.payload = payload;
        this.type = LOAD_ORDER_DETAILS_SUCCESS;
    }
}
export class ClearOrderDetails extends StateUtils.LoaderResetAction {
    constructor() {
        super(UNIT_ORDER_DETAILS);
        this.type = CLEAR_ORDER_DETAILS;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1vcmRlci5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL3VuaXQtb3JkZXIvY29yZS9zdG9yZS9hY3Rpb25zL3VuaXQtb3JkZXIuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFN0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLCtCQUErQixDQUFDO0FBQ2hFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLG9DQUFvQyxDQUFDO0FBQzFFLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLHVDQUF1QyxDQUFDO0FBQ2hGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLGdDQUFnQyxDQUFDO0FBRWxFLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLHNDQUFzQyxDQUFDO0FBQ3pFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUNsQywyQ0FBMkMsQ0FBQztBQUM5QyxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FDckMsOENBQThDLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsdUNBQXVDLENBQUM7QUFFM0UsTUFBTSxPQUFPLGNBQWUsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRTdELFlBQ1MsT0FNTjtRQUVELEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQVJaLFlBQU8sR0FBUCxPQUFPLENBTWI7UUFSTSxTQUFJLEdBQUcsZ0JBQWdCLENBQUM7SUFXakMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGtCQUFtQixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFakUsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRFgsWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUR0QixTQUFJLEdBQUcscUJBQXFCLENBQUM7SUFHdEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHFCQUFzQixTQUFRLFVBQVUsQ0FBQyxtQkFBbUI7SUFFdkUsWUFBbUIsT0FBMEI7UUFDM0MsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBREYsWUFBTyxHQUFQLE9BQU8sQ0FBbUI7UUFEcEMsU0FBSSxHQUFHLHdCQUF3QixDQUFDO0lBR3pDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxlQUFnQixTQUFRLFVBQVUsQ0FBQyxpQkFBaUI7SUFFL0Q7UUFDRSxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7UUFGWixTQUFJLEdBQUcsaUJBQWlCLENBQUM7SUFHbEMsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGdCQUFpQixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFL0QsWUFDUyxPQUdOO1FBRUQsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFMbkIsWUFBTyxHQUFQLE9BQU8sQ0FHYjtRQUxNLFNBQUksR0FBRyxrQkFBa0IsQ0FBQztJQVFuQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUVuRSxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxrQkFBa0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQURsQixZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyx1QkFBdUIsQ0FBQztJQUd4QyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUV6RSxZQUFtQixPQUFjO1FBQy9CLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBRFQsWUFBTyxHQUFQLE9BQU8sQ0FBTztRQUR4QixTQUFJLEdBQUcsMEJBQTBCLENBQUM7SUFHM0MsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGlCQUFrQixTQUFRLFVBQVUsQ0FBQyxpQkFBaUI7SUFFakU7UUFDRSxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUZuQixTQUFJLEdBQUcsbUJBQW1CLENBQUM7SUFHcEMsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBPcmRlciwgT3JkZXJIaXN0b3J5TGlzdCB9IGZyb20gJ0BzcGFydGFjdXMvb3JkZXIvcm9vdCc7XG5pbXBvcnQgeyBVTklUX09SREVSUywgVU5JVF9PUkRFUl9ERVRBSUxTIH0gZnJvbSAnLi4vdW5pdC1vcmRlci1zdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBMT0FEX1VOSVRfT1JERVJTID0gJ1tVbml0IE9yZGVyXSBMb2FkIFVuaXQgT3JkZXJzJztcbmV4cG9ydCBjb25zdCBMT0FEX1VOSVRfT1JERVJTX0ZBSUwgPSAnW1VuaXQgT3JkZXJdIExvYWQgVW5pdCBPcmRlcnMgRmFpbCc7XG5leHBvcnQgY29uc3QgTE9BRF9VTklUX09SREVSU19TVUNDRVNTID0gJ1tVbml0IE9yZGVyXSBMb2FkIFVuaXQgT3JkZXJzIFN1Y2Nlc3MnO1xuZXhwb3J0IGNvbnN0IENMRUFSX1VOSVRfT1JERVJTID0gJ1tVbml0IE9yZGVyXSBDbGVhciBVbml0IE9yZGVycyc7XG5cbmV4cG9ydCBjb25zdCBMT0FEX09SREVSX0RFVEFJTFMgPSAnW1VuaXQgT3JkZXJdIExvYWQgVW5pdCBPcmRlciBEZXRhaWxzJztcbmV4cG9ydCBjb25zdCBMT0FEX09SREVSX0RFVEFJTFNfRkFJTCA9XG4gICdbVW5pdCBPcmRlcl0gTG9hZCBVbml0IE9yZGVyIERldGFpbHMgRmFpbCc7XG5leHBvcnQgY29uc3QgTE9BRF9PUkRFUl9ERVRBSUxTX1NVQ0NFU1MgPVxuICAnW1VuaXQgT3JkZXJdIExvYWQgVW5pdCBPcmRlciBEZXRhaWxzIFN1Y2Nlc3MnO1xuZXhwb3J0IGNvbnN0IENMRUFSX09SREVSX0RFVEFJTFMgPSAnW1VuaXQgT3JkZXJdIENsZWFyIFVuaXQgT3JkZXIgRGV0YWlscyc7XG5cbmV4cG9ydCBjbGFzcyBMb2FkVW5pdE9yZGVycyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyTG9hZEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VOSVRfT1JERVJTO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcGF5bG9hZDoge1xuICAgICAgdXNlcklkOiBzdHJpbmc7XG4gICAgICBwYWdlU2l6ZT86IG51bWJlcjtcbiAgICAgIGN1cnJlbnRQYWdlPzogbnVtYmVyO1xuICAgICAgZmlsdGVycz86IHN0cmluZztcbiAgICAgIHNvcnQ/OiBzdHJpbmc7XG4gICAgfVxuICApIHtcbiAgICBzdXBlcihVTklUX09SREVSUyk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRVbml0T3JkZXJzRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VOSVRfT1JERVJTX0ZBSUw7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBhbnkpIHtcbiAgICBzdXBlcihVTklUX09SREVSUywgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRVbml0T3JkZXJzU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyU3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VOSVRfT1JERVJTX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkPzogT3JkZXJIaXN0b3J5TGlzdCkge1xuICAgIHN1cGVyKFVOSVRfT1JERVJTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2xlYXJVbml0T3JkZXJzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDTEVBUl9VTklUX09SREVSUztcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoVU5JVF9PUkRFUlMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkT3JkZXJEZXRhaWxzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJMb2FkQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfT1JERVJfREVUQUlMUztcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBheWxvYWQ6IHtcbiAgICAgIHVzZXJJZDogc3RyaW5nO1xuICAgICAgb3JkZXJDb2RlOiBzdHJpbmc7XG4gICAgfVxuICApIHtcbiAgICBzdXBlcihVTklUX09SREVSX0RFVEFJTFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBMb2FkT3JkZXJEZXRhaWxzRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX09SREVSX0RFVEFJTFNfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFVOSVRfT1JERVJfREVUQUlMUywgcGF5bG9hZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIExvYWRPcmRlckRldGFpbHNTdWNjZXNzIGV4dGVuZHMgU3RhdGVVdGlscy5Mb2FkZXJTdWNjZXNzQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IExPQURfT1JERVJfREVUQUlMU19TVUNDRVNTO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgcGF5bG9hZDogT3JkZXIpIHtcbiAgICBzdXBlcihVTklUX09SREVSX0RFVEFJTFMpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDbGVhck9yZGVyRGV0YWlscyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyUmVzZXRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gQ0xFQVJfT1JERVJfREVUQUlMUztcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoVU5JVF9PUkRFUl9ERVRBSUxTKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBVbml0T3JkZXJzQWN0aW9uID1cbiAgfCBMb2FkVW5pdE9yZGVyc1xuICB8IExvYWRVbml0T3JkZXJzRmFpbFxuICB8IExvYWRVbml0T3JkZXJzU3VjY2Vzc1xuICB8IENsZWFyVW5pdE9yZGVyc1xuICB8IExvYWRPcmRlckRldGFpbHNcbiAgfCBMb2FkT3JkZXJEZXRhaWxzRmFpbFxuICB8IExvYWRPcmRlckRldGFpbHNTdWNjZXNzXG4gIHwgQ2xlYXJPcmRlckRldGFpbHM7XG4iXX0=