/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, ChangeDetectionStrategy } from '@angular/core';
import { CellComponent } from '../../shared';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/organization/administration/core";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/common";
import * as i4 from "@angular/router";
import * as i5 from "@spartacus/core";
export class UserDetailsCellComponent extends CellComponent {
    constructor(b2bUserService, outlet) {
        super(outlet);
        this.b2bUserService = b2bUserService;
        this.outlet = outlet;
        this.availableRoles = this.b2bUserService
            .getAllRoles()
            .map((role) => role.toString());
        this.availableRights = this.b2bUserService
            .getAllRights()
            .map((right) => right.toString());
        this.b2bUserModel = super.model;
    }
    hasRight(model) {
        return (model.roles ?? []).some((role) => this.availableRights.includes(role));
    }
}
UserDetailsCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: UserDetailsCellComponent, deps: [{ token: i1.B2BUserService }, { token: i2.OutletContextData }], target: i0.ɵɵFactoryTarget.Component });
UserDetailsCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: UserDetailsCellComponent, selector: "cx-org-user-details-cell", usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"b2bUserModel as model\">\n  <ng-template #details>\n    <div class=\"popover-details\">\n      <div class=\"property\">\n        <label>{{ 'orgUser.name' | cxTranslate }}</label>\n        <a\n          class=\"value\"\n          [routerLink]=\"\n            {\n              cxRoute: 'orgUserDetails',\n              params: model\n            } | cxUrl\n          \"\n          >{{ model.name }}</a\n        >\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.uid }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let role of model.roles\">\n            <li\n              *ngIf=\"availableRoles.includes(role)\"\n              [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n\n      <div class=\"property\" *ngIf=\"hasRight(model)\">\n        <label>{{ 'orgUser.rights' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let right of model.roles\">\n            <li\n              *ngIf=\"availableRights.includes(right)\"\n              [innerText]=\"'organization.userRights.' + right | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n        <a\n          class=\"value\"\n          [routerLink]=\"\n            {\n              cxRoute: 'orgUnitDetails',\n              params: model.orgUnit\n            } | cxUrl\n          \"\n        >\n          {{ model.orgUnit?.name }}\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <button\n    class=\"button text\"\n    [cxPopover]=\"details\"\n    [cxPopoverOptions]=\"{\n      placement: 'auto',\n      class: 'my-company-popover',\n      appendToBody: true,\n      displayCloseButton: true\n    }\"\n  >\n    {{ model?.name }}\n  </button>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.PopoverDirective, selector: "[cxPopover]", inputs: ["cxPopover", "cxPopoverOptions"], outputs: ["openPopover", "closePopover"] }, { kind: "directive", type: i4.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i5.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: UserDetailsCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-org-user-details-cell', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"b2bUserModel as model\">\n  <ng-template #details>\n    <div class=\"popover-details\">\n      <div class=\"property\">\n        <label>{{ 'orgUser.name' | cxTranslate }}</label>\n        <a\n          class=\"value\"\n          [routerLink]=\"\n            {\n              cxRoute: 'orgUserDetails',\n              params: model\n            } | cxUrl\n          \"\n          >{{ model.name }}</a\n        >\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.uid }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let role of model.roles\">\n            <li\n              *ngIf=\"availableRoles.includes(role)\"\n              [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n\n      <div class=\"property\" *ngIf=\"hasRight(model)\">\n        <label>{{ 'orgUser.rights' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let right of model.roles\">\n            <li\n              *ngIf=\"availableRights.includes(right)\"\n              [innerText]=\"'organization.userRights.' + right | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n        <a\n          class=\"value\"\n          [routerLink]=\"\n            {\n              cxRoute: 'orgUnitDetails',\n              params: model.orgUnit\n            } | cxUrl\n          \"\n        >\n          {{ model.orgUnit?.name }}\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <button\n    class=\"button text\"\n    [cxPopover]=\"details\"\n    [cxPopoverOptions]=\"{\n      placement: 'auto',\n      class: 'my-company-popover',\n      appendToBody: true,\n      displayCloseButton: true\n    }\"\n  >\n    {{ model?.name }}\n  </button>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.B2BUserService }, { type: i2.OutletContextData }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1kZXRhaWxzLWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3VzZXIvZGV0YWlscy1jZWxsL3VzZXItZGV0YWlscy1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91c2VyL2RldGFpbHMtY2VsbC91c2VyLWRldGFpbHMtY2VsbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sY0FBYyxDQUFDOzs7Ozs7O0FBYTdDLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxhQUFhO0lBVXpELFlBQ1ksY0FBOEIsRUFDOUIsTUFBaUQ7UUFFM0QsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBSEosbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLFdBQU0sR0FBTixNQUFNLENBQTJDO1FBVDdELG1CQUFjLEdBQWEsSUFBSSxDQUFDLGNBQWM7YUFDM0MsV0FBVyxFQUFFO2FBQ2IsR0FBRyxDQUFDLENBQUMsSUFBaUIsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDL0Msb0JBQWUsR0FBYSxJQUFJLENBQUMsY0FBYzthQUM1QyxZQUFZLEVBQUU7YUFDZCxHQUFHLENBQUMsQ0FBQyxLQUFtQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQU9oRCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxLQUFnQixDQUFDO0lBQzdDLENBQUM7SUFFRCxRQUFRLENBQUMsS0FBYztRQUNyQixPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFZLEVBQUUsRUFBRSxDQUMvQyxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FDcEMsQ0FBQztJQUNKLENBQUM7O3FIQXRCVSx3QkFBd0I7eUdBQXhCLHdCQUF3Qix1RkNwQnJDLHl2RUFnRkE7MkZENURhLHdCQUF3QjtrQkFMcEMsU0FBUzsrQkFDRSwwQkFBMEIsbUJBRW5CLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vc2hhcmVkJztcbmltcG9ydCB7IEIyQlVzZXJTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBCMkJVc2VyLCBCMkJVc2VyUm9sZSwgQjJCVXNlclJpZ2h0IH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIE91dGxldENvbnRleHREYXRhLFxuICBUYWJsZURhdGFPdXRsZXRDb250ZXh0LFxufSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1vcmctdXNlci1kZXRhaWxzLWNlbGwnLFxuICB0ZW1wbGF0ZVVybDogJy4vdXNlci1kZXRhaWxzLWNlbGwuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgVXNlckRldGFpbHNDZWxsQ29tcG9uZW50IGV4dGVuZHMgQ2VsbENvbXBvbmVudCB7XG4gIGIyYlVzZXJNb2RlbDogQjJCVXNlcjtcblxuICBhdmFpbGFibGVSb2xlczogc3RyaW5nW10gPSB0aGlzLmIyYlVzZXJTZXJ2aWNlXG4gICAgLmdldEFsbFJvbGVzKClcbiAgICAubWFwKChyb2xlOiBCMkJVc2VyUm9sZSkgPT4gcm9sZS50b1N0cmluZygpKTtcbiAgYXZhaWxhYmxlUmlnaHRzOiBzdHJpbmdbXSA9IHRoaXMuYjJiVXNlclNlcnZpY2VcbiAgICAuZ2V0QWxsUmlnaHRzKClcbiAgICAubWFwKChyaWdodDogQjJCVXNlclJpZ2h0KSA9PiByaWdodC50b1N0cmluZygpKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgYjJiVXNlclNlcnZpY2U6IEIyQlVzZXJTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBvdXRsZXQ6IE91dGxldENvbnRleHREYXRhPFRhYmxlRGF0YU91dGxldENvbnRleHQ+XG4gICkge1xuICAgIHN1cGVyKG91dGxldCk7XG4gICAgdGhpcy5iMmJVc2VyTW9kZWwgPSBzdXBlci5tb2RlbCBhcyBCMkJVc2VyO1xuICB9XG5cbiAgaGFzUmlnaHQobW9kZWw6IEIyQlVzZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKG1vZGVsLnJvbGVzID8/IFtdKS5zb21lKChyb2xlOiBzdHJpbmcpID0+XG4gICAgICB0aGlzLmF2YWlsYWJsZVJpZ2h0cy5pbmNsdWRlcyhyb2xlKVxuICAgICk7XG4gIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJiMmJVc2VyTW9kZWwgYXMgbW9kZWxcIj5cbiAgPG5nLXRlbXBsYXRlICNkZXRhaWxzPlxuICAgIDxkaXYgY2xhc3M9XCJwb3BvdmVyLWRldGFpbHNcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgICA8bGFiZWw+e3sgJ29yZ1VzZXIubmFtZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICAgIDxhXG4gICAgICAgICAgY2xhc3M9XCJ2YWx1ZVwiXG4gICAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGN4Um91dGU6ICdvcmdVc2VyRGV0YWlscycsXG4gICAgICAgICAgICAgIHBhcmFtczogbW9kZWxcbiAgICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICAgIFwiXG4gICAgICAgICAgPnt7IG1vZGVsLm5hbWUgfX08L2FcbiAgICAgICAgPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eSBmdWxsLXdpZHRoXCI+XG4gICAgICAgIDxsYWJlbD57eyAnb3JnVXNlci51aWQnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgICAge3sgbW9kZWwudWlkIH19XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgICAgPGxhYmVsPnt7ICdvcmdVc2VyLnJvbGVzJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgICAgPHVsIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCByb2xlIG9mIG1vZGVsLnJvbGVzXCI+XG4gICAgICAgICAgICA8bGlcbiAgICAgICAgICAgICAgKm5nSWY9XCJhdmFpbGFibGVSb2xlcy5pbmNsdWRlcyhyb2xlKVwiXG4gICAgICAgICAgICAgIFtpbm5lclRleHRdPVwiJ29yZ2FuaXphdGlvbi51c2VyUm9sZXMuJyArIHJvbGUgfCBjeFRyYW5zbGF0ZVwiXG4gICAgICAgICAgICA+PC9saT5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8bGkgKm5nSWY9XCJtb2RlbC5yb2xlcz8ubGVuZ3RoID09PSAwXCI+LTwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCIgKm5nSWY9XCJoYXNSaWdodChtb2RlbClcIj5cbiAgICAgICAgPGxhYmVsPnt7ICdvcmdVc2VyLnJpZ2h0cycgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICAgIDx1bCBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgcmlnaHQgb2YgbW9kZWwucm9sZXNcIj5cbiAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICAqbmdJZj1cImF2YWlsYWJsZVJpZ2h0cy5pbmNsdWRlcyhyaWdodClcIlxuICAgICAgICAgICAgICBbaW5uZXJUZXh0XT1cIidvcmdhbml6YXRpb24udXNlclJpZ2h0cy4nICsgcmlnaHQgfCBjeFRyYW5zbGF0ZVwiXG4gICAgICAgICAgICA+PC9saT5cbiAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8bGkgKm5nSWY9XCJtb2RlbC5yb2xlcz8ubGVuZ3RoID09PSAwXCI+LTwvbGk+XG4gICAgICAgIDwvdWw+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICAgIDxsYWJlbD57eyAnb3JnVXNlci5vcmdVbml0JyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgICAgPGFcbiAgICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgICBbcm91dGVyTGlua109XCJcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY3hSb3V0ZTogJ29yZ1VuaXREZXRhaWxzJyxcbiAgICAgICAgICAgICAgcGFyYW1zOiBtb2RlbC5vcmdVbml0XG4gICAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgICBcIlxuICAgICAgICA+XG4gICAgICAgICAge3sgbW9kZWwub3JnVW5pdD8ubmFtZSB9fVxuICAgICAgICA8L2E+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9uZy10ZW1wbGF0ZT5cblxuICA8YnV0dG9uXG4gICAgY2xhc3M9XCJidXR0b24gdGV4dFwiXG4gICAgW2N4UG9wb3Zlcl09XCJkZXRhaWxzXCJcbiAgICBbY3hQb3BvdmVyT3B0aW9uc109XCJ7XG4gICAgICBwbGFjZW1lbnQ6ICdhdXRvJyxcbiAgICAgIGNsYXNzOiAnbXktY29tcGFueS1wb3BvdmVyJyxcbiAgICAgIGFwcGVuZFRvQm9keTogdHJ1ZSxcbiAgICAgIGRpc3BsYXlDbG9zZUJ1dHRvbjogdHJ1ZVxuICAgIH1cIlxuICA+XG4gICAge3sgbW9kZWw/Lm5hbWUgfX1cbiAgPC9idXR0b24+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==