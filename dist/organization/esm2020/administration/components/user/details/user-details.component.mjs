/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { startWith, switchMap } from 'rxjs/operators';
import { ItemService } from '../../shared/item.service';
import { UserItemService } from '../services/user-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../shared/item.service";
import * as i2 from "@spartacus/organization/administration/core";
import * as i3 from "@angular/common";
import * as i4 from "../../shared/card/card.component";
import * as i5 from "@angular/router";
import * as i6 from "../../shared/detail/toggle-status-action/toggle-status.component";
import * as i7 from "../../shared/item-exists.directive";
import * as i8 from "../../shared/detail/disable-info/disable-info.component";
import * as i9 from "@spartacus/storefront";
import * as i10 from "@spartacus/core";
export class UserDetailsComponent {
    constructor(itemService, b2bUserService) {
        this.itemService = itemService;
        this.b2bUserService = b2bUserService;
        this.model$ = this.itemService.key$.pipe(switchMap((code) => this.itemService.load(code)), startWith({}));
        this.isInEditMode$ = this.itemService.isInEditMode$;
        this.isUpdatingUserAllowed = this.b2bUserService.isUpdatingUserAllowed();
        this.availableRoles = this.b2bUserService
            .getAllRoles()
            .map((role) => role.toString());
        this.availableRights = this.b2bUserService
            .getAllRights()
            .map((right) => right.toString());
    }
    hasRight(model) {
        return (model.roles ?? []).some((role) => this.availableRights.includes(role));
    }
}
UserDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: UserDetailsComponent, deps: [{ token: i1.ItemService }, { token: i2.B2BUserService }], target: i0.ɵɵFactoryTarget.Component });
UserDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: UserDetailsComponent, selector: "cx-org-user-details", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UserItemService,
        },
    ], ngImport: i0, template: "<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUser.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    *ngIf=\"isUpdatingUserAllowed\"\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUserEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    *ngIf=\"isUpdatingUserAllowed\"\n    key=\"customerId\"\n    i18nRoot=\"orgUser\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgUser\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        <ng-container *cxFeatureLevel=\"'6.7'\">\n          {{ model.displayUid }}\n        </ng-container>\n        <ng-container *cxFeatureLevel=\"'!6.7'\">\n          {{ model.uid }}\n        </ng-container>\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <ng-container *ngFor=\"let role of model.roles\">\n          <li\n            *ngIf=\"availableRoles.includes(role)\"\n            [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n          ></li>\n        </ng-container>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <ng-container *ngIf=\"hasRight(model)\">\n      <div class=\"property\">\n        <label>{{ 'orgUser.rights' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let role of model.roles\">\n            <li\n              *ngIf=\"availableRights.includes(role)\"\n              [innerText]=\"'organization.userRights.' + role | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n    </ng-container>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"isUpdatingUserAllowed; else showOrgUnitValueWithoutNavigation\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n      <ng-template #showOrgUnitValueWithoutNavigation>\n        <div class=\"orgUnit\">{{ model.orgUnit?.name }}</div>\n      </ng-template>\n    </div>\n    <div class=\"property full-width\">\n      <a\n        *ngIf=\"model.customerId && isUpdatingUserAllowed\"\n        class=\"link\"\n        [class.disabled]=\"!model.active\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserChangePassword', params: model } | cxUrl\n        \"\n      >\n        {{ 'orgUser.links.password' | cxTranslate }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.customerId\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserUserGroups', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.userGroup' | cxTranslate }}\n      </a>\n\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserPermissions', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.CardComponent, selector: "cx-org-card", inputs: ["i18nRoot", "previous", "subtitle", "showHint"] }, { kind: "directive", type: i5.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i5.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }, { kind: "component", type: i6.ToggleStatusComponent, selector: "cx-org-toggle-status", inputs: ["i18nRoot", "key", "disabled"] }, { kind: "directive", type: i7.ItemExistsDirective, selector: "[cxOrgItemExists]" }, { kind: "component", type: i8.DisableInfoComponent, selector: "cx-org-disable-info", inputs: ["i18nRoot", "displayInfoConfig", "displayCustomInfo"] }, { kind: "directive", type: i9.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i10.FeatureLevelDirective, selector: "[cxFeatureLevel]", inputs: ["cxFeatureLevel"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i10.UrlPipe, name: "cxUrl" }, { kind: "pipe", type: i10.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: UserDetailsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-org-user-details', changeDetection: ChangeDetectionStrategy.OnPush, providers: [
                        {
                            provide: ItemService,
                            useExisting: UserItemService,
                        },
                    ], host: { class: 'content-wrapper' }, template: "<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUser.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    *ngIf=\"isUpdatingUserAllowed\"\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUserEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    *ngIf=\"isUpdatingUserAllowed\"\n    key=\"customerId\"\n    i18nRoot=\"orgUser\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgUser\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        <ng-container *cxFeatureLevel=\"'6.7'\">\n          {{ model.displayUid }}\n        </ng-container>\n        <ng-container *cxFeatureLevel=\"'!6.7'\">\n          {{ model.uid }}\n        </ng-container>\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <ng-container *ngFor=\"let role of model.roles\">\n          <li\n            *ngIf=\"availableRoles.includes(role)\"\n            [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n          ></li>\n        </ng-container>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <ng-container *ngIf=\"hasRight(model)\">\n      <div class=\"property\">\n        <label>{{ 'orgUser.rights' | cxTranslate }}</label>\n        <ul class=\"value\">\n          <ng-container *ngFor=\"let role of model.roles\">\n            <li\n              *ngIf=\"availableRights.includes(role)\"\n              [innerText]=\"'organization.userRights.' + role | cxTranslate\"\n            ></li>\n          </ng-container>\n          <li *ngIf=\"model.roles?.length === 0\">-</li>\n        </ul>\n      </div>\n    </ng-container>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"isUpdatingUserAllowed; else showOrgUnitValueWithoutNavigation\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n      <ng-template #showOrgUnitValueWithoutNavigation>\n        <div class=\"orgUnit\">{{ model.orgUnit?.name }}</div>\n      </ng-template>\n    </div>\n    <div class=\"property full-width\">\n      <a\n        *ngIf=\"model.customerId && isUpdatingUserAllowed\"\n        class=\"link\"\n        [class.disabled]=\"!model.active\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserChangePassword', params: model } | cxUrl\n        \"\n      >\n        {{ 'orgUser.links.password' | cxTranslate }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.customerId\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserUserGroups', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.userGroup' | cxTranslate }}\n      </a>\n\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserPermissions', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }, { type: i2.B2BUserService }]; } });
//# sourceMappingURL=data:application/json;base64,