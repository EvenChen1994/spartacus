/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { DocumentFields, DocumentStatus, FilterByOptions, } from '@spartacus/organization/account-summary/root';
import { ICON_TYPE } from '@spartacus/storefront';
import { BehaviorSubject, combineLatest, Subscription } from 'rxjs';
import { skip, switchMap, take, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/organization/account-summary/root";
import * as i2 from "@spartacus/core";
import * as i3 from "@spartacus/storefront";
import * as i4 from "./filter/account-summary-document-filter.component";
import * as i5 from "@angular/common";
export class AccountSummaryDocumentComponent {
    constructor(accountSummaryFacade, translation, downloadService, languageService) {
        this.accountSummaryFacade = accountSummaryFacade;
        this.translation = translation;
        this.downloadService = downloadService;
        this.languageService = languageService;
        /* For Enum use in HTML */
        this.ICON_TYPE = ICON_TYPE;
        // Contains the initial query parameters and will be updated with current state of filters
        this._queryParams = {
            status: DocumentStatus.OPEN,
            filterByKey: FilterByOptions.DOCUMENT_NUMBER,
            page: 0,
            pageSize: 10,
            fields: DocumentFields.FULL,
        };
        // Used to fire event every time query params are changed
        this.queryParams$ = new BehaviorSubject(this._queryParams);
        // Used by template to subscribe to data from documents api
        this.accountSummary$ = this.queryParams$.pipe(switchMap((param) => this.accountSummaryFacade.getDocumentList(param)), tap((accountSummaryList) => {
            if (accountSummaryList.orgDocumentTypes) {
                this.documentTypeOptions = accountSummaryList.orgDocumentTypes;
            }
            if (accountSummaryList.sorts) {
                this.addNamesToSortModel(accountSummaryList.sorts);
            }
        }));
        this.subscription = new Subscription();
    }
    ngOnInit() {
        this.subscription.add(this.languageService
            .getActive()
            .pipe(skip(1))
            .subscribe(() => this.updateQueryParams({ fields: DocumentFields.FULL })));
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    pageChange(page) {
        this.updateQueryParams({
            page: page,
        });
    }
    changeSortCode(sortCode) {
        this.updateQueryParams({
            sort: sortCode,
            page: 0,
        });
    }
    filterChange(newFilters) {
        this.updateQueryParams({
            ...newFilters,
            page: 0,
        });
    }
    downloadAttachment(documentId, attachmentId) {
        this.accountSummaryFacade
            .getDocumentAttachment(documentId, attachmentId)
            .pipe(take(1))
            .subscribe((data) => {
            const file = new Blob([data], { type: data.type });
            const url = URL.createObjectURL(file);
            this.downloadService.download(url, attachmentId);
        });
    }
    updateQueryParams(partialParams) {
        // Overwrite each value present in partialParams to _queryParams
        Object.entries(partialParams).forEach((param) => (this._queryParams[param[0]] = param[1]));
        // Every request that doesn't specify fields should be set to DEFAULT
        if (!partialParams.fields) {
            this._queryParams.fields = DocumentFields.DEFAULT;
        }
        this.queryParams$.next(this._queryParams);
    }
    addNamesToSortModel(sorts) {
        this.sortOptions = sorts;
        const translations = sorts.map((sort) => this.translation.translate(`orgAccountSummary.sorts.${sort.code}`));
        combineLatest(translations)
            .pipe(take(1))
            .subscribe((translated) => this.sortOptions.forEach((sort, index) => (sort.name = translated[index])));
    }
}
AccountSummaryDocumentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AccountSummaryDocumentComponent, deps: [{ token: i1.AccountSummaryFacade }, { token: i2.TranslationService }, { token: i3.FileDownloadService }, { token: i2.LanguageService }], target: i0.ɵɵFactoryTarget.Component });
AccountSummaryDocumentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AccountSummaryDocumentComponent, selector: "cx-account-summary-document", ngImport: i0, template: "<ng-container *ngIf=\"accountSummary$ | async as accountSummary\">\n  <div>\n    <!-- HEADER -->\n    <div class=\"cx-account-summary-document-header\">\n      <h2>\n        {{ 'orgAccountSummary.document.header' | cxTranslate }}\n      </h2>\n    </div>\n\n    <!-- BODY -->\n    <div class=\"cx-account-summary-document-body\">\n      <cx-account-summary-document-filter\n        [documentTypeOptions]=\"documentTypeOptions\"\n        [initialFilters]=\"_queryParams\"\n        (filterListEvent)=\"filterChange($event)\"\n      >\n      </cx-account-summary-document-filter>\n\n      <ng-container\n        *ngIf=\"\n          accountSummary.pagination && accountSummary.pagination.totalResults;\n          else noDocument\n        \"\n      >\n        <div class=\"cx-account-summary-document-sort top\">\n          <label class=\"cx-account-summary-document-form-group form-group\">\n            <span>\n              {{ 'orgAccountSummary.sortBy' | cxTranslate }}\n            </span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"accountSummary.pagination.sort\"\n              placeholder=\"{{ 'orgAccountSummary.sortBy' | cxTranslate }}\"\n              [ariaLabel]=\"'orgAccountSummary.sortDocuments' | cxTranslate\"\n              ariaControls=\"cx-account-summary-document-table\"\n            ></cx-sorting>\n          </label>\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <!-- TABLE -->\n        <table\n          id=\"cx-account-summary-document-table\"\n          class=\"table cx-account-summary-document-table\"\n        >\n          <thead class=\"cx-account-summary-document-thead-mobile\">\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.id' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.type' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.date' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.originalAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.status' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              <cx-icon\n                [type]=\"ICON_TYPE.DOWNLOAD\"\n                class=\"cx-account-summary-document-attachment-icon\"\n                title=\"{{\n                  'orgAccountSummary.document.attachment' | cxTranslate\n                }}\"\n              ></cx-icon>\n            </th>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let document of accountSummary.orgDocuments\"\n              class=\"cx-account-summary-document-row\"\n            >\n              <td class=\"cx-account-summary-document-code\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.id' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.id }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-type\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.type' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.orgDocumentType?.name }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.date' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.createdAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.dueAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{\n                    'orgAccountSummary.document.originalAmount' | cxTranslate\n                  }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedOpenAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-status\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.status' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <span\n                    [ngClass]=\"{\n                      'status-open': document.status === 'open',\n                      'status-closed': document.status === 'closed'\n                    }\"\n                  >\n                    {{\n                      'orgAccountSummary.statuses.' + document?.status\n                        | cxTranslate\n                    }}\n                  </span>\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-attachment\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.attachment' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <button\n                    *ngIf=\"document.attachments?.[0]?.id as attachmentId\"\n                    class=\"cx-account-summary-document-attachment-btn\"\n                    (click)=\"downloadAttachment(document.id, attachmentId)\"\n                    attr.aria-label=\"{{\n                      'orgAccountSummary.document.attachmentDescription'\n                        | cxTranslate\n                          : {\n                              id: document.id,\n                              type: document.orgDocumentType?.name\n                            }\n                    }}\"\n                  >\n                    <cx-icon\n                      [type]=\"ICON_TYPE.FILE\"\n                      class=\"cx-account-summary-document-attachment-icon\"\n                      title=\"{{\n                        'orgAccountSummary.document.download' | cxTranslate\n                      }}\"\n                    >\n                    </cx-icon>\n                    <span\n                      class=\"cx-account-summary-document-attachment-text\"\n                      [innerText]=\"\n                        'orgAccountSummary.document.download' | cxTranslate\n                      \"\n                    >\n                    </span>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-account-summary-document-sort bottom\">\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </ng-container>\n\n      <!-- NO DOCUMENT CONTAINER -->\n      <ng-template #noDocument>\n        <div class=\"cx-account-summary-document-no-document\">\n          {{ 'orgAccountSummary.document.noneFound' | cxTranslate }}\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "component", type: i4.AccountSummaryDocumentFilterComponent, selector: "cx-account-summary-document-filter", inputs: ["documentTypeOptions", "initialFilters"], outputs: ["filterListEvent"] }, { kind: "directive", type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.SortingComponent, selector: "cx-sorting", inputs: ["sortOptions", "ariaControls", "ariaLabel", "selectedOption", "placeholder", "sortLabels"], outputs: ["sortListEvent"] }, { kind: "component", type: i3.PaginationComponent, selector: "cx-pagination", inputs: ["pageRoute", "queryParam", "defaultPage", "pagination"], outputs: ["viewPageEvent"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i2.CxDatePipe, name: "cxDate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AccountSummaryDocumentComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-account-summary-document', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"accountSummary$ | async as accountSummary\">\n  <div>\n    <!-- HEADER -->\n    <div class=\"cx-account-summary-document-header\">\n      <h2>\n        {{ 'orgAccountSummary.document.header' | cxTranslate }}\n      </h2>\n    </div>\n\n    <!-- BODY -->\n    <div class=\"cx-account-summary-document-body\">\n      <cx-account-summary-document-filter\n        [documentTypeOptions]=\"documentTypeOptions\"\n        [initialFilters]=\"_queryParams\"\n        (filterListEvent)=\"filterChange($event)\"\n      >\n      </cx-account-summary-document-filter>\n\n      <ng-container\n        *ngIf=\"\n          accountSummary.pagination && accountSummary.pagination.totalResults;\n          else noDocument\n        \"\n      >\n        <div class=\"cx-account-summary-document-sort top\">\n          <label class=\"cx-account-summary-document-form-group form-group\">\n            <span>\n              {{ 'orgAccountSummary.sortBy' | cxTranslate }}\n            </span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"accountSummary.pagination.sort\"\n              placeholder=\"{{ 'orgAccountSummary.sortBy' | cxTranslate }}\"\n              [ariaLabel]=\"'orgAccountSummary.sortDocuments' | cxTranslate\"\n              ariaControls=\"cx-account-summary-document-table\"\n            ></cx-sorting>\n          </label>\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <!-- TABLE -->\n        <table\n          id=\"cx-account-summary-document-table\"\n          class=\"table cx-account-summary-document-table\"\n        >\n          <thead class=\"cx-account-summary-document-thead-mobile\">\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.id' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.type' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.date' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.originalAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              {{ 'orgAccountSummary.document.status' | cxTranslate }}\n            </th>\n            <th scope=\"col\">\n              <cx-icon\n                [type]=\"ICON_TYPE.DOWNLOAD\"\n                class=\"cx-account-summary-document-attachment-icon\"\n                title=\"{{\n                  'orgAccountSummary.document.attachment' | cxTranslate\n                }}\"\n              ></cx-icon>\n            </th>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let document of accountSummary.orgDocuments\"\n              class=\"cx-account-summary-document-row\"\n            >\n              <td class=\"cx-account-summary-document-code\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.id' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.id }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-type\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.type' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.orgDocumentType?.name }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.date' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.createdAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-date\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.dueDate' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.dueAtDate | cxDate: 'longDate' }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{\n                    'orgAccountSummary.document.originalAmount' | cxTranslate\n                  }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-monetary\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.openAmount' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  {{ document.formattedOpenAmount }}\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-status\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.status' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <span\n                    [ngClass]=\"{\n                      'status-open': document.status === 'open',\n                      'status-closed': document.status === 'closed'\n                    }\"\n                  >\n                    {{\n                      'orgAccountSummary.statuses.' + document?.status\n                        | cxTranslate\n                    }}\n                  </span>\n                </div>\n              </td>\n              <td class=\"cx-account-summary-document-attachment\">\n                <div class=\"cx-account-summary-document-label\">\n                  {{ 'orgAccountSummary.document.attachment' | cxTranslate }}\n                </div>\n                <div class=\"cx-account-summary-document-value\">\n                  <button\n                    *ngIf=\"document.attachments?.[0]?.id as attachmentId\"\n                    class=\"cx-account-summary-document-attachment-btn\"\n                    (click)=\"downloadAttachment(document.id, attachmentId)\"\n                    attr.aria-label=\"{{\n                      'orgAccountSummary.document.attachmentDescription'\n                        | cxTranslate\n                          : {\n                              id: document.id,\n                              type: document.orgDocumentType?.name\n                            }\n                    }}\"\n                  >\n                    <cx-icon\n                      [type]=\"ICON_TYPE.FILE\"\n                      class=\"cx-account-summary-document-attachment-icon\"\n                      title=\"{{\n                        'orgAccountSummary.document.download' | cxTranslate\n                      }}\"\n                    >\n                    </cx-icon>\n                    <span\n                      class=\"cx-account-summary-document-attachment-text\"\n                      [innerText]=\"\n                        'orgAccountSummary.document.download' | cxTranslate\n                      \"\n                    >\n                    </span>\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-account-summary-document-sort bottom\">\n          <div\n            class=\"cx-account-summary-document-pagination\"\n            *ngIf=\"\n              accountSummary.pagination &&\n              accountSummary.pagination.totalPages &&\n              accountSummary.pagination.totalPages > 1\n            \"\n          >\n            <cx-pagination\n              [pagination]=\"accountSummary.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </ng-container>\n\n      <!-- NO DOCUMENT CONTAINER -->\n      <ng-template #noDocument>\n        <div class=\"cx-account-summary-document-no-document\">\n          {{ 'orgAccountSummary.document.noneFound' | cxTranslate }}\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AccountSummaryFacade }, { type: i2.TranslationService }, { type: i3.FileDownloadService }, { type: i2.LanguageService }]; } });
//# sourceMappingURL=data:application/json;base64,