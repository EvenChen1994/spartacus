/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { InjectionToken } from '@angular/core';
import { StateUtils } from '@spartacus/core';
import { CONSIGNMENT_TRACKING_BY_ID_ENTITIES, ORDERS, ORDER_BY_ID_ENTITIES, ORDER_DETAILS, REPLENISHMENT_ORDERS, REPLENISHMENT_ORDER_DETAILS, RETURN_REQUESTS, RETURN_REQUEST_DETAILS, } from '../order-state';
import * as fromConsignmentTrackingByIDReducer from './consignment-tracking-by-id.reducer';
import * as fromOrderByIDReducer from './order-by-id.reducer';
import * as fromConsignmentTrackingReducer from './consignment-tracking.reducer';
import * as fromOrderDetailsReducer from './order-details.reducer';
import * as fromOrderReturnRequestReducer from './order-return-request.reducer';
import * as fromUserOrdersReducer from './orders.reducer';
import * as fromReplenishmentOrderDetailsReducer from './replenishment-order-details.reducer';
import * as fromUserReplenishmentOrdersReducer from './replenishment-orders.reducer';
export function getReducers() {
    return {
        orders: StateUtils.loaderReducer(ORDERS, fromUserOrdersReducer.reducer),
        orderDetail: StateUtils.loaderReducer(ORDER_DETAILS, fromOrderDetailsReducer.reducer),
        replenishmentOrders: StateUtils.loaderReducer(REPLENISHMENT_ORDERS, fromUserReplenishmentOrdersReducer.reducer),
        orderReturn: StateUtils.loaderReducer(RETURN_REQUEST_DETAILS),
        orderReturnList: StateUtils.loaderReducer(RETURN_REQUESTS, fromOrderReturnRequestReducer.reducer),
        consignmentTracking: fromConsignmentTrackingReducer.reducer,
        replenishmentOrder: StateUtils.loaderReducer(REPLENISHMENT_ORDER_DETAILS, fromReplenishmentOrderDetailsReducer.reducer),
        orderById: StateUtils.entityLoaderReducer(ORDER_BY_ID_ENTITIES, fromOrderByIDReducer.reducer),
        consignmentTrackingById: StateUtils.entityLoaderReducer(CONSIGNMENT_TRACKING_BY_ID_ENTITIES, fromConsignmentTrackingByIDReducer.reducer),
    };
}
export const reducerToken = new InjectionToken('OrderReducers');
export const reducerProvider = {
    provide: reducerToken,
    useFactory: getReducers,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JkZXIvY29yZS9zdG9yZS9yZWR1Y2Vycy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLGNBQWMsRUFBWSxNQUFNLGVBQWUsQ0FBQztBQUV6RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFVN0MsT0FBTyxFQUNMLG1DQUFtQyxFQUNuQyxNQUFNLEVBRU4sb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsMkJBQTJCLEVBQzNCLGVBQWUsRUFDZixzQkFBc0IsR0FDdkIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEtBQUssa0NBQWtDLE1BQU0sc0NBQXNDLENBQUM7QUFDM0YsT0FBTyxLQUFLLG9CQUFvQixNQUFNLHVCQUF1QixDQUFDO0FBQzlELE9BQU8sS0FBSyw4QkFBOEIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNqRixPQUFPLEtBQUssdUJBQXVCLE1BQU0seUJBQXlCLENBQUM7QUFDbkUsT0FBTyxLQUFLLDZCQUE2QixNQUFNLGdDQUFnQyxDQUFDO0FBQ2hGLE9BQU8sS0FBSyxxQkFBcUIsTUFBTSxrQkFBa0IsQ0FBQztBQUMxRCxPQUFPLEtBQUssb0NBQW9DLE1BQU0sdUNBQXVDLENBQUM7QUFDOUYsT0FBTyxLQUFLLGtDQUFrQyxNQUFNLGdDQUFnQyxDQUFDO0FBRXJGLE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE9BQU87UUFDTCxNQUFNLEVBQUUsVUFBVSxDQUFDLGFBQWEsQ0FDOUIsTUFBTSxFQUNOLHFCQUFxQixDQUFDLE9BQU8sQ0FDOUI7UUFDRCxXQUFXLEVBQUUsVUFBVSxDQUFDLGFBQWEsQ0FDbkMsYUFBYSxFQUNiLHVCQUF1QixDQUFDLE9BQU8sQ0FDaEM7UUFDRCxtQkFBbUIsRUFBRSxVQUFVLENBQUMsYUFBYSxDQUMzQyxvQkFBb0IsRUFDcEIsa0NBQWtDLENBQUMsT0FBTyxDQUMzQztRQUNELFdBQVcsRUFBRSxVQUFVLENBQUMsYUFBYSxDQUNuQyxzQkFBc0IsQ0FDdkI7UUFDRCxlQUFlLEVBQUUsVUFBVSxDQUFDLGFBQWEsQ0FDdkMsZUFBZSxFQUNmLDZCQUE2QixDQUFDLE9BQU8sQ0FDdEM7UUFDRCxtQkFBbUIsRUFBRSw4QkFBOEIsQ0FBQyxPQUFPO1FBQzNELGtCQUFrQixFQUFFLFVBQVUsQ0FBQyxhQUFhLENBQzFDLDJCQUEyQixFQUMzQixvQ0FBb0MsQ0FBQyxPQUFPLENBQzdDO1FBQ0QsU0FBUyxFQUFFLFVBQVUsQ0FBQyxtQkFBbUIsQ0FDdkMsb0JBQW9CLEVBQ3BCLG9CQUFvQixDQUFDLE9BQU8sQ0FDN0I7UUFDRCx1QkFBdUIsRUFBRSxVQUFVLENBQUMsbUJBQW1CLENBSXJELG1DQUFtQyxFQUNuQyxrQ0FBa0MsQ0FBQyxPQUFPLENBQzNDO0tBQ0YsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQ3ZCLElBQUksY0FBYyxDQUErQixlQUFlLENBQUMsQ0FBQztBQUVwRSxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQWE7SUFDdkMsT0FBTyxFQUFFLFlBQVk7SUFDckIsVUFBVSxFQUFFLFdBQVc7Q0FDeEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IEluamVjdGlvblRva2VuLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9uUmVkdWNlck1hcCB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ29uc2lnbm1lbnRUcmFja2luZyxcbiAgT3JkZXIsXG4gIE9yZGVySGlzdG9yeUxpc3QsXG4gIFJlcGxlbmlzaG1lbnRPcmRlcixcbiAgUmVwbGVuaXNobWVudE9yZGVyTGlzdCxcbiAgUmV0dXJuUmVxdWVzdCxcbiAgUmV0dXJuUmVxdWVzdExpc3QsXG59IGZyb20gJ0BzcGFydGFjdXMvb3JkZXIvcm9vdCc7XG5pbXBvcnQge1xuICBDT05TSUdOTUVOVF9UUkFDS0lOR19CWV9JRF9FTlRJVElFUyxcbiAgT1JERVJTLFxuICBPcmRlclN0YXRlLFxuICBPUkRFUl9CWV9JRF9FTlRJVElFUyxcbiAgT1JERVJfREVUQUlMUyxcbiAgUkVQTEVOSVNITUVOVF9PUkRFUlMsXG4gIFJFUExFTklTSE1FTlRfT1JERVJfREVUQUlMUyxcbiAgUkVUVVJOX1JFUVVFU1RTLFxuICBSRVRVUk5fUkVRVUVTVF9ERVRBSUxTLFxufSBmcm9tICcuLi9vcmRlci1zdGF0ZSc7XG5pbXBvcnQgKiBhcyBmcm9tQ29uc2lnbm1lbnRUcmFja2luZ0J5SURSZWR1Y2VyIGZyb20gJy4vY29uc2lnbm1lbnQtdHJhY2tpbmctYnktaWQucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tT3JkZXJCeUlEUmVkdWNlciBmcm9tICcuL29yZGVyLWJ5LWlkLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbUNvbnNpZ25tZW50VHJhY2tpbmdSZWR1Y2VyIGZyb20gJy4vY29uc2lnbm1lbnQtdHJhY2tpbmcucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tT3JkZXJEZXRhaWxzUmVkdWNlciBmcm9tICcuL29yZGVyLWRldGFpbHMucmVkdWNlcic7XG5pbXBvcnQgKiBhcyBmcm9tT3JkZXJSZXR1cm5SZXF1ZXN0UmVkdWNlciBmcm9tICcuL29yZGVyLXJldHVybi1yZXF1ZXN0LnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbVVzZXJPcmRlcnNSZWR1Y2VyIGZyb20gJy4vb3JkZXJzLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbVJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNSZWR1Y2VyIGZyb20gJy4vcmVwbGVuaXNobWVudC1vcmRlci1kZXRhaWxzLnJlZHVjZXInO1xuaW1wb3J0ICogYXMgZnJvbVVzZXJSZXBsZW5pc2htZW50T3JkZXJzUmVkdWNlciBmcm9tICcuL3JlcGxlbmlzaG1lbnQtb3JkZXJzLnJlZHVjZXInO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVkdWNlcnMoKTogQWN0aW9uUmVkdWNlck1hcDxPcmRlclN0YXRlLCBhbnk+IHtcbiAgcmV0dXJuIHtcbiAgICBvcmRlcnM6IFN0YXRlVXRpbHMubG9hZGVyUmVkdWNlcjxPcmRlckhpc3RvcnlMaXN0LCBhbnk+KFxuICAgICAgT1JERVJTLFxuICAgICAgZnJvbVVzZXJPcmRlcnNSZWR1Y2VyLnJlZHVjZXJcbiAgICApLFxuICAgIG9yZGVyRGV0YWlsOiBTdGF0ZVV0aWxzLmxvYWRlclJlZHVjZXI8T3JkZXIsIGFueT4oXG4gICAgICBPUkRFUl9ERVRBSUxTLFxuICAgICAgZnJvbU9yZGVyRGV0YWlsc1JlZHVjZXIucmVkdWNlclxuICAgICksXG4gICAgcmVwbGVuaXNobWVudE9yZGVyczogU3RhdGVVdGlscy5sb2FkZXJSZWR1Y2VyPFJlcGxlbmlzaG1lbnRPcmRlckxpc3QsIGFueT4oXG4gICAgICBSRVBMRU5JU0hNRU5UX09SREVSUyxcbiAgICAgIGZyb21Vc2VyUmVwbGVuaXNobWVudE9yZGVyc1JlZHVjZXIucmVkdWNlclxuICAgICksXG4gICAgb3JkZXJSZXR1cm46IFN0YXRlVXRpbHMubG9hZGVyUmVkdWNlcjxSZXR1cm5SZXF1ZXN0PihcbiAgICAgIFJFVFVSTl9SRVFVRVNUX0RFVEFJTFNcbiAgICApLFxuICAgIG9yZGVyUmV0dXJuTGlzdDogU3RhdGVVdGlscy5sb2FkZXJSZWR1Y2VyPFJldHVyblJlcXVlc3RMaXN0LCBhbnk+KFxuICAgICAgUkVUVVJOX1JFUVVFU1RTLFxuICAgICAgZnJvbU9yZGVyUmV0dXJuUmVxdWVzdFJlZHVjZXIucmVkdWNlclxuICAgICksXG4gICAgY29uc2lnbm1lbnRUcmFja2luZzogZnJvbUNvbnNpZ25tZW50VHJhY2tpbmdSZWR1Y2VyLnJlZHVjZXIsXG4gICAgcmVwbGVuaXNobWVudE9yZGVyOiBTdGF0ZVV0aWxzLmxvYWRlclJlZHVjZXI8UmVwbGVuaXNobWVudE9yZGVyLCBhbnk+KFxuICAgICAgUkVQTEVOSVNITUVOVF9PUkRFUl9ERVRBSUxTLFxuICAgICAgZnJvbVJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNSZWR1Y2VyLnJlZHVjZXJcbiAgICApLFxuICAgIG9yZGVyQnlJZDogU3RhdGVVdGlscy5lbnRpdHlMb2FkZXJSZWR1Y2VyPE9yZGVyLCBhbnk+KFxuICAgICAgT1JERVJfQllfSURfRU5USVRJRVMsXG4gICAgICBmcm9tT3JkZXJCeUlEUmVkdWNlci5yZWR1Y2VyXG4gICAgKSxcbiAgICBjb25zaWdubWVudFRyYWNraW5nQnlJZDogU3RhdGVVdGlscy5lbnRpdHlMb2FkZXJSZWR1Y2VyPFxuICAgICAgQ29uc2lnbm1lbnRUcmFja2luZyxcbiAgICAgIGFueVxuICAgID4oXG4gICAgICBDT05TSUdOTUVOVF9UUkFDS0lOR19CWV9JRF9FTlRJVElFUyxcbiAgICAgIGZyb21Db25zaWdubWVudFRyYWNraW5nQnlJRFJlZHVjZXIucmVkdWNlclxuICAgICksXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyVG9rZW46IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8T3JkZXJTdGF0ZT4+ID1cbiAgbmV3IEluamVjdGlvblRva2VuPEFjdGlvblJlZHVjZXJNYXA8T3JkZXJTdGF0ZT4+KCdPcmRlclJlZHVjZXJzJyk7XG5cbmV4cG9ydCBjb25zdCByZWR1Y2VyUHJvdmlkZXI6IFByb3ZpZGVyID0ge1xuICBwcm92aWRlOiByZWR1Y2VyVG9rZW4sXG4gIHVzZUZhY3Rvcnk6IGdldFJlZHVjZXJzLFxufTtcbiJdfQ==