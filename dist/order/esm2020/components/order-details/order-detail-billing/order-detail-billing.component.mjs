/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { billingAddressCard, paymentMethodCard, } from '@spartacus/order/root';
import { combineLatest } from 'rxjs';
import { map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../order-details.service";
import * as i2 from "@spartacus/core";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
export class OrderDetailBillingComponent {
    constructor(orderDetailsService, translationService) {
        this.orderDetailsService = orderDetailsService;
        this.translationService = translationService;
        this.order$ = this.orderDetailsService.getOrderDetails();
    }
    getPaymentMethodCard(paymentDetails) {
        return combineLatest([
            this.translationService.translate('paymentForm.payment'),
            this.translationService.translate('paymentCard.expires', {
                month: paymentDetails.expiryMonth,
                year: paymentDetails.expiryYear,
            }),
        ]).pipe(map(([textTitle, textExpires]) => paymentMethodCard(textTitle, textExpires, paymentDetails)));
    }
    getBillingAddressCard(paymentDetails) {
        return combineLatest([
            this.translationService.translate('paymentForm.billingAddress'),
            this.translationService.translate('addressCard.billTo'),
        ]).pipe(map(([billingAddress, billTo]) => billingAddressCard(billingAddress, billTo, paymentDetails)));
    }
    isPaymentInfoCardFull(payment) {
        return (!!payment?.cardNumber && !!payment?.expiryMonth && !!payment?.expiryYear);
    }
}
OrderDetailBillingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderDetailBillingComponent, deps: [{ token: i1.OrderDetailsService }, { token: i2.TranslationService }], target: i0.ɵɵFactoryTarget.Component });
OrderDetailBillingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: OrderDetailBillingComponent, selector: "cx-order-detail-billing", ngImport: i0, template: "<div class=\"cx-order-items\" *ngIf=\"order$ | async as order\">\n  <div class=\"cx-review-summary\" *ngIf=\"order.paymentInfo as paymentDetails\">\n    <ng-container *cxFeatureLevel=\"'!6.6'\">\n      <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n        <cx-card\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'6.6'\">\n      <div\n        class=\"cx-review-summary-card cx-review-summary-payment-card\"\n        *ngIf=\"isPaymentInfoCardFull(paymentDetails)\"\n      >\n        <cx-card\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'!6.6'\">\n      <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n        <cx-card\n          [content]=\"getBillingAddressCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'6.6'\">\n      <div\n        class=\"cx-review-summary-card cx-review-summary-payment-card\"\n        *ngIf=\"paymentDetails?.billingAddress\"\n      >\n        <cx-card\n          [content]=\"getBillingAddressCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i3.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.FeatureLevelDirective, selector: "[cxFeatureLevel]", inputs: ["cxFeatureLevel"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderDetailBillingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-order-detail-billing', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cx-order-items\" *ngIf=\"order$ | async as order\">\n  <div class=\"cx-review-summary\" *ngIf=\"order.paymentInfo as paymentDetails\">\n    <ng-container *cxFeatureLevel=\"'!6.6'\">\n      <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n        <cx-card\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'6.6'\">\n      <div\n        class=\"cx-review-summary-card cx-review-summary-payment-card\"\n        *ngIf=\"isPaymentInfoCardFull(paymentDetails)\"\n      >\n        <cx-card\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'!6.6'\">\n      <div class=\"cx-review-summary-card cx-review-summary-payment-card\">\n        <cx-card\n          [content]=\"getBillingAddressCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n    <ng-container *cxFeatureLevel=\"'6.6'\">\n      <div\n        class=\"cx-review-summary-card cx-review-summary-payment-card\"\n        *ngIf=\"paymentDetails?.billingAddress\"\n      >\n        <cx-card\n          [content]=\"getBillingAddressCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n    </ng-container>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.OrderDetailsService }, { type: i2.TranslationService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItZGV0YWlsLWJpbGxpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZGVyL2NvbXBvbmVudHMvb3JkZXItZGV0YWlscy9vcmRlci1kZXRhaWwtYmlsbGluZy9vcmRlci1kZXRhaWwtYmlsbGluZy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JkZXIvY29tcG9uZW50cy9vcmRlci1kZXRhaWxzL29yZGVyLWRldGFpbC1iaWxsaW5nL29yZGVyLWRldGFpbC1iaWxsaW5nLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR25FLE9BQU8sRUFFTCxrQkFBa0IsRUFDbEIsaUJBQWlCLEdBQ2xCLE1BQU0sdUJBQXVCLENBQUM7QUFFL0IsT0FBTyxFQUFjLGFBQWEsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQVFyQyxNQUFNLE9BQU8sMkJBQTJCO0lBSXRDLFlBQ1ksbUJBQXdDLEVBQ3hDLGtCQUFzQztRQUR0Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFMbEQsV0FBTSxHQUNKLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUsxQyxDQUFDO0lBRUosb0JBQW9CLENBQUMsY0FBOEI7UUFDakQsT0FBTyxhQUFhLENBQUM7WUFDbkIsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQztZQUN4RCxJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLHFCQUFxQixFQUFFO2dCQUN2RCxLQUFLLEVBQUUsY0FBYyxDQUFDLFdBQVc7Z0JBQ2pDLElBQUksRUFBRSxjQUFjLENBQUMsVUFBVTthQUNoQyxDQUFDO1NBQ0gsQ0FBQyxDQUFDLElBQUksQ0FDTCxHQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsRUFBRSxFQUFFLENBQy9CLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQzFELENBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxjQUE4QjtRQUNsRCxPQUFPLGFBQWEsQ0FBQztZQUNuQixJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLDRCQUE0QixDQUFDO1lBQy9ELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsb0JBQW9CLENBQUM7U0FDeEQsQ0FBQyxDQUFDLElBQUksQ0FDTCxHQUFHLENBQUMsQ0FBQyxDQUFDLGNBQWMsRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQy9CLGtCQUFrQixDQUFDLGNBQWMsRUFBRSxNQUFNLEVBQUUsY0FBYyxDQUFDLENBQzNELENBQ0YsQ0FBQztJQUNKLENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxPQUF1QjtRQUMzQyxPQUFPLENBQ0wsQ0FBQyxDQUFDLE9BQU8sRUFBRSxVQUFVLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxXQUFXLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQ3pFLENBQUM7SUFDSixDQUFDOzt3SEF0Q1UsMkJBQTJCOzRHQUEzQiwyQkFBMkIsK0RDeEJ4QyxzMkNBc0NBOzJGRGRhLDJCQUEyQjtrQkFMdkMsU0FBUzsrQkFDRSx5QkFBeUIsbUJBRWxCLHVCQUF1QixDQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYXltZW50RGV0YWlscyB9IGZyb20gJ0BzcGFydGFjdXMvY2FydC9iYXNlL3Jvb3QnO1xuaW1wb3J0IHsgVHJhbnNsYXRpb25TZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIE9yZGVyLFxuICBiaWxsaW5nQWRkcmVzc0NhcmQsXG4gIHBheW1lbnRNZXRob2RDYXJkLFxufSBmcm9tICdAc3BhcnRhY3VzL29yZGVyL3Jvb3QnO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ0BzcGFydGFjdXMvc3RvcmVmcm9udCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBjb21iaW5lTGF0ZXN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPcmRlckRldGFpbHNTZXJ2aWNlIH0gZnJvbSAnLi4vb3JkZXItZGV0YWlscy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtb3JkZXItZGV0YWlsLWJpbGxpbmcnLFxuICB0ZW1wbGF0ZVVybDogJy4vb3JkZXItZGV0YWlsLWJpbGxpbmcuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgT3JkZXJEZXRhaWxCaWxsaW5nQ29tcG9uZW50IHtcbiAgb3JkZXIkOiBPYnNlcnZhYmxlPE9yZGVyIHwgdW5kZWZpbmVkPiA9XG4gICAgdGhpcy5vcmRlckRldGFpbHNTZXJ2aWNlLmdldE9yZGVyRGV0YWlscygpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBvcmRlckRldGFpbHNTZXJ2aWNlOiBPcmRlckRldGFpbHNTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCB0cmFuc2xhdGlvblNlcnZpY2U6IFRyYW5zbGF0aW9uU2VydmljZVxuICApIHt9XG5cbiAgZ2V0UGF5bWVudE1ldGhvZENhcmQocGF5bWVudERldGFpbHM6IFBheW1lbnREZXRhaWxzKTogT2JzZXJ2YWJsZTxDYXJkPiB7XG4gICAgcmV0dXJuIGNvbWJpbmVMYXRlc3QoW1xuICAgICAgdGhpcy50cmFuc2xhdGlvblNlcnZpY2UudHJhbnNsYXRlKCdwYXltZW50Rm9ybS5wYXltZW50JyksXG4gICAgICB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS50cmFuc2xhdGUoJ3BheW1lbnRDYXJkLmV4cGlyZXMnLCB7XG4gICAgICAgIG1vbnRoOiBwYXltZW50RGV0YWlscy5leHBpcnlNb250aCxcbiAgICAgICAgeWVhcjogcGF5bWVudERldGFpbHMuZXhwaXJ5WWVhcixcbiAgICAgIH0pLFxuICAgIF0pLnBpcGUoXG4gICAgICBtYXAoKFt0ZXh0VGl0bGUsIHRleHRFeHBpcmVzXSkgPT5cbiAgICAgICAgcGF5bWVudE1ldGhvZENhcmQodGV4dFRpdGxlLCB0ZXh0RXhwaXJlcywgcGF5bWVudERldGFpbHMpXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGdldEJpbGxpbmdBZGRyZXNzQ2FyZChwYXltZW50RGV0YWlsczogUGF5bWVudERldGFpbHMpOiBPYnNlcnZhYmxlPENhcmQ+IHtcbiAgICByZXR1cm4gY29tYmluZUxhdGVzdChbXG4gICAgICB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS50cmFuc2xhdGUoJ3BheW1lbnRGb3JtLmJpbGxpbmdBZGRyZXNzJyksXG4gICAgICB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS50cmFuc2xhdGUoJ2FkZHJlc3NDYXJkLmJpbGxUbycpLFxuICAgIF0pLnBpcGUoXG4gICAgICBtYXAoKFtiaWxsaW5nQWRkcmVzcywgYmlsbFRvXSkgPT5cbiAgICAgICAgYmlsbGluZ0FkZHJlc3NDYXJkKGJpbGxpbmdBZGRyZXNzLCBiaWxsVG8sIHBheW1lbnREZXRhaWxzKVxuICAgICAgKVxuICAgICk7XG4gIH1cblxuICBpc1BheW1lbnRJbmZvQ2FyZEZ1bGwocGF5bWVudDogUGF5bWVudERldGFpbHMpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgISFwYXltZW50Py5jYXJkTnVtYmVyICYmICEhcGF5bWVudD8uZXhwaXJ5TW9udGggJiYgISFwYXltZW50Py5leHBpcnlZZWFyXG4gICAgKTtcbiAgfVxufVxuIiwiPGRpdiBjbGFzcz1cImN4LW9yZGVyLWl0ZW1zXCIgKm5nSWY9XCJvcmRlciQgfCBhc3luYyBhcyBvcmRlclwiPlxuICA8ZGl2IGNsYXNzPVwiY3gtcmV2aWV3LXN1bW1hcnlcIiAqbmdJZj1cIm9yZGVyLnBheW1lbnRJbmZvIGFzIHBheW1lbnREZXRhaWxzXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqY3hGZWF0dXJlTGV2ZWw9XCInITYuNidcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1yZXZpZXctc3VtbWFyeS1jYXJkIGN4LXJldmlldy1zdW1tYXJ5LXBheW1lbnQtY2FyZFwiPlxuICAgICAgICA8Y3gtY2FyZFxuICAgICAgICAgIFtjb250ZW50XT1cImdldFBheW1lbnRNZXRob2RDYXJkKHBheW1lbnREZXRhaWxzKSB8IGFzeW5jXCJcbiAgICAgICAgPjwvY3gtY2FyZD5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKmN4RmVhdHVyZUxldmVsPVwiJzYuNidcIj5cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJjeC1yZXZpZXctc3VtbWFyeS1jYXJkIGN4LXJldmlldy1zdW1tYXJ5LXBheW1lbnQtY2FyZFwiXG4gICAgICAgICpuZ0lmPVwiaXNQYXltZW50SW5mb0NhcmRGdWxsKHBheW1lbnREZXRhaWxzKVwiXG4gICAgICA+XG4gICAgICAgIDxjeC1jYXJkXG4gICAgICAgICAgW2NvbnRlbnRdPVwiZ2V0UGF5bWVudE1ldGhvZENhcmQocGF5bWVudERldGFpbHMpIHwgYXN5bmNcIlxuICAgICAgICA+PC9jeC1jYXJkPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqY3hGZWF0dXJlTGV2ZWw9XCInITYuNidcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1yZXZpZXctc3VtbWFyeS1jYXJkIGN4LXJldmlldy1zdW1tYXJ5LXBheW1lbnQtY2FyZFwiPlxuICAgICAgICA8Y3gtY2FyZFxuICAgICAgICAgIFtjb250ZW50XT1cImdldEJpbGxpbmdBZGRyZXNzQ2FyZChwYXltZW50RGV0YWlscykgfCBhc3luY1wiXG4gICAgICAgID48L2N4LWNhcmQ+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctY29udGFpbmVyICpjeEZlYXR1cmVMZXZlbD1cIic2LjYnXCI+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiY3gtcmV2aWV3LXN1bW1hcnktY2FyZCBjeC1yZXZpZXctc3VtbWFyeS1wYXltZW50LWNhcmRcIlxuICAgICAgICAqbmdJZj1cInBheW1lbnREZXRhaWxzPy5iaWxsaW5nQWRkcmVzc1wiXG4gICAgICA+XG4gICAgICAgIDxjeC1jYXJkXG4gICAgICAgICAgW2NvbnRlbnRdPVwiZ2V0QmlsbGluZ0FkZHJlc3NDYXJkKHBheW1lbnREZXRhaWxzKSB8IGFzeW5jXCJcbiAgICAgICAgPjwvY3gtY2FyZD5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19