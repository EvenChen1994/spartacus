/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, inject } from '@angular/core';
import { CartOutlets, PromotionLocation, } from '@spartacus/cart/base/root';
import { OrderOutlets } from '@spartacus/order/root';
import { of } from 'rxjs';
import { map, tap } from 'rxjs/operators';
import { MyAccountV2OrderConsignmentsService } from '../my-account-v2-order-consignments.service';
import * as i0 from "@angular/core";
import * as i1 from "../order-details.service";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/cart/base/components/add-to-cart";
import * as i5 from "./order-consigned-entries/order-consigned-entries.component";
import * as i6 from "@spartacus/core";
export class OrderDetailItemsComponent {
    constructor(orderDetailsService, component) {
        this.orderDetailsService = orderDetailsService;
        this.component = component;
        this.orderConsignmentsService = inject(MyAccountV2OrderConsignmentsService);
        this.OrderOutlets = OrderOutlets;
        this.CartOutlets = CartOutlets;
        this.promotionLocation = PromotionLocation.Order;
        this.order$ = this.orderDetailsService.getOrderDetails().pipe(tap((order) => {
            this.pickupConsignments = this.getGroupedConsignments(order, true);
            this.deliveryConsignments = this.getGroupedConsignments(order, false);
            this.pickupUnconsignedEntries = this.getUnconsignedEntries(order, true);
            this.deliveryUnConsignedEntries = this.getUnconsignedEntries(order, false);
        }));
        this.enableAddToCart$ = this.component.data$.pipe(map((data) => data.enableAddToCart));
        this.isOrderLoading$ = typeof this.orderDetailsService.isOrderDetailsLoading === 'function'
            ? this.orderDetailsService.isOrderDetailsLoading()
            : of(false);
        this.groupCartItems$ = this.component.data$.pipe(map((data) => data.groupCartItems));
    }
    getGroupedConsignments(order, pickup) {
        return this.orderConsignmentsService.getGroupedConsignments(order, pickup);
    }
    getUnconsignedEntries(order, pickup) {
        return this.orderConsignmentsService.getUnconsignedEntries(order, pickup);
    }
}
OrderDetailItemsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderDetailItemsComponent, deps: [{ token: i1.OrderDetailsService }, { token: i2.CmsComponentData }], target: i0.ɵɵFactoryTarget.Component });
OrderDetailItemsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: OrderDetailItemsComponent, selector: "cx-order-details-items", ngImport: i0, template: "<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!(isOrderLoading$ | async)\">\n    <ng-container\n      *ngIf=\"\n        order.consignments?.length ||\n        order.unconsignedEntries?.length ||\n        order.replenishmentOrderCode\n      \"\n    >\n      <cx-promotions\n        [promotions]=\"order.appliedOrderPromotions || []\"\n      ></cx-promotions>\n    </ng-container>\n\n    <!-- pickup consigned entries -->\n    <div\n      *ngIf=\"pickupConsignments?.length\"\n      class=\"cx-pickup-order-consigned-entries-header\"\n    >\n      {{ 'deliveryPointOfServiceDetails.itemsToBePickUp' | cxTranslate }}\n    </div>\n    <cx-order-consigned-entries\n      *ngIf=\"pickupConsignments\"\n      [order]=\"order\"\n      [consignments]=\"pickupConsignments\"\n      [enableAddToCart]=\"enableAddToCart$ | async\"\n      [buyItAgainTranslation]=\"'addToCart.buyItAgain' | cxTranslate\"\n    ></cx-order-consigned-entries>\n\n    <!-- delivery consignment address and delivery mode -->\n    <ng-template\n      *ngIf=\"\n        deliveryConsignments &&\n        deliveryConsignments.length > 0 &&\n        (groupCartItems$ | async)\n      \"\n      [cxOutlet]=\"OrderOutlets.CONSIGNMENT_DELIVERY_INFO\"\n      [cxOutletContext]=\"{\n        showItemList: false,\n        order: order\n      }\"\n    >\n    </ng-template>\n\n    <!-- delivery consigned entries -->\n    <cx-order-consigned-entries\n      *ngIf=\"deliveryConsignments\"\n      [order]=\"order\"\n      [consignments]=\"deliveryConsignments\"\n      [enableAddToCart]=\"enableAddToCart$ | async\"\n      [buyItAgainTranslation]=\"'addToCart.buyItAgain' | cxTranslate\"\n    ></cx-order-consigned-entries>\n\n    <!-- unconsigned entries -->\n    <ng-container *ngIf=\"order?.unconsignedEntries?.length\">\n      <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header\">\n        <div class=\"cx-list-status\">\n          {{\n            'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n          }}\n        </div>\n      </div>\n      <!-- delivery unconsigned entries -->\n      <ng-container *ngIf=\"deliveryUnConsignedEntries?.length\">\n        <h2 *ngIf=\"groupCartItems$ | async\" class=\"cx-review-header\">\n          {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n        </h2>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: deliveryUnConsignedEntries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </ng-container>\n      <!-- pickup unconsigned entries, b2b does not have pickup items -->\n      <ng-container *ngIf=\"pickupUnconsignedEntries?.length\">\n        <h2 class=\"cx-review-header\">\n          {{ 'checkoutPickupInStore.heading' | cxTranslate }}\n        </h2>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: pickupUnconsignedEntries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <!-- replenishment other entries -->\n    <ng-container *ngIf=\"order?.entries && order?.replenishmentOrderCode\">\n      <div class=\"cx-list\">\n        <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header\">\n          <div class=\"cx-list-status\">\n            {{\n              'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n            }}\n          </div>\n        </div>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: order.entries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template let-ctx #addToCartBtn>\n    <cx-add-to-cart\n      [productCode]=\"ctx.item.product?.code\"\n      [product]=\"ctx.item.product\"\n      [showQuantity]=\"false\"\n      [options]=\"ctx.options\"\n      [pickupStore]=\"ctx.item.deliveryPointOfService?.name\"\n      class=\"add-to-cart\"\n    >\n    </cx-add-to-cart>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.PromotionsComponent, selector: "cx-promotions", inputs: ["promotions"] }, { kind: "directive", type: i2.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer", "cxComponentRef"], outputs: ["loaded", "cxComponentRefChange"] }, { kind: "component", type: i4.AddToCartComponent, selector: "cx-add-to-cart", inputs: ["productCode", "showQuantity", "options", "pickupStore", "product"] }, { kind: "component", type: i5.OrderConsignedEntriesComponent, selector: "cx-order-consigned-entries", inputs: ["consignments", "order", "enableAddToCart", "buyItAgainTranslation"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderDetailItemsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-order-details-items', template: "<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!(isOrderLoading$ | async)\">\n    <ng-container\n      *ngIf=\"\n        order.consignments?.length ||\n        order.unconsignedEntries?.length ||\n        order.replenishmentOrderCode\n      \"\n    >\n      <cx-promotions\n        [promotions]=\"order.appliedOrderPromotions || []\"\n      ></cx-promotions>\n    </ng-container>\n\n    <!-- pickup consigned entries -->\n    <div\n      *ngIf=\"pickupConsignments?.length\"\n      class=\"cx-pickup-order-consigned-entries-header\"\n    >\n      {{ 'deliveryPointOfServiceDetails.itemsToBePickUp' | cxTranslate }}\n    </div>\n    <cx-order-consigned-entries\n      *ngIf=\"pickupConsignments\"\n      [order]=\"order\"\n      [consignments]=\"pickupConsignments\"\n      [enableAddToCart]=\"enableAddToCart$ | async\"\n      [buyItAgainTranslation]=\"'addToCart.buyItAgain' | cxTranslate\"\n    ></cx-order-consigned-entries>\n\n    <!-- delivery consignment address and delivery mode -->\n    <ng-template\n      *ngIf=\"\n        deliveryConsignments &&\n        deliveryConsignments.length > 0 &&\n        (groupCartItems$ | async)\n      \"\n      [cxOutlet]=\"OrderOutlets.CONSIGNMENT_DELIVERY_INFO\"\n      [cxOutletContext]=\"{\n        showItemList: false,\n        order: order\n      }\"\n    >\n    </ng-template>\n\n    <!-- delivery consigned entries -->\n    <cx-order-consigned-entries\n      *ngIf=\"deliveryConsignments\"\n      [order]=\"order\"\n      [consignments]=\"deliveryConsignments\"\n      [enableAddToCart]=\"enableAddToCart$ | async\"\n      [buyItAgainTranslation]=\"'addToCart.buyItAgain' | cxTranslate\"\n    ></cx-order-consigned-entries>\n\n    <!-- unconsigned entries -->\n    <ng-container *ngIf=\"order?.unconsignedEntries?.length\">\n      <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header\">\n        <div class=\"cx-list-status\">\n          {{\n            'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n          }}\n        </div>\n      </div>\n      <!-- delivery unconsigned entries -->\n      <ng-container *ngIf=\"deliveryUnConsignedEntries?.length\">\n        <h2 *ngIf=\"groupCartItems$ | async\" class=\"cx-review-header\">\n          {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n        </h2>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: deliveryUnConsignedEntries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </ng-container>\n      <!-- pickup unconsigned entries, b2b does not have pickup items -->\n      <ng-container *ngIf=\"pickupUnconsignedEntries?.length\">\n        <h2 class=\"cx-review-header\">\n          {{ 'checkoutPickupInStore.heading' | cxTranslate }}\n        </h2>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: pickupUnconsignedEntries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <!-- replenishment other entries -->\n    <ng-container *ngIf=\"order?.entries && order?.replenishmentOrderCode\">\n      <div class=\"cx-list\">\n        <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header\">\n          <div class=\"cx-list-status\">\n            {{\n              'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n            }}\n          </div>\n        </div>\n        <div class=\"cx-list-item\">\n          <ng-template\n            [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n            [cxOutletContext]=\"{\n              items: order.entries,\n              readonly: true,\n              promotionLocation: promotionLocation,\n              options: {\n                displayAddToCart: enableAddToCart$ | async,\n                addToCartString: 'addToCart.buyItAgain' | cxTranslate,\n                optionalBtn: addToCartBtn\n              }\n            }\"\n          >\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n  </ng-container>\n\n  <ng-template let-ctx #addToCartBtn>\n    <cx-add-to-cart\n      [productCode]=\"ctx.item.product?.code\"\n      [product]=\"ctx.item.product\"\n      [showQuantity]=\"false\"\n      [options]=\"ctx.options\"\n      [pickupStore]=\"ctx.item.deliveryPointOfService?.name\"\n      class=\"add-to-cart\"\n    >\n    </cx-add-to-cart>\n  </ng-template>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.OrderDetailsService }, { type: i2.CmsComponentData }]; } });
//# sourceMappingURL=data:application/json;base64,