/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CartOutlets, } from '@spartacus/cart/base/root';
import { combineLatest, of } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { paymentMethodCard } from '@spartacus/order/root';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "../order-details.service";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
import * as i5 from "../order-detail-billing/order-detail-billing.component";
export class OrderOverviewComponent {
    constructor(translation, orderDetailsService, component) {
        this.translation = translation;
        this.orderDetailsService = orderDetailsService;
        this.component = component;
        this.cartOutlets = CartOutlets;
        this.order$ = this.orderDetailsService.getOrderDetails();
        this.isOrderLoading$ = typeof this.orderDetailsService.isOrderDetailsLoading === 'function'
            ? this.orderDetailsService.isOrderDetailsLoading()
            : of(false);
        this.simple$ = this.component.data$.pipe(map((data) => data.simple));
    }
    getReplenishmentCodeCardContent(orderCode) {
        return this.translation.translate('orderDetails.replenishmentId').pipe(filter(() => Boolean(orderCode)), map((textTitle) => ({
            title: textTitle,
            text: [orderCode],
        })));
    }
    getReplenishmentActiveCardContent(active) {
        return combineLatest([
            this.translation.translate('orderDetails.status'),
            this.translation.translate('orderDetails.active'),
            this.translation.translate('orderDetails.cancelled'),
        ]).pipe(map(([textTitle, textActive, textCancelled]) => ({
            title: textTitle,
            text: [active ? textActive : textCancelled],
        })));
    }
    getReplenishmentStartOnCardContent(isoDate) {
        return this.translation.translate('orderDetails.startOn').pipe(filter(() => Boolean(isoDate)), map((textTitle) => {
            return {
                title: textTitle,
                text: [isoDate],
            };
        }));
    }
    getReplenishmentFrequencyCardContent(frequency) {
        return this.translation.translate('orderDetails.frequency').pipe(filter(() => Boolean(frequency)), map((textTitle) => ({
            title: textTitle,
            text: [frequency],
        })));
    }
    getReplenishmentNextDateCardContent(isoDate) {
        return this.translation.translate('orderDetails.nextOrderDate').pipe(filter(() => Boolean(isoDate)), map((textTitle) => {
            return {
                title: textTitle,
                text: [isoDate],
            };
        }));
    }
    getOrderCodeCardContent(orderCode) {
        return this.translation.translate('orderDetails.orderNumber').pipe(filter(() => Boolean(orderCode)), map((textTitle) => ({
            title: textTitle,
            text: [orderCode],
        })));
    }
    getOrderCurrentDateCardContent(isoDate) {
        return this.translation.translate('orderDetails.placedOn').pipe(filter(() => Boolean(isoDate)), map((textTitle) => {
            return {
                title: textTitle,
                text: [isoDate],
            };
        }));
    }
    getOrderStatusCardContent(status) {
        return combineLatest([
            this.translation.translate('orderDetails.status'),
            this.translation.translate('orderDetails.statusDisplay_' + status),
        ]).pipe(map(([textTitle, textStatus]) => ({
            title: textTitle,
            text: [textStatus],
        })));
    }
    getPurchaseOrderNumber(poNumber) {
        return combineLatest([
            this.translation.translate('orderDetails.purchaseOrderNumber'),
            this.translation.translate('orderDetails.emptyPurchaseOrderId'),
        ]).pipe(map(([textTitle, noneTextTitle]) => ({
            title: textTitle,
            text: [poNumber ? poNumber : noneTextTitle],
        })));
    }
    getMethodOfPaymentCardContent(hasPaymentInfo) {
        return combineLatest([
            this.translation.translate('orderDetails.methodOfPayment'),
            this.translation.translate('paymentTypes.paymentType_ACCOUNT'),
            this.translation.translate('paymentTypes.paymentType_CARD'),
        ]).pipe(map(([textTitle, textAccount, textCard]) => ({
            title: textTitle,
            text: [Boolean(hasPaymentInfo) ? textCard : textAccount],
        })));
    }
    getCostCenterCardContent(costCenter) {
        return this.translation.translate('orderDetails.costCenter').pipe(filter(() => Boolean(costCenter)), map((textTitle) => ({
            title: textTitle,
            textBold: costCenter?.name,
            text: ['(' + costCenter?.unit?.name + ')'],
        })));
    }
    getAddressCardContent(deliveryAddress) {
        return this.translation.translate('addressCard.shipTo').pipe(filter(() => Boolean(deliveryAddress)), map((textTitle) => {
            const formattedAddress = this.normalizeFormattedAddress(deliveryAddress.formattedAddress ?? '');
            return {
                title: textTitle,
                textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,
                text: [formattedAddress, deliveryAddress.country?.name],
            };
        }));
    }
    getDeliveryModeCardContent(deliveryMode) {
        return this.translation.translate('orderDetails.shippingMethod').pipe(filter(() => Boolean(deliveryMode)), map((textTitle) => ({
            title: textTitle,
            textBold: deliveryMode.name,
            text: [
                deliveryMode.description,
                deliveryMode.deliveryCost?.formattedValue
                    ? deliveryMode.deliveryCost?.formattedValue
                    : '',
            ],
        })));
    }
    getPaymentInfoCardContent(payment) {
        return combineLatest([
            this.translation.translate('paymentForm.payment'),
            this.translation.translate('paymentCard.expires', {
                month: Boolean(payment) ? payment.expiryMonth : '',
                year: Boolean(payment) ? payment.expiryYear : '',
            }),
        ]).pipe(filter(() => Boolean(payment)), map(([textTitle, textExpires]) => paymentMethodCard(textTitle, textExpires, payment)));
    }
    isPaymentInfoCardFull(payment) {
        return (!!payment?.cardNumber && !!payment?.expiryMonth && !!payment?.expiryYear);
    }
    getBillingAddressCardContent(billingAddress) {
        return this.translation.translate('paymentForm.billingAddress').pipe(filter(() => Boolean(billingAddress)), map((textTitle) => ({
            title: textTitle,
            textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,
            text: [
                billingAddress.formattedAddress,
                billingAddress.country?.name,
            ],
        })));
    }
    normalizeFormattedAddress(formattedAddress) {
        const addresses = formattedAddress
            .split(',')
            .map((address) => address.trim());
        return addresses.filter(Boolean).join(', ');
    }
}
OrderOverviewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderOverviewComponent, deps: [{ token: i1.TranslationService }, { token: i2.OrderDetailsService }, { token: i3.CmsComponentData }], target: i0.ɵɵFactoryTarget.Component });
OrderOverviewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: OrderOverviewComponent, selector: "cx-order-overview", ngImport: i0, template: "<div class=\"cx-order-summary\" *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!(isOrderLoading$ | async)\">\n    <div *ngIf=\"!(simple$ | async)\" class=\"container\">\n      <ng-container *ngIf=\"order.replenishmentOrderCode; else otherOrder\">\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getReplenishmentCodeCardContent(order?.replenishmentOrderCode)\n                | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getReplenishmentActiveCardContent(order?.active) | async\"\n          ></cx-card>\n        </div>\n\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getReplenishmentStartOnCardContent(order?.firstDate | cxDate)\n                | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getReplenishmentFrequencyCardContent(\n                order?.trigger?.displayTimeTable\n              ) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getReplenishmentNextDateCardContent(\n                order?.trigger?.activationTime | cxDate\n              ) | async\n            \"\n          ></cx-card>\n\n          <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n          <ng-container *cxFeatureLevel=\"'6.4'\">\n            <ng-template\n              [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n              [cxOutletContext]=\"{ item: order, readonly: true }\"\n            >\n            </ng-template>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-template #otherOrder>\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"getOrderCodeCardContent(order?.code) | async\"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getOrderCurrentDateCardContent(order?.created | cxDate) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getOrderStatusCardContent(order.statusDisplay) | async\"\n          ></cx-card>\n\n          <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n          <ng-container *cxFeatureLevel=\"'6.4'\">\n            <ng-template\n              [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n              [cxOutletContext]=\"{ item: order, readonly: true }\"\n            >\n            </ng-template>\n          </ng-container>\n        </div>\n      </ng-template>\n\n      <ng-container\n        *ngIf=\"order.purchaseOrderNumber || order.purchaseOrderNumber === ''\"\n      >\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getPurchaseOrderNumber(order?.purchaseOrderNumber) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getMethodOfPaymentCardContent(order.paymentInfo) | async\"\n          ></cx-card>\n\n          <ng-container *ngIf=\"order.costCenter\">\n            <cx-card\n              [content]=\"getCostCenterCardContent(order?.costCenter) | async\"\n            ></cx-card>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <div class=\"cx-summary-card\">\n        <ng-container *ngIf=\"order.deliveryAddress\">\n          <cx-card\n            [content]=\"getAddressCardContent(order?.deliveryAddress) | async\"\n          ></cx-card>\n        </ng-container>\n\n        <ng-container *ngIf=\"order.deliveryMode\">\n          <cx-card\n            [content]=\"getDeliveryModeCardContent(order?.deliveryMode) | async\"\n          ></cx-card>\n        </ng-container>\n      </div>\n\n      <ng-container *ngIf=\"order.paymentInfo\">\n        <ng-container *cxFeatureLevel=\"'6.3'\">\n          <div\n            class=\"cx-summary-card\"\n            *ngIf=\"\n              order?.paymentInfo?.billingAddress ||\n              isPaymentInfoCardFull(order?.paymentInfo)\n            \"\n          >\n            <ng-container *ngIf=\"isPaymentInfoCardFull(order?.paymentInfo)\">\n              <cx-card\n                [content]=\"\n                  getPaymentInfoCardContent(order?.paymentInfo) | async\n                \"\n              ></cx-card>\n            </ng-container>\n\n            <cx-card\n              [content]=\"\n                getBillingAddressCardContent(order?.paymentInfo?.billingAddress)\n                  | async\n              \"\n            ></cx-card>\n          </div>\n        </ng-container>\n\n        <ng-container *cxFeatureLevel=\"'!6.3'\">\n          <div class=\"cx-summary-card\">\n            <cx-card\n              [content]=\"getPaymentInfoCardContent(order?.paymentInfo) | async\"\n            ></cx-card>\n\n            <cx-card\n              [content]=\"\n                getBillingAddressCardContent(order?.paymentInfo?.billingAddress)\n                  | async\n              \"\n            ></cx-card>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"simple$ | async\" class=\"container\">\n      <div class=\"cx-order-details-cards\">\n        <cx-card\n          [content]=\"getOrderCodeCardContent(order?.code) | async\"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getOrderCurrentDateCardContent(order?.created | cxDate) | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"getOrderStatusCardContent(order.statusDisplay) | async\"\n        ></cx-card>\n\n        <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n        <ng-container *cxFeatureLevel=\"'6.4'\">\n          <ng-template\n            [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n            [cxOutletContext]=\"{ item: order, readonly: true }\"\n          >\n          </ng-template>\n        </ng-container>\n      </div>\n      <ng-container *cxFeatureLevel=\"'!6.6'\">\n        <cx-order-detail-billing></cx-order-detail-billing>\n      </ng-container>\n      <ng-container *cxFeatureLevel=\"'6.6'\">\n        <cx-order-detail-billing\n          *ngIf=\"\n            isPaymentInfoCardFull(order?.paymentInfo) ||\n            order?.paymentInfo?.billingAddress\n          \"\n        ></cx-order-detail-billing>\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n", dependencies: [{ kind: "component", type: i3.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.FeatureLevelDirective, selector: "[cxFeatureLevel]", inputs: ["cxFeatureLevel"] }, { kind: "directive", type: i3.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer", "cxComponentRef"], outputs: ["loaded", "cxComponentRefChange"] }, { kind: "component", type: i5.OrderDetailBillingComponent, selector: "cx-order-detail-billing" }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.CxDatePipe, name: "cxDate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderOverviewComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-order-overview', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cx-order-summary\" *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!(isOrderLoading$ | async)\">\n    <div *ngIf=\"!(simple$ | async)\" class=\"container\">\n      <ng-container *ngIf=\"order.replenishmentOrderCode; else otherOrder\">\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getReplenishmentCodeCardContent(order?.replenishmentOrderCode)\n                | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getReplenishmentActiveCardContent(order?.active) | async\"\n          ></cx-card>\n        </div>\n\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getReplenishmentStartOnCardContent(order?.firstDate | cxDate)\n                | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getReplenishmentFrequencyCardContent(\n                order?.trigger?.displayTimeTable\n              ) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getReplenishmentNextDateCardContent(\n                order?.trigger?.activationTime | cxDate\n              ) | async\n            \"\n          ></cx-card>\n\n          <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n          <ng-container *cxFeatureLevel=\"'6.4'\">\n            <ng-template\n              [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n              [cxOutletContext]=\"{ item: order, readonly: true }\"\n            >\n            </ng-template>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-template #otherOrder>\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"getOrderCodeCardContent(order?.code) | async\"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"\n              getOrderCurrentDateCardContent(order?.created | cxDate) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getOrderStatusCardContent(order.statusDisplay) | async\"\n          ></cx-card>\n\n          <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n          <ng-container *cxFeatureLevel=\"'6.4'\">\n            <ng-template\n              [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n              [cxOutletContext]=\"{ item: order, readonly: true }\"\n            >\n            </ng-template>\n          </ng-container>\n        </div>\n      </ng-template>\n\n      <ng-container\n        *ngIf=\"order.purchaseOrderNumber || order.purchaseOrderNumber === ''\"\n      >\n        <div class=\"cx-summary-card\">\n          <cx-card\n            [content]=\"\n              getPurchaseOrderNumber(order?.purchaseOrderNumber) | async\n            \"\n          ></cx-card>\n\n          <cx-card\n            [content]=\"getMethodOfPaymentCardContent(order.paymentInfo) | async\"\n          ></cx-card>\n\n          <ng-container *ngIf=\"order.costCenter\">\n            <cx-card\n              [content]=\"getCostCenterCardContent(order?.costCenter) | async\"\n            ></cx-card>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <div class=\"cx-summary-card\">\n        <ng-container *ngIf=\"order.deliveryAddress\">\n          <cx-card\n            [content]=\"getAddressCardContent(order?.deliveryAddress) | async\"\n          ></cx-card>\n        </ng-container>\n\n        <ng-container *ngIf=\"order.deliveryMode\">\n          <cx-card\n            [content]=\"getDeliveryModeCardContent(order?.deliveryMode) | async\"\n          ></cx-card>\n        </ng-container>\n      </div>\n\n      <ng-container *ngIf=\"order.paymentInfo\">\n        <ng-container *cxFeatureLevel=\"'6.3'\">\n          <div\n            class=\"cx-summary-card\"\n            *ngIf=\"\n              order?.paymentInfo?.billingAddress ||\n              isPaymentInfoCardFull(order?.paymentInfo)\n            \"\n          >\n            <ng-container *ngIf=\"isPaymentInfoCardFull(order?.paymentInfo)\">\n              <cx-card\n                [content]=\"\n                  getPaymentInfoCardContent(order?.paymentInfo) | async\n                \"\n              ></cx-card>\n            </ng-container>\n\n            <cx-card\n              [content]=\"\n                getBillingAddressCardContent(order?.paymentInfo?.billingAddress)\n                  | async\n              \"\n            ></cx-card>\n          </div>\n        </ng-container>\n\n        <ng-container *cxFeatureLevel=\"'!6.3'\">\n          <div class=\"cx-summary-card\">\n            <cx-card\n              [content]=\"getPaymentInfoCardContent(order?.paymentInfo) | async\"\n            ></cx-card>\n\n            <cx-card\n              [content]=\"\n                getBillingAddressCardContent(order?.paymentInfo?.billingAddress)\n                  | async\n              \"\n            ></cx-card>\n          </div>\n        </ng-container>\n      </ng-container>\n    </div>\n\n    <div *ngIf=\"simple$ | async\" class=\"container\">\n      <div class=\"cx-order-details-cards\">\n        <cx-card\n          [content]=\"getOrderCodeCardContent(order?.code) | async\"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getOrderCurrentDateCardContent(order?.created | cxDate) | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"getOrderStatusCardContent(order.statusDisplay) | async\"\n        ></cx-card>\n\n        <!-- TODO:(CXINT-2309) for next major release remove feature level -->\n        <ng-container *cxFeatureLevel=\"'6.4'\">\n          <ng-template\n            [cxOutlet]=\"cartOutlets.ORDER_OVERVIEW\"\n            [cxOutletContext]=\"{ item: order, readonly: true }\"\n          >\n          </ng-template>\n        </ng-container>\n      </div>\n      <ng-container *cxFeatureLevel=\"'!6.6'\">\n        <cx-order-detail-billing></cx-order-detail-billing>\n      </ng-container>\n      <ng-container *cxFeatureLevel=\"'6.6'\">\n        <cx-order-detail-billing\n          *ngIf=\"\n            isPaymentInfoCardFull(order?.paymentInfo) ||\n            order?.paymentInfo?.billingAddress\n          \"\n        ></cx-order-detail-billing>\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TranslationService }, { type: i2.OrderDetailsService }, { type: i3.CmsComponentData }]; } });
//# sourceMappingURL=data:application/json;base64,