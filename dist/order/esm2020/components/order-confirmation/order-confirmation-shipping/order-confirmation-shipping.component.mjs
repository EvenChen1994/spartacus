/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input, Optional, } from '@angular/core';
import { CartOutlets, } from '@spartacus/cart/base/root';
import { deliveryAddressCard, deliveryModeCard, } from '@spartacus/order/root';
import { combineLatest, of, Subscription } from 'rxjs';
import { map, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/order/root";
import * as i2 from "@spartacus/core";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
export class OrderConfirmationShippingComponent {
    constructor(orderFacade, translationService, cd, outlet) {
        this.orderFacade = orderFacade;
        this.translationService = translationService;
        this.cd = cd;
        this.outlet = outlet;
        this.showItemList = true;
        this.cartOutlets = CartOutlets;
        this.order$ = this.orderFacade
            .getOrderDetails()
            .pipe(tap((order) => {
            this.entries = order?.entries?.filter((entry) => !entry.deliveryPointOfService);
        }));
        this.subscription = new Subscription();
    }
    ngOnInit() {
        this.subscription.add(this.outlet?.context$.subscribe((context) => {
            if (context.showItemList !== undefined) {
                this.showItemList = context.showItemList;
            }
            if (context.order) {
                this.order$ = of(context.order);
            }
            this.cd.markForCheck();
        }));
    }
    getDeliveryAddressCard(deliveryAddress, countryName) {
        return combineLatest([
            this.translationService.translate('addressCard.shipTo'),
            this.translationService.translate('addressCard.phoneNumber'),
            this.translationService.translate('addressCard.mobileNumber'),
        ]).pipe(map(([textTitle, textPhone, textMobile]) => deliveryAddressCard(textTitle, textPhone, textMobile, deliveryAddress, countryName)));
    }
    getDeliveryModeCard(deliveryMode) {
        return combineLatest([
            this.translationService.translate('checkoutMode.deliveryMethod'),
        ]).pipe(map(([textTitle]) => deliveryModeCard(textTitle, deliveryMode)));
    }
    ngOnDestroy() {
        this.subscription?.unsubscribe();
    }
}
OrderConfirmationShippingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderConfirmationShippingComponent, deps: [{ token: i1.OrderFacade }, { token: i2.TranslationService }, { token: i0.ChangeDetectorRef }, { token: i3.OutletContextData, optional: true }], target: i0.ɵɵFactoryTarget.Component });
OrderConfirmationShippingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: OrderConfirmationShippingComponent, selector: "cx-order-confirmation-shipping", inputs: { showItemList: "showItemList" }, ngImport: i0, template: "<div class=\"cx-order-items\" *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!showItemList || entries?.length > 0\">\n    <h2 class=\"cx-review-header\">\n      {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n    </h2>\n\n    <div class=\"cx-review-summary cx-review-shipping-summary\">\n      <!-- DELIVERY ADDRESS SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            [content]=\"getDeliveryAddressCard(order.deliveryAddress) | async\"\n          ></cx-card>\n        </div>\n      </div>\n\n      <!-- DELIVERY MODE SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            [content]=\"getDeliveryModeCard(order.deliveryMode) | async\"\n          ></cx-card>\n        </div>\n      </div>\n    </div>\n\n    <!-- CART ITEM SECTION -->\n    <div *ngIf=\"showItemList\" class=\"cx-review-cart-item\">\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</div>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "directive", type: i3.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer", "cxComponentRef"], outputs: ["loaded", "cxComponentRefChange"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: OrderConfirmationShippingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-order-confirmation-shipping', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cx-order-items\" *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"!showItemList || entries?.length > 0\">\n    <h2 class=\"cx-review-header\">\n      {{ 'checkoutMode.deliveryEntries' | cxTranslate }}\n    </h2>\n\n    <div class=\"cx-review-summary cx-review-shipping-summary\">\n      <!-- DELIVERY ADDRESS SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            [content]=\"getDeliveryAddressCard(order.deliveryAddress) | async\"\n          ></cx-card>\n        </div>\n      </div>\n\n      <!-- DELIVERY MODE SECTION -->\n      <div class=\"cx-review-summary-card-container\">\n        <div class=\"cx-review-summary-card cx-review-card-address\">\n          <cx-card\n            [content]=\"getDeliveryModeCard(order.deliveryMode) | async\"\n          ></cx-card>\n        </div>\n      </div>\n    </div>\n\n    <!-- CART ITEM SECTION -->\n    <div *ngIf=\"showItemList\" class=\"cx-review-cart-item\">\n      <ng-template\n        [cxOutlet]=\"cartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          items: entries,\n          readonly: true\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.OrderFacade }, { type: i2.TranslationService }, { type: i0.ChangeDetectorRef }, { type: i3.OutletContextData, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { showItemList: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,