/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, ChangeDetectionStrategy, Input, inject, } from '@angular/core';
import { MyAccountV2OrderConsignmentsService } from '../../../order-details';
import { OrderCriticalStatus } from '../my-account-v2-order-history.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/router";
import * as i3 from "@spartacus/storefront";
import * as i4 from "../consignment-entries/my-account-v2-consignment-entries.component";
import * as i5 from "@spartacus/core";
export class MyAccountV2OrderConsolidatedInformationComponent {
    constructor() {
        this.orderConsignmentsService = inject(MyAccountV2OrderConsignmentsService);
        this.criticalStatuses = Object.values(OrderCriticalStatus);
        this.IMAGE_COUNT = 4; //showing fixed no.of images, without using carousel
    }
    getConsignmentsCount(consignments) {
        let count = 0;
        if (consignments) {
            for (const consignment of consignments) {
                if (consignment.entries) {
                    count = count + consignment.entries.length;
                }
            }
        }
        return count;
    }
    getOrderEntriesCount(orderEntries) {
        return orderEntries?.length ?? 0;
    }
    isStatusCritical(status) {
        return this.criticalStatuses.includes(status.toUpperCase());
    }
    getPickupConsignments(consignments) {
        const orderDetail = {};
        orderDetail.consignments = consignments;
        return (this.orderConsignmentsService.getGroupedConsignments(orderDetail, true) ??
            []);
    }
    getDeliveryConsignments(consignments) {
        const orderDetail = {};
        orderDetail.consignments = consignments;
        return (this.orderConsignmentsService.getGroupedConsignments(orderDetail, false) ?? []);
    }
    getDeliveryUnconsignedEntries(unconsignedEntries) {
        const orderDetail = {};
        orderDetail.unconsignedEntries = unconsignedEntries;
        return (this.orderConsignmentsService.getUnconsignedEntries(orderDetail, false) ??
            []);
    }
    getPickupUnconsignedEntries(unconsignedEntries) {
        const orderDetail = {};
        orderDetail.unconsignedEntries = unconsignedEntries;
        return (this.orderConsignmentsService.getUnconsignedEntries(orderDetail, true) ??
            []);
    }
    getProductImages(entries) {
        const images = [];
        let index = 0;
        for (const item of entries) {
            if (item.product?.images) {
                if (index >= this.IMAGE_COUNT) {
                    break;
                }
                index++;
                images.push(item.product?.images);
            }
        }
        return images;
    }
}
MyAccountV2OrderConsolidatedInformationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: MyAccountV2OrderConsolidatedInformationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
MyAccountV2OrderConsolidatedInformationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: MyAccountV2OrderConsolidatedInformationComponent, selector: "cx-my-account-v2-order-consolidated-information", inputs: { order: "order" }, ngImport: i0, template: "<div class=\"cx-consolidated-order-info\" *ngIf=\"order\">\n  <div class=\"cx-order-info\">\n    <!-- pickup consigned entries \n  eg: To Be Picked Up - 3 Items\n  -->\n    <div\n      *ngIf=\"\n        getConsignmentsCount(getPickupConsignments(order.consignments ?? [])) >\n        0\n      \"\n    >\n      <div class=\"cx-order-status\">\n        {{\n          'myAccountV2OrderHistory.deliveryPointOfServiceDetails.itemsToBePickUp'\n            | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getConsignmentsCount(\n                getPickupConsignments(order.consignments ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n      <cx-my-account-v2-consignment-entries\n        [orderCode]=\"order.code ?? ''\"\n        [consignments]=\"getPickupConsignments(order.consignments ?? [])\"\n      ></cx-my-account-v2-consignment-entries>\n    </div>\n\n    <!-- delivery consigned entries\n  eg: To Be Shipped - 6 Items\n  -->\n    <div\n      *ngIf=\"\n        getConsignmentsCount(\n          getDeliveryConsignments(order.consignments ?? [])\n        ) > 0\n      \"\n    >\n      <!--heading taken from feature-libs/order/components/order-confirmation/order-confirmation-shipping/order-confirmation-shipping.component.html-->\n      <!--instead of [cxOutlet]=\"OrderOutlets.CONSIGNMENT_DELIVERY_INFO\"-->\n      <div class=\"cx-order-status\">\n        {{\n          'myAccountV2OrderHistory.checkoutMode.deliveryEntries' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getConsignmentsCount(\n                getDeliveryConsignments(order.consignments ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n      <cx-my-account-v2-consignment-entries\n        [orderCode]=\"order.code ?? ''\"\n        [consignments]=\"getDeliveryConsignments(order.consignments ?? [])\"\n      ></cx-my-account-v2-consignment-entries>\n    </div>\n\n    <!-- unconsigned entries \n  eg: Some_Status - 1 Item\n  -->\n    <div *ngIf=\"getOrderEntriesCount(order.unconsignedEntries) > 0\">\n      <div *ngIf=\"order.statusDisplay\">\n        <div\n          class=\"cx-order-status-critical\"\n          *ngIf=\"isStatusCritical(order.statusDisplay); else nonCritical\"\n        >\n          {{\n            'orderDetails.statusDisplay_' + order.statusDisplay | cxTranslate\n          }}\n          -\n          <ng-container\n            *ngTemplateOutlet=\"\n              showManyItems;\n              context: { count: getOrderEntriesCount(order.unconsignedEntries) }\n            \"\n          ></ng-container>\n        </div>\n        <ng-template #nonCritical>\n          <div class=\"cx-order-status\">\n            {{\n              'orderDetails.statusDisplay_' + order.statusDisplay | cxTranslate\n            }}\n            -\n            <ng-container\n              *ngTemplateOutlet=\"\n                showManyItems;\n                context: {\n                  count: getOrderEntriesCount(order.unconsignedEntries)\n                }\n              \"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </div>\n\n      <!-- delivery unconsigned entries \n      eg: To Be Shipped - 6 Items //showing this is in extra information format\n    -->\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"\n          getOrderEntriesCount(\n            getDeliveryUnconsignedEntries(order.unconsignedEntries ?? [])\n          ) > 0\n        \"\n      >\n        {{\n          'myAccountV2OrderHistory.checkoutMode.deliveryEntries' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getOrderEntriesCount(\n                getDeliveryUnconsignedEntries(order.unconsignedEntries ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n\n      <!-- pickup unconsigned entries, b2b does not have pickup items\n      eg: To Be Picked Up - 7 Items //showing this is as an extra information format\n    -->\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"\n          getOrderEntriesCount(\n            getPickupUnconsignedEntries(order.unconsignedEntries ?? [])\n          ) > 0\n        \"\n      >\n        {{\n          'myAccountV2OrderHistory.checkoutPickupInStore.heading' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getOrderEntriesCount(\n                getPickupUnconsignedEntries(order.unconsignedEntries ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n    </div>\n\n    <!--return request details\n  eg: Returned: 2 Items\n      Return Processed: 15, September, 2022\n  -->\n    <div *ngFor=\"let returnRequest of order.returnRequests\">\n      <div class=\"cx-order-status-critical\">\n        {{ 'returnRequestList.returnRequestId' | cxTranslate }}\n        <a\n          *ngIf=\"returnRequest.rma; else showReturnCode\"\n          [routerLink]=\"\n            {\n              cxRoute: 'returnRequestDetails',\n              params: returnRequest\n            } | cxUrl\n          \"\n          class=\"cx-order-status-critical-link\"\n        >\n          {{ returnRequest.rma }}</a\n        >\n      </div>\n      <ng-template #showReturnCode>\n        {{ returnRequest.code }}\n      </ng-template>\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"returnRequest.creationTime as creationTime\"\n      >\n        {{\n          'myAccountV2OrderHistory.returnProcessed'\n            | cxTranslate: { param: creationTime | cxDate: 'd, MMMM, yyyy' }\n        }}\n      </div>\n    </div>\n  </div>\n  <div class=\"cx-order-images-container\">\n    <ng-container *ngIf=\"order.entries\">\n      <ng-container *ngFor=\"let item of getProductImages(order.entries)\">\n        <cx-media\n          [container]=\"item.PRIMARY\"\n          class=\"cx-order-img\"\n          format=\"thumbnail\"\n          role=\"presentation\"\n        ></cx-media>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #showManyItems let-count=\"count\">\n  <ng-container *ngIf=\"count > 1; else showOneItem\">\n    {{ 'myAccountV2OrderHistory.items' | cxTranslate: { param: count } }}\n  </ng-container>\n</ng-template>\n<ng-template #showOneItem>\n  {{ 'myAccountV2OrderHistory.item' | cxTranslate: { param: 1 } }}\n</ng-template>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i3.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "component", type: i4.MyAccountV2ConsignmentEntriesComponent, selector: "cx-my-account-v2-consignment-entries", inputs: ["consignments", "orderCode"] }, { kind: "pipe", type: i5.UrlPipe, name: "cxUrl" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i5.CxDatePipe, name: "cxDate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: MyAccountV2OrderConsolidatedInformationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-my-account-v2-order-consolidated-information', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cx-consolidated-order-info\" *ngIf=\"order\">\n  <div class=\"cx-order-info\">\n    <!-- pickup consigned entries \n  eg: To Be Picked Up - 3 Items\n  -->\n    <div\n      *ngIf=\"\n        getConsignmentsCount(getPickupConsignments(order.consignments ?? [])) >\n        0\n      \"\n    >\n      <div class=\"cx-order-status\">\n        {{\n          'myAccountV2OrderHistory.deliveryPointOfServiceDetails.itemsToBePickUp'\n            | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getConsignmentsCount(\n                getPickupConsignments(order.consignments ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n      <cx-my-account-v2-consignment-entries\n        [orderCode]=\"order.code ?? ''\"\n        [consignments]=\"getPickupConsignments(order.consignments ?? [])\"\n      ></cx-my-account-v2-consignment-entries>\n    </div>\n\n    <!-- delivery consigned entries\n  eg: To Be Shipped - 6 Items\n  -->\n    <div\n      *ngIf=\"\n        getConsignmentsCount(\n          getDeliveryConsignments(order.consignments ?? [])\n        ) > 0\n      \"\n    >\n      <!--heading taken from feature-libs/order/components/order-confirmation/order-confirmation-shipping/order-confirmation-shipping.component.html-->\n      <!--instead of [cxOutlet]=\"OrderOutlets.CONSIGNMENT_DELIVERY_INFO\"-->\n      <div class=\"cx-order-status\">\n        {{\n          'myAccountV2OrderHistory.checkoutMode.deliveryEntries' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getConsignmentsCount(\n                getDeliveryConsignments(order.consignments ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n      <cx-my-account-v2-consignment-entries\n        [orderCode]=\"order.code ?? ''\"\n        [consignments]=\"getDeliveryConsignments(order.consignments ?? [])\"\n      ></cx-my-account-v2-consignment-entries>\n    </div>\n\n    <!-- unconsigned entries \n  eg: Some_Status - 1 Item\n  -->\n    <div *ngIf=\"getOrderEntriesCount(order.unconsignedEntries) > 0\">\n      <div *ngIf=\"order.statusDisplay\">\n        <div\n          class=\"cx-order-status-critical\"\n          *ngIf=\"isStatusCritical(order.statusDisplay); else nonCritical\"\n        >\n          {{\n            'orderDetails.statusDisplay_' + order.statusDisplay | cxTranslate\n          }}\n          -\n          <ng-container\n            *ngTemplateOutlet=\"\n              showManyItems;\n              context: { count: getOrderEntriesCount(order.unconsignedEntries) }\n            \"\n          ></ng-container>\n        </div>\n        <ng-template #nonCritical>\n          <div class=\"cx-order-status\">\n            {{\n              'orderDetails.statusDisplay_' + order.statusDisplay | cxTranslate\n            }}\n            -\n            <ng-container\n              *ngTemplateOutlet=\"\n                showManyItems;\n                context: {\n                  count: getOrderEntriesCount(order.unconsignedEntries)\n                }\n              \"\n            ></ng-container>\n          </div>\n        </ng-template>\n      </div>\n\n      <!-- delivery unconsigned entries \n      eg: To Be Shipped - 6 Items //showing this is in extra information format\n    -->\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"\n          getOrderEntriesCount(\n            getDeliveryUnconsignedEntries(order.unconsignedEntries ?? [])\n          ) > 0\n        \"\n      >\n        {{\n          'myAccountV2OrderHistory.checkoutMode.deliveryEntries' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getOrderEntriesCount(\n                getDeliveryUnconsignedEntries(order.unconsignedEntries ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n\n      <!-- pickup unconsigned entries, b2b does not have pickup items\n      eg: To Be Picked Up - 7 Items //showing this is as an extra information format\n    -->\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"\n          getOrderEntriesCount(\n            getPickupUnconsignedEntries(order.unconsignedEntries ?? [])\n          ) > 0\n        \"\n      >\n        {{\n          'myAccountV2OrderHistory.checkoutPickupInStore.heading' | cxTranslate\n        }}\n        <ng-container\n          *ngTemplateOutlet=\"\n            showManyItems;\n            context: {\n              count: getOrderEntriesCount(\n                getPickupUnconsignedEntries(order.unconsignedEntries ?? [])\n              )\n            }\n          \"\n        ></ng-container>\n      </div>\n    </div>\n\n    <!--return request details\n  eg: Returned: 2 Items\n      Return Processed: 15, September, 2022\n  -->\n    <div *ngFor=\"let returnRequest of order.returnRequests\">\n      <div class=\"cx-order-status-critical\">\n        {{ 'returnRequestList.returnRequestId' | cxTranslate }}\n        <a\n          *ngIf=\"returnRequest.rma; else showReturnCode\"\n          [routerLink]=\"\n            {\n              cxRoute: 'returnRequestDetails',\n              params: returnRequest\n            } | cxUrl\n          \"\n          class=\"cx-order-status-critical-link\"\n        >\n          {{ returnRequest.rma }}</a\n        >\n      </div>\n      <ng-template #showReturnCode>\n        {{ returnRequest.code }}\n      </ng-template>\n      <div\n        class=\"cx-consignment-info\"\n        *ngIf=\"returnRequest.creationTime as creationTime\"\n      >\n        {{\n          'myAccountV2OrderHistory.returnProcessed'\n            | cxTranslate: { param: creationTime | cxDate: 'd, MMMM, yyyy' }\n        }}\n      </div>\n    </div>\n  </div>\n  <div class=\"cx-order-images-container\">\n    <ng-container *ngIf=\"order.entries\">\n      <ng-container *ngFor=\"let item of getProductImages(order.entries)\">\n        <cx-media\n          [container]=\"item.PRIMARY\"\n          class=\"cx-order-img\"\n          format=\"thumbnail\"\n          role=\"presentation\"\n        ></cx-media>\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n\n<ng-template #showManyItems let-count=\"count\">\n  <ng-container *ngIf=\"count > 1; else showOneItem\">\n    {{ 'myAccountV2OrderHistory.items' | cxTranslate: { param: count } }}\n  </ng-container>\n</ng-template>\n<ng-template #showOneItem>\n  {{ 'myAccountV2OrderHistory.item' | cxTranslate: { param: 1 } }}\n</ng-template>\n" }]
        }], propDecorators: { order: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,