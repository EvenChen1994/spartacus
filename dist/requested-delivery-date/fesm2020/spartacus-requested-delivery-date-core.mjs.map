{"version":3,"file":"spartacus-requested-delivery-date-core.mjs","sources":["../../../feature-libs/requested-delivery-date/core/connectors/requested-delivery-date.adapter.ts","../../../feature-libs/requested-delivery-date/core/connectors/requested-delivery-date.connector.ts","../../../feature-libs/requested-delivery-date/core/connectors/index.ts","../../../feature-libs/requested-delivery-date/core/http-interceptors/bad-request/requested-delivery-date-badrequest.handler.ts","../../../feature-libs/requested-delivery-date/core/services/requested-delivery-date.service.ts","../../../feature-libs/requested-delivery-date/core/services/index.ts","../../../feature-libs/requested-delivery-date/core/requested-delivery-date-core.module.ts","../../../feature-libs/requested-delivery-date/core/public_api.ts","../../../feature-libs/requested-delivery-date/core/spartacus-requested-delivery-date-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class RequestedDeliveryDateAdapter {\n  /**\n   * Abstract method used to set the requested delivery date for a cart entry\n   */\n  abstract setRequestedDeliveryDate(\n    userId: string,\n    cartId: string,\n    requestedDate: string\n  ): Observable<{}>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RequestedDeliveryDateAdapter } from './requested-delivery-date.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestedDeliveryDateConnector {\n  constructor(protected adapter: RequestedDeliveryDateAdapter) {}\n\n  public setRequestedDeliveryDate(\n    userId: string,\n    cartId: string,\n    requestedDate: string\n  ): Observable<{}> {\n    return this.adapter.setRequestedDeliveryDate(userId, cartId, requestedDate);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './requested-delivery-date.adapter';\nexport * from './requested-delivery-date.connector';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RequestedDeliveryDateBadRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_REQUEST;\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return (\n      super.hasMatch(errorResponse) && this.getErrors(errorResponse)?.length > 0\n    );\n  }\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse) {\n    if (request && this.getErrors(response)?.length) {\n      this.globalMessageService.add(\n        { key: 'requestedDeliveryDate.errorMessage' },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors).filter(\n      (error: any) =>\n        error?.type === 'ValidationError' &&\n        error?.message === 'checkout.multi.requestedretrievaldatevalid.error'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RequestedDeliveryDateFacade } from '@spartacus/requested-delivery-date/root';\nimport { Observable } from 'rxjs';\nimport { RequestedDeliveryDateConnector } from '../connectors/requested-delivery-date.connector';\n\n@Injectable()\nexport class RequestedDeliveryDateService\n  implements RequestedDeliveryDateFacade\n{\n  /**\n   * Set requested delivery date\n   */\n  setRequestedDeliveryDate(\n    userId: string,\n    cartId: string,\n    requestedDate: string\n  ): Observable<{}> {\n    return this.requestedDeliveryDateConnector.setRequestedDeliveryDate(\n      userId,\n      cartId,\n      requestedDate\n    );\n  }\n\n  constructor(\n    protected requestedDeliveryDateConnector: RequestedDeliveryDateConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './requested-delivery-date.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { HttpErrorHandler } from '@spartacus/core';\nimport { RequestedDeliveryDateFacade } from '@spartacus/requested-delivery-date/root';\nimport { RequestedDeliveryDateConnector } from './connectors/requested-delivery-date.connector';\nimport { RequestedDeliveryDateBadRequestHandler } from './http-interceptors/bad-request/requested-delivery-date-badrequest.handler';\nimport { RequestedDeliveryDateService } from './services';\n\n@NgModule({\n  imports: [],\n  providers: [\n    RequestedDeliveryDateService,\n    {\n      provide: RequestedDeliveryDateFacade,\n      useExisting: RequestedDeliveryDateService,\n    },\n    {\n      provide: HttpErrorHandler,\n      useExisting: RequestedDeliveryDateBadRequestHandler,\n      multi: true,\n    },\n    RequestedDeliveryDateConnector,\n  ],\n})\nexport class RequestedDeliveryDateCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors';\nexport * from './requested-delivery-date-core.module';\nexport * from './services/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.RequestedDeliveryDateAdapter","i1.RequestedDeliveryDateConnector"],"mappings":"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"}