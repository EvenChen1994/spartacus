{"version":3,"file":"spartacus-customer-ticketing-core.mjs","sources":["../../../feature-libs/customer-ticketing/core/connectors/customer-ticketing.adapter.ts","../../../feature-libs/customer-ticketing/core/connectors/customer-ticketing.connector.ts","../../../feature-libs/customer-ticketing/core/connectors/converters.ts","../../../feature-libs/customer-ticketing/core/connectors/index.ts","../../../feature-libs/customer-ticketing/core/facade/customer-ticketing.service.ts","../../../feature-libs/customer-ticketing/core/facade/facade-providers.ts","../../../feature-libs/customer-ticketing/core/utils/utils.ts","../../../feature-libs/customer-ticketing/core/http-interceptors/handlers/not-found-ticket-request.handler.ts","../../../feature-libs/customer-ticketing/core/services/customer-ticketing-page-meta.resolver.ts","../../../feature-libs/customer-ticketing/core/customer-ticketing-core.module.ts","../../../feature-libs/customer-ticketing/core/facade/index.ts","../../../feature-libs/customer-ticketing/core/services/index.ts","../../../feature-libs/customer-ticketing/core/public_api.ts","../../../feature-libs/customer-ticketing/core/spartacus-customer-ticketing-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AssociatedObject,\n  Category,\n  TicketDetails,\n  TicketEvent,\n  TicketList,\n  TicketStarter,\n} from '@spartacus/customer-ticketing/root';\nimport { Observable } from 'rxjs';\n\nexport abstract class CustomerTicketingAdapter {\n  abstract getTicket(\n    customerId: string,\n    ticketId: string\n  ): Observable<TicketDetails>;\n\n  abstract getTickets(\n    customerId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<TicketList>;\n\n  abstract getTicketCategories(): Observable<Category[]>;\n\n  abstract getTicketAssociatedObjects(\n    customerId: string\n  ): Observable<AssociatedObject[]>;\n\n  abstract createTicket(\n    customerId: string,\n    ticket: TicketStarter\n  ): Observable<TicketStarter>;\n\n  abstract createTicketEvent(\n    customerId: string,\n    ticketId: string,\n    ticketEvent: TicketEvent\n  ): Observable<TicketEvent>;\n\n  abstract uploadAttachment(\n    customerId: string,\n    ticketId: string,\n    eventCode: string,\n    file: File\n  ): Observable<unknown>;\n\n  abstract downloadAttachment(\n    customerId: string,\n    ticketId: string,\n    eventCode: string,\n    attachmentId: string\n  ): Observable<unknown>;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  AssociatedObject,\n  Category,\n  TicketDetails,\n  TicketEvent,\n  TicketList,\n  TicketStarter,\n} from '@spartacus/customer-ticketing/root';\nimport { Observable } from 'rxjs';\nimport { CustomerTicketingAdapter } from './customer-ticketing.adapter';\n\n@Injectable()\nexport class CustomerTicketingConnector {\n  constructor(protected adapter: CustomerTicketingAdapter) {}\n\n  public getTicket(\n    customerId: string,\n    ticketId: string\n  ): Observable<TicketDetails> {\n    return this.adapter.getTicket(customerId, ticketId);\n  }\n\n  public getTickets(\n    customerId: string,\n    pageSize?: number,\n    currentPage?: number,\n    sort?: string\n  ): Observable<TicketList> {\n    return this.adapter.getTickets(customerId, pageSize, currentPage, sort);\n  }\n\n  public getTicketCategories(): Observable<Category[]> {\n    return this.adapter.getTicketCategories();\n  }\n\n  public getTicketAssociatedObjects(\n    customerId: string\n  ): Observable<AssociatedObject[]> {\n    return this.adapter.getTicketAssociatedObjects(customerId);\n  }\n\n  public createTicket(\n    customerId: string,\n    ticket: TicketStarter\n  ): Observable<TicketStarter> {\n    return this.adapter.createTicket(customerId, ticket);\n  }\n\n  public createTicketEvent(\n    customerId: string,\n    ticketId: string,\n    ticketEvent: TicketEvent\n  ): Observable<TicketEvent> {\n    return this.adapter.createTicketEvent(customerId, ticketId, ticketEvent);\n  }\n\n  public uploadAttachment(\n    customerId: string,\n    ticketId: string,\n    eventCode: string,\n    file: File\n  ): Observable<unknown> {\n    return this.adapter.uploadAttachment(customerId, ticketId, eventCode, file);\n  }\n\n  public downloadAttachment(\n    customerId: string,\n    ticketId: string,\n    eventCode: string,\n    attachmentId: string\n  ): Observable<unknown> {\n    return this.adapter.downloadAttachment(\n      customerId,\n      ticketId,\n      eventCode,\n      attachmentId\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport {\n  AssociatedObject,\n  Category,\n  TicketDetails,\n  TicketEvent,\n  TicketList,\n  TicketStarter,\n} from '@spartacus/customer-ticketing/root';\n\nexport const CUSTOMER_TICKETING_DETAILS_NORMALIZER = new InjectionToken<\n  Converter<any, TicketDetails>\n>('CustomerTicketingDetailsNormalizer');\n\nexport const CUSTOMER_TICKETING_EVENT_NORMALIZER = new InjectionToken<\n  Converter<any, TicketEvent>\n>('CustomerTicketingEventNormalizer');\n\nexport const CUSTOMER_TICKETING_FILE_NORMALIZER = new InjectionToken<\n  Converter<any, File>\n>('CustomerTicketingFileNormalizer');\n\nexport const CUSTOMER_TICKETING_LIST_NORMALIZER = new InjectionToken<\n  Converter<any, TicketList>\n>('CustomerTicketingListNormalizer');\n\nexport const CUSTOMER_TICKETING_CATEGORY_NORMALIZER = new InjectionToken<\n  Converter<any, Category>\n>('CustomerTicketingCategoryNormalizer');\n\nexport const CUSTOMER_TICKETING_ASSOCIATED_OBJECTS_NORMALIZER =\n  new InjectionToken<Converter<any, AssociatedObject>>(\n    'CustomerTicketingAssociatedObjectsNormalizer'\n  );\n\nexport const CUSTOMER_TICKETING_CREATE_NORMALIZER = new InjectionToken<\n  Converter<any, TicketStarter>\n>('CustomerTicketingCreateNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './customer-ticketing.adapter';\nexport * from './customer-ticketing.connector';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Command,\n  CommandService,\n  CommandStrategy,\n  EventService,\n  HttpErrorModel,\n  Query,\n  QueryNotifier,\n  QueryService,\n  QueryState,\n  RoutingService,\n  UserIdService,\n} from '@spartacus/core';\nimport {\n  AssociatedObject,\n  Category,\n  CustomerTicketingFacade,\n  GetTicketAssociatedObjectsQueryReloadEvent,\n  GetTicketAssociatedObjectsQueryResetEvent,\n  GetTicketCategoryQueryReloadEvent,\n  GetTicketCategoryQueryResetEvent,\n  GetTicketQueryReloadEvent,\n  GetTicketQueryResetEvent,\n  GetTicketsQueryReloadEvents,\n  GetTicketsQueryResetEvents,\n  NewMessageEvent,\n  STATUS,\n  TicketClosedEvent,\n  TicketCreatedEvent,\n  TicketDetails,\n  TicketEvent,\n  TicketList,\n  TicketReopenedEvent,\n  TicketStarter,\n  UploadAttachmentSuccessEvent,\n} from '@spartacus/customer-ticketing/root';\nimport { combineLatest, Observable, of, throwError } from 'rxjs';\nimport {\n  concatMap,\n  distinctUntilChanged,\n  map,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { CustomerTicketingConnector } from '../connectors/customer-ticketing.connector';\n\n@Injectable()\nexport class CustomerTicketingService implements CustomerTicketingFacade {\n  protected getTicketCategoriesQueryReloadEvents(): QueryNotifier[] {\n    return [GetTicketCategoryQueryReloadEvent];\n  }\n  protected getTicketCategoriesQueryResetEvents(): QueryNotifier[] {\n    return [GetTicketCategoryQueryResetEvent];\n  }\n  protected getTicketAssociatedObjectsQueryReloadEvents(): QueryNotifier[] {\n    return [GetTicketAssociatedObjectsQueryReloadEvent];\n  }\n  protected getTicketAssociatedObjectsQueryResetEvents(): QueryNotifier[] {\n    return [GetTicketAssociatedObjectsQueryResetEvent];\n  }\n\n  protected getTicketQueryReloadEvents(): QueryNotifier[] {\n    return [GetTicketQueryReloadEvent];\n  }\n\n  protected getTicketQueryResetEvents(): QueryNotifier[] {\n    return [GetTicketQueryResetEvent];\n  }\n\n  protected getTicketsQueryReloadEvents(): QueryNotifier[] {\n    return [GetTicketsQueryReloadEvents];\n  }\n\n  protected getTicketsQueryResetEvents(): QueryNotifier[] {\n    return [GetTicketsQueryResetEvents];\n  }\n\n  protected createTicketCommand: Command<TicketStarter, TicketDetails> =\n    this.commandService.create<TicketStarter, TicketDetails>(\n      (ticketStarted) =>\n        this.customerTicketingPreConditions().pipe(\n          switchMap(([customerId]) =>\n            this.customerTicketingConnector.createTicket(\n              customerId,\n              ticketStarted\n            )\n          ),\n          tap(() => {\n            this.eventService.dispatch({}, TicketCreatedEvent);\n          })\n        ),\n      {\n        strategy: CommandStrategy.Queue,\n      }\n    );\n\n  protected createTicketEventCommand: Command<\n    { ticketEvent: TicketEvent; containsAttachment?: boolean },\n    TicketEvent\n  > = this.commandService.create<\n    { ticketEvent: TicketEvent; containsAttachment?: boolean },\n    TicketEvent\n  >(\n    (payload) =>\n      this.customerTicketingPreConditions().pipe(\n        switchMap(([customerId, ticketId]) =>\n          this.customerTicketingConnector\n            .createTicketEvent(customerId, ticketId, payload.ticketEvent)\n            .pipe(\n              tap(() => {\n                if (payload.ticketEvent.toStatus?.id === STATUS.CLOSED) {\n                  this.eventService.dispatch({}, TicketClosedEvent);\n                } else if (!payload.containsAttachment) {\n                  if (\n                    payload.ticketEvent.toStatus?.id === STATUS.OPEN ||\n                    payload.ticketEvent.toStatus?.id === STATUS.INPROCESS\n                  ) {\n                    this.eventService.dispatch({}, TicketReopenedEvent);\n                  } else {\n                    this.eventService.dispatch({}, NewMessageEvent);\n                  }\n                }\n              })\n            )\n        )\n      ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  protected uploadAttachmentCommand: Command<{\n    file: File;\n    eventCode: string;\n    ticketId?: string;\n  }> = this.commandService.create<{\n    file: File;\n    eventCode: string;\n    ticketId?: string;\n  }>(\n    (payload) =>\n      this.customerTicketingPreConditions().pipe(\n        switchMap(([customerId, ticketId]) =>\n          this.customerTicketingConnector\n            .uploadAttachment(\n              customerId,\n              payload.ticketId ?? ticketId,\n              payload.eventCode,\n              payload.file\n            )\n            .pipe(\n              tap(() =>\n                this.eventService.dispatch({}, UploadAttachmentSuccessEvent)\n              )\n            )\n        )\n      ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  protected downloadAttachmentCommand: Command<{\n    eventCode: string;\n    attachmentId: string;\n  }> = this.commandService.create<{ eventCode: string; attachmentId: string }>(\n    (payload) =>\n      this.customerTicketingPreConditions().pipe(\n        switchMap(([customerId, ticketId]) =>\n          this.customerTicketingConnector.downloadAttachment(\n            customerId,\n            ticketId,\n            payload.eventCode,\n            payload.attachmentId\n          )\n        )\n      ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  protected getTicketQuery$: Query<TicketDetails | undefined> =\n    this.queryService.create<TicketDetails | undefined>(\n      () =>\n        this.customerTicketingPreConditions().pipe(\n          switchMap(([customerId, ticketId]) =>\n            this.customerTicketingConnector.getTicket(customerId, ticketId)\n          )\n        ),\n      {\n        reloadOn: this.getTicketQueryReloadEvents(),\n        resetOn: this.getTicketQueryResetEvents(),\n      }\n    );\n\n  protected getTicketsQuery$(\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Query<TicketList | undefined> {\n    return this.queryService.create<TicketList | undefined>(\n      () =>\n        this.customerTicketingListPreConditions().pipe(\n          switchMap((customerId) =>\n            this.customerTicketingConnector.getTickets(\n              customerId,\n              pageSize,\n              currentPage,\n              sort\n            )\n          )\n        ),\n      {\n        reloadOn: this.getTicketsQueryReloadEvents(),\n        resetOn: this.getTicketsQueryResetEvents(),\n      }\n    );\n  }\n\n  protected getTicketCategoriesQuery: Query<Category[]> =\n    this.queryService.create(\n      () => this.customerTicketingConnector.getTicketCategories(),\n      {\n        reloadOn: this.getTicketCategoriesQueryReloadEvents(),\n        resetOn: this.getTicketCategoriesQueryResetEvents(),\n      }\n    );\n\n  protected getTicketAssociatedObjectsQuery: Query<AssociatedObject[]> =\n    this.queryService.create(\n      () =>\n        this.customerTicketingPreConditions().pipe(\n          switchMap(([customerId]) =>\n            this.customerTicketingConnector.getTicketAssociatedObjects(\n              customerId\n            )\n          )\n        ),\n      {\n        reloadOn: this.getTicketAssociatedObjectsQueryReloadEvents(),\n        resetOn: this.getTicketAssociatedObjectsQueryResetEvents(),\n      }\n    );\n\n  protected customerTicketingPreConditions(): Observable<[string, string]> {\n    return combineLatest([\n      this.userIdService.getUserId(),\n      this.routingService.getParams().pipe(\n        map((params) => params.ticketCode),\n        distinctUntilChanged()\n      ),\n    ]).pipe(\n      take(1),\n      map(([userId, ticketId]) => {\n        if (!userId) {\n          throw new Error('Customer ticketing pre conditions not met');\n        }\n        return [userId, ticketId];\n      })\n    );\n  }\n\n  protected customerTicketingListPreConditions(): Observable<string> {\n    return this.userIdService.getUserId().pipe(\n      take(1),\n      map((userId) => {\n        if (!userId) {\n          throw new Error('Customer ticketing list pre conditions not met');\n        }\n        return userId;\n      })\n    );\n  }\n\n  constructor(\n    protected queryService: QueryService,\n    protected commandService: CommandService,\n    protected userIdService: UserIdService,\n    protected customerTicketingConnector: CustomerTicketingConnector,\n    protected routingService: RoutingService,\n    protected eventService: EventService\n  ) {}\n\n  getTicketAssociatedObjectsState(): Observable<\n    QueryState<AssociatedObject[]>\n  > {\n    return this.getTicketAssociatedObjectsQuery.getState();\n  }\n  getTicketAssociatedObjects(): Observable<AssociatedObject[]> {\n    return this.getTicketAssociatedObjectsState().pipe(\n      concatMap((state) =>\n        state?.error ? throwError(state.error as HttpErrorModel) : of(state)\n      ),\n      map((state) => state.data ?? [])\n    );\n  }\n\n  getTicketCategoriesState(): Observable<QueryState<Category[]>> {\n    return this.getTicketCategoriesQuery.getState();\n  }\n\n  getTicketCategories(): Observable<Category[]> {\n    return this.getTicketCategoriesState().pipe(\n      map((state) => state.data ?? [])\n    );\n  }\n\n  getTicketState(): Observable<QueryState<TicketDetails | undefined>> {\n    return this.getTicketQuery$.getState();\n  }\n\n  getTicket(): Observable<TicketDetails | undefined> {\n    return this.getTicketState().pipe(map((state) => state.data));\n  }\n\n  createTicket(\n    ticketStarted: TicketStarter\n  ): Observable<TicketStarter | TicketDetails> {\n    return this.createTicketCommand.execute(ticketStarted);\n  }\n\n  getTicketsState(\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<QueryState<TicketList | undefined>> {\n    return this.getTicketsQuery$(pageSize, currentPage, sort).getState();\n  }\n\n  getTickets(\n    pageSize: number,\n    currentPage: number,\n    sort: string\n  ): Observable<TicketList | undefined> {\n    return this.getTicketsState(pageSize, currentPage, sort).pipe(\n      map((state) => state.data)\n    );\n  }\n\n  createTicketEvent(\n    ticketEvent: TicketEvent,\n    containsAttachment = false\n  ): Observable<TicketEvent> {\n    return this.createTicketEventCommand.execute({\n      ticketEvent,\n      containsAttachment,\n    });\n  }\n\n  uploadAttachment(\n    file: File,\n    eventCode: string,\n    ticketId?: string\n  ): Observable<unknown> {\n    return this.uploadAttachmentCommand.execute({ file, eventCode, ticketId });\n  }\n\n  downloadAttachment(\n    eventCode: string,\n    attachmentId: string\n  ): Observable<unknown> {\n    return this.downloadAttachmentCommand.execute({ eventCode, attachmentId });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Provider } from '@angular/core';\nimport { CustomerTicketingFacade } from '@spartacus/customer-ticketing/root';\nimport { CustomerTicketingService } from './customer-ticketing.service';\n\nexport const facadeProviders: Provider[] = [\n  CustomerTicketingService,\n  {\n    provide: CustomerTicketingFacade,\n    useExisting: CustomerTicketingService,\n  },\n];\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ErrorModel,\n  OccHttpErrorType,\n  OccHttpErrorReason,\n} from '@spartacus/core';\n\n/**\n * Check if the returned error is of type notFound.\n */\nexport function isNotFoundError(error: ErrorModel): boolean {\n  return (\n    error.reason === OccHttpErrorReason.NOT_FOUND_ERROR &&\n    error.type === OccHttpErrorType.NOT_FOUND_ERROR\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n  RoutingService,\n  GlobalMessageService,\n  getLastValueSync,\n} from '@spartacus/core';\nimport { isNotFoundError } from '../../utils/utils';\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotFoundTicketRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.NOT_FOUND;\n\n  constructor(\n    protected globalMessageService: GlobalMessageService,\n    protected routingService: RoutingService,\n    @Inject(PLATFORM_ID) protected platformId?: Object\n  ) {\n    super(globalMessageService, platformId);\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return (\n      super.hasMatch(errorResponse) &&\n      this.isCustomerTicketingDetailsRoute() &&\n      this.getErrors(errorResponse).some(isNotFoundError)\n    );\n  }\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse): void {\n    this.handleTicketNotFoundError(request, response);\n  }\n\n  protected isCustomerTicketingDetailsRoute(): boolean {\n    return (\n      getLastValueSync(this.routingService.getRouterState())?.state\n        ?.semanticRoute === 'supportTicketDetails'\n    );\n  }\n\n  protected handleTicketNotFoundError(\n    _request: HttpRequest<any>,\n    response: HttpErrorResponse\n  ): void {\n    this.getErrors(response)\n      .filter((e) => isNotFoundError(e))\n      .forEach(() => {\n        this.routingService.go({ cxRoute: 'supportTickets' });\n        this.globalMessageService.add(\n          { key: 'customerTicketingDetails.ticketNotFound' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      });\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return response.error?.errors || [];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  PageHeadingResolver,\n  BasePageMetaResolver,\n  PageDescriptionResolver,\n  PageMetaResolver,\n  PageRobotsMeta,\n  PageRobotsResolver,\n  PageTitleResolver,\n  PageType,\n  TranslationService,\n  PageBreadcrumbResolver,\n  BreadcrumbMeta,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { CustomerTicketingFacade } from '@spartacus/customer-ticketing/root';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerTicketingPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageHeadingResolver,\n    PageBreadcrumbResolver,\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageRobotsResolver\n{\n  protected readonly CUSTOMER_SERVICE_TRANSLATION_KEY =\n    'customerTicketing.customerService';\n\n  protected readonly CUSTOMER_SERVICE_SEMANTIC_ROUTE = 'supportTickets';\n\n  constructor(\n    protected translationService: TranslationService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected basePageMetaResolver: BasePageMetaResolver,\n    protected customerTicketingFacade: CustomerTicketingFacade,\n    protected translation: TranslationService,\n    protected semanticPath: SemanticPathService\n  ) {\n    super();\n    this.pageType = PageType.CONTENT_PAGE;\n    this.pageUid = 'support-ticket-details';\n  }\n\n  resolveTitle(): Observable<string | undefined> {\n    return this.basePageMetaResolver.resolveTitle();\n  }\n\n  /**\n   * @override\n   * Resolves the page heading for the Customer Ticket Details Page.\n   * The page heading is used in the UI (`<h1>`), where as the page\n   * title is used by the browser and crawlers.\n   */\n  resolveHeading(): Observable<string | undefined> {\n    return this.customerTicketingFacade\n      .getTicket()\n      .pipe(map((ticket) => ticket?.subject || ''));\n  }\n\n  resolveDescription(): Observable<string | undefined> {\n    return this.basePageMetaResolver.resolveDescription();\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.basePageMetaResolver.resolveRobots();\n  }\n\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return combineLatest([\n      this.customerServiceBreadCrumb$,\n      this.basePageMetaResolver.resolveBreadcrumbs(),\n    ]).pipe(\n      map(([customerServiceBreadCrumb, breadcrumbs = []]) => {\n        const [home, ...restBreadcrumbs] = breadcrumbs;\n        return [home, ...customerServiceBreadCrumb, ...restBreadcrumbs];\n      })\n    );\n  }\n\n  protected customerServiceBreadCrumb$: Observable<BreadcrumbMeta[]> =\n    this.translation.translate(this.CUSTOMER_SERVICE_TRANSLATION_KEY).pipe(\n      map((label) => [\n        {\n          label,\n          link: this.semanticPath.get(this.CUSTOMER_SERVICE_SEMANTIC_ROUTE),\n        },\n      ])\n    );\n}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { HttpErrorHandler, PageMetaResolver } from '@spartacus/core';\nimport { CustomerTicketingConnector } from './connectors/customer-ticketing.connector';\nimport { facadeProviders } from './facade/facade-providers';\nimport { NotFoundTicketRequestHandler } from './http-interceptors/handlers/not-found-ticket-request.handler';\nimport { CustomerTicketingPageMetaResolver } from './services/customer-ticketing-page-meta.resolver';\n\n@NgModule({\n  providers: [\n    ...facadeProviders,\n    CustomerTicketingConnector,\n    CustomerTicketingPageMetaResolver,\n    {\n      provide: HttpErrorHandler,\n      useExisting: NotFoundTicketRequestHandler,\n      multi: true,\n    },\n    {\n      provide: PageMetaResolver,\n      useExisting: CustomerTicketingPageMetaResolver,\n      multi: true,\n    },\n  ],\n})\nexport class CustomerTicketingCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './customer-ticketing.service';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './customer-ticketing-page-meta.resolver';\n","/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './customer-ticketing-core.module';\nexport * from './facade/index';\nexport * from './services/index';\nexport * from './utils/utils';\nexport * from './http-interceptors/handlers/not-found-ticket-request.handler';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.CustomerTicketingAdapter","i2.CustomerTicketingConnector"],"mappings":"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"}