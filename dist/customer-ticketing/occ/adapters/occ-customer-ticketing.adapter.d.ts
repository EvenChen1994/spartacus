import { HttpClient } from '@angular/common/http';
import { ConverterService, LoggerService, OccEndpointsService } from '@spartacus/core';
import { CustomerTicketingAdapter } from '@spartacus/customer-ticketing/core';
import { AssociatedObject, Category, TicketDetails, TicketEvent, TicketList, TicketStarter } from '@spartacus/customer-ticketing/root';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class OccCustomerTicketingAdapter implements CustomerTicketingAdapter {
    protected http: HttpClient;
    protected occEndpoints: OccEndpointsService;
    protected converter: ConverterService;
    protected logger: LoggerService;
    constructor(http: HttpClient, occEndpoints: OccEndpointsService, converter: ConverterService);
    getTicketAssociatedObjects(customerId: string): Observable<AssociatedObject[]>;
    protected getTicketAssociatedObjectsEndpoint(customerId: string): string;
    getTicketCategories(): Observable<Category[]>;
    protected getTicketCategoriesEndpoint(): string;
    getTicket(customerId: string, ticketId: string): Observable<TicketDetails>;
    protected getTicketEndpoint(customerId: string, ticketId: string): string;
    createTicket(customerId: string, ticket: TicketStarter): Observable<TicketStarter>;
    protected getCreateTicketEndpoint(customerId: string): string;
    getTickets(customerId: string, pageSize?: number, currentPage?: number, sort?: string): Observable<TicketList>;
    protected getTicketsEndpoint(customerId: string, pageSize?: number, currentPage?: number, sort?: string): string;
    createTicketEvent(customerId: string, ticketId: string, ticketEvent: TicketEvent): Observable<TicketEvent>;
    protected getCreateTicketEventEndpoint(customerId: string, ticketId: string): string;
    uploadAttachment(customerId: string, ticketId: string, eventCode: string, file: File): Observable<unknown>;
    protected getUploadAttachmentEndpoint(customerId: string, ticketId: string, eventCode: string): string;
    downloadAttachment(customerId: string, ticketId: string, eventCode: string, attachmentId: string): Observable<unknown>;
    protected getDownloadAttachmentEndpoint(customerId: string, ticketId: string, eventCode: string, attachmentId: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<OccCustomerTicketingAdapter, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<OccCustomerTicketingAdapter>;
}
