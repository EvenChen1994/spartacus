/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { DATE_FORMAT, GetTicketQueryReloadEvent, } from '@spartacus/customer-ticketing/root';
import { combineLatest, Subscription } from 'rxjs';
import { filter, map, take, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "@spartacus/customer-ticketing/root";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/storefront";
export class CustomerTicketingDetailsComponent {
    constructor(translation, customerTicketingFacade, routingService, eventService) {
        this.translation = translation;
        this.customerTicketingFacade = customerTicketingFacade;
        this.routingService = routingService;
        this.eventService = eventService;
        this.dateFormat = DATE_FORMAT;
        this.subscription = new Subscription();
        this.ticketDetails$ = this.customerTicketingFacade.getTicket();
        this.reloadOnRedirection();
    }
    prepareCardContent(entity, titleTranslation, id) {
        return this.translation.translate(titleTranslation).pipe(filter(() => Boolean(entity)), map((textTitle) => ({
            title: textTitle,
            text: [entity || ''],
            customClass: this.getStatusClass(id?.toUpperCase()),
        })));
    }
    getStatusClass(id) {
        if (id === "OPEN" /* STATUS.OPEN */ || id === "INPROCESS" /* STATUS.INPROCESS */) {
            return "cx-text-green" /* TEXT_COLOR_CLASS.GREEN */;
        }
        else if (id === "CLOSED" /* STATUS.CLOSED */) {
            return "cx-text-grey" /* TEXT_COLOR_CLASS.GREY */;
        }
        return '';
    }
    reloadOnRedirection() {
        this.subscription = combineLatest([
            this.ticketDetails$,
            this.routingService.getParams().pipe(map((params) => params.ticketCode)),
        ])
            .pipe(take(1), tap(([ticket, ticketCode]) => {
            if (ticket && ticketCode !== ticket?.id) {
                this.eventService.dispatch({}, GetTicketQueryReloadEvent);
            }
        }))
            .subscribe();
    }
    ngOnDestroy() {
        this.subscription?.unsubscribe();
    }
}
CustomerTicketingDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingDetailsComponent, deps: [{ token: i1.TranslationService }, { token: i2.CustomerTicketingFacade }, { token: i1.RoutingService }, { token: i1.EventService }], target: i0.ɵɵFactoryTarget.Component });
CustomerTicketingDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: CustomerTicketingDetailsComponent, selector: "cx-customer-ticketing-details", ngImport: i0, template: "<ng-container *ngIf=\"ticketDetails$ | async as ticket; else spinner\">\n  <div class=\"cx-ticket-details\">\n    <div class=\"container\">\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(ticket.id, 'customerTicketing.ticketId') | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              (ticket.createdAt | cxDate: dateFormat) ?? dateFormat,\n              'customerTicketing.createdOn'\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              (ticket.modifiedAt | cxDate: dateFormat) ?? dateFormat,\n              'customerTicketing.changedOn'\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              ticket.status ? ticket.status.name : undefined,\n              'customerTicketing.status',\n              ticket.status ? ticket.status.id : undefined\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #spinner>\n  <cx-spinner></cx-spinner>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "component", type: i4.SpinnerComponent, selector: "cx-spinner" }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.CxDatePipe, name: "cxDate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingDetailsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-customer-ticketing-details', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"ticketDetails$ | async as ticket; else spinner\">\n  <div class=\"cx-ticket-details\">\n    <div class=\"container\">\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(ticket.id, 'customerTicketing.ticketId') | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              (ticket.createdAt | cxDate: dateFormat) ?? dateFormat,\n              'customerTicketing.createdOn'\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              (ticket.modifiedAt | cxDate: dateFormat) ?? dateFormat,\n              'customerTicketing.changedOn'\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-details-card\">\n        <cx-card\n          [content]=\"\n            prepareCardContent(\n              ticket.status ? ticket.status.name : undefined,\n              'customerTicketing.status',\n              ticket.status ? ticket.status.id : undefined\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #spinner>\n  <cx-spinner></cx-spinner>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.TranslationService }, { type: i2.CustomerTicketingFacade }, { type: i1.RoutingService }, { type: i1.EventService }]; } });
//# sourceMappingURL=data:application/json;base64,