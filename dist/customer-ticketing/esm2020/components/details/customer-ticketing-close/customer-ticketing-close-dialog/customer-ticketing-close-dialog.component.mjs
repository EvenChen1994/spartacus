/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component } from '@angular/core';
import { FormUtils } from '@spartacus/storefront';
import { CustomerTicketingDialogComponent } from '../../../shared/customer-ticketing-dialog/customer-ticketing-dialog.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/forms";
import * as i4 from "@spartacus/core";
export class CustomerTicketingCloseDialogComponent extends CustomerTicketingDialogComponent {
    ngOnInit() {
        this.buildForm();
    }
    closeRequest() {
        if (this.form.invalid) {
            this.form.markAllAsTouched();
            FormUtils.deepUpdateValueAndValidity(this.form);
        }
        else {
            this.isDataLoading$.next(true);
            this.subscription = this.customerTicketingFacade
                .createTicketEvent(this.prepareTicketEvent())
                .subscribe({
                complete: () => {
                    this.onComplete();
                },
                error: () => {
                    this.onError();
                },
            });
        }
    }
    prepareTicketEvent() {
        return {
            message: this.form?.get('message')?.value,
            toStatus: {
                id: "CLOSED" /* STATUS.CLOSED */,
                name: "Closed" /* STATUS_NAME.CLOSED */,
            },
        };
    }
    onComplete() {
        this.isDataLoading$.next(false);
        this.close('Ticket closed successfully');
        this.routingService.go({ cxRoute: 'supportTickets' });
    }
    onError() {
        this.close('Something went wrong while closing the ticket');
        this.isDataLoading$.next(false);
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
CustomerTicketingCloseDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingCloseDialogComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CustomerTicketingCloseDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: CustomerTicketingCloseDialogComponent, selector: "cx-customer-ticketing-close-dialog", usesInheritance: true, ngImport: i0, template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-customer-ticket-form-dialog\"\n>\n  <form [formGroup]=\"form\" class=\"cx-customer-ticket-form-container\">\n    <div class=\"modal-header cx-customer-ticket-form-header\">\n      <div class=\"cx-customer-ticket-form-title modal-title\">\n        {{ 'customerTicketingDetails.closeRequest' | cxTranslate }}\n      </div>\n      <button\n        (click)=\"close('Close Request Dialog')\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"cx-customer-ticket-form-close close\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <div class=\"cx-customer-ticket-form-body\">\n      <div class=\"cx-customer-ticket-form-row\">\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'customerTicketing.message' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersLimit\"\n            class=\"form-control\"\n            formControlName=\"message\"\n            rows=\"5\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('message')\"></cx-form-errors>\n\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: messagesCharacterLeft }\n            }}\n          </p>\n        </label>\n      </div>\n\n      <div class=\"cx-customer-ticket-form-footer\">\n        <button\n          (click)=\"close('Close Request Dialog')\"\n          class=\"btn btn-secondary\"\n        >\n          {{ 'customerTicketing.cancel' | cxTranslate }}\n        </button>\n        <button (click)=\"closeRequest()\" class=\"btn btn-primary\">\n          {{ 'customerTicketing.submit' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <cx-spinner *ngIf=\"isDataLoading$ | async\" class=\"overlay\"></cx-spinner>\n  </form>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i2.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i2.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }, { kind: "component", type: i2.SpinnerComponent, selector: "cx-spinner" }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingCloseDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-customer-ticketing-close-dialog', template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-customer-ticket-form-dialog\"\n>\n  <form [formGroup]=\"form\" class=\"cx-customer-ticket-form-container\">\n    <div class=\"modal-header cx-customer-ticket-form-header\">\n      <div class=\"cx-customer-ticket-form-title modal-title\">\n        {{ 'customerTicketingDetails.closeRequest' | cxTranslate }}\n      </div>\n      <button\n        (click)=\"close('Close Request Dialog')\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"cx-customer-ticket-form-close close\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <div class=\"cx-customer-ticket-form-body\">\n      <div class=\"cx-customer-ticket-form-row\">\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'customerTicketing.message' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersLimit\"\n            class=\"form-control\"\n            formControlName=\"message\"\n            rows=\"5\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('message')\"></cx-form-errors>\n\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: messagesCharacterLeft }\n            }}\n          </p>\n        </label>\n      </div>\n\n      <div class=\"cx-customer-ticket-form-footer\">\n        <button\n          (click)=\"close('Close Request Dialog')\"\n          class=\"btn btn-secondary\"\n        >\n          {{ 'customerTicketing.cancel' | cxTranslate }}\n        </button>\n        <button (click)=\"closeRequest()\" class=\"btn btn-primary\">\n          {{ 'customerTicketing.submit' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <cx-spinner *ngIf=\"isDataLoading$ | async\" class=\"overlay\"></cx-spinner>\n  </form>\n</div>\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tZXItdGlja2V0aW5nLWNsb3NlLWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY3VzdG9tZXItdGlja2V0aW5nL2NvbXBvbmVudHMvZGV0YWlscy9jdXN0b21lci10aWNrZXRpbmctY2xvc2UvY3VzdG9tZXItdGlja2V0aW5nLWNsb3NlLWRpYWxvZy9jdXN0b21lci10aWNrZXRpbmctY2xvc2UtZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jdXN0b21lci10aWNrZXRpbmcvY29tcG9uZW50cy9kZXRhaWxzL2N1c3RvbWVyLXRpY2tldGluZy1jbG9zZS9jdXN0b21lci10aWNrZXRpbmctY2xvc2UtZGlhbG9nL2N1c3RvbWVyLXRpY2tldGluZy1jbG9zZS1kaWFsb2cuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxTQUFTLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBTTdELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUVsRCxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSwrRUFBK0UsQ0FBQzs7Ozs7O0FBTWpJLE1BQU0sT0FBTyxxQ0FDWCxTQUFRLGdDQUFnQztJQUt4QyxRQUFRO1FBQ04sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7WUFDN0IsU0FBUyxDQUFDLDBCQUEwQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNqRDthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsdUJBQXVCO2lCQUM3QyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztpQkFDNUMsU0FBUyxDQUFDO2dCQUNULFFBQVEsRUFBRSxHQUFHLEVBQUU7b0JBQ2IsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO2dCQUNwQixDQUFDO2dCQUNELEtBQUssRUFBRSxHQUFHLEVBQUU7b0JBQ1YsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNqQixDQUFDO2FBQ0YsQ0FBQyxDQUFDO1NBQ047SUFDSCxDQUFDO0lBRVMsa0JBQWtCO1FBQzFCLE9BQU87WUFDTCxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUUsS0FBSztZQUN6QyxRQUFRLEVBQUU7Z0JBQ1IsRUFBRSw4QkFBZTtnQkFDakIsSUFBSSxtQ0FBb0I7YUFDekI7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVTLFVBQVU7UUFDbEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRVMsT0FBTztRQUNmLElBQUksQ0FBQyxLQUFLLENBQUMsK0NBQStDLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNyQixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQzs7a0lBdERVLHFDQUFxQztzSEFBckMscUNBQXFDLGlHQ3BCbEQsZ2hFQTREQTsyRkR4Q2EscUNBQXFDO2tCQUpqRCxTQUFTOytCQUNFLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFNUQVRVUyxcbiAgU1RBVFVTX05BTUUsXG4gIFRpY2tldEV2ZW50LFxufSBmcm9tICdAc3BhcnRhY3VzL2N1c3RvbWVyLXRpY2tldGluZy9yb290JztcbmltcG9ydCB7IEZvcm1VdGlscyB9IGZyb20gJ0BzcGFydGFjdXMvc3RvcmVmcm9udCc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEN1c3RvbWVyVGlja2V0aW5nRGlhbG9nQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL2N1c3RvbWVyLXRpY2tldGluZy1kaWFsb2cvY3VzdG9tZXItdGlja2V0aW5nLWRpYWxvZy5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jdXN0b21lci10aWNrZXRpbmctY2xvc2UtZGlhbG9nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2N1c3RvbWVyLXRpY2tldGluZy1jbG9zZS1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBDdXN0b21lclRpY2tldGluZ0Nsb3NlRGlhbG9nQ29tcG9uZW50XG4gIGV4dGVuZHMgQ3VzdG9tZXJUaWNrZXRpbmdEaWFsb2dDb21wb25lbnRcbiAgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveVxue1xuICBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmJ1aWxkRm9ybSgpO1xuICB9XG5cbiAgY2xvc2VSZXF1ZXN0KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLmZvcm0uaW52YWxpZCkge1xuICAgICAgdGhpcy5mb3JtLm1hcmtBbGxBc1RvdWNoZWQoKTtcbiAgICAgIEZvcm1VdGlscy5kZWVwVXBkYXRlVmFsdWVBbmRWYWxpZGl0eSh0aGlzLmZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmlzRGF0YUxvYWRpbmckLm5leHQodHJ1ZSk7XG4gICAgICB0aGlzLnN1YnNjcmlwdGlvbiA9IHRoaXMuY3VzdG9tZXJUaWNrZXRpbmdGYWNhZGVcbiAgICAgICAgLmNyZWF0ZVRpY2tldEV2ZW50KHRoaXMucHJlcGFyZVRpY2tldEV2ZW50KCkpXG4gICAgICAgIC5zdWJzY3JpYmUoe1xuICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9uQ29tcGxldGUoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yOiAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm9uRXJyb3IoKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgcHJlcGFyZVRpY2tldEV2ZW50KCk6IFRpY2tldEV2ZW50IHtcbiAgICByZXR1cm4ge1xuICAgICAgbWVzc2FnZTogdGhpcy5mb3JtPy5nZXQoJ21lc3NhZ2UnKT8udmFsdWUsXG4gICAgICB0b1N0YXR1czoge1xuICAgICAgICBpZDogU1RBVFVTLkNMT1NFRCxcbiAgICAgICAgbmFtZTogU1RBVFVTX05BTUUuQ0xPU0VELFxuICAgICAgfSxcbiAgICB9O1xuICB9XG5cbiAgcHJvdGVjdGVkIG9uQ29tcGxldGUoKTogdm9pZCB7XG4gICAgdGhpcy5pc0RhdGFMb2FkaW5nJC5uZXh0KGZhbHNlKTtcbiAgICB0aGlzLmNsb3NlKCdUaWNrZXQgY2xvc2VkIHN1Y2Nlc3NmdWxseScpO1xuICAgIHRoaXMucm91dGluZ1NlcnZpY2UuZ28oeyBjeFJvdXRlOiAnc3VwcG9ydFRpY2tldHMnIH0pO1xuICB9XG5cbiAgcHJvdGVjdGVkIG9uRXJyb3IoKTogdm9pZCB7XG4gICAgdGhpcy5jbG9zZSgnU29tZXRoaW5nIHdlbnQgd3Jvbmcgd2hpbGUgY2xvc2luZyB0aGUgdGlja2V0Jyk7XG4gICAgdGhpcy5pc0RhdGFMb2FkaW5nJC5uZXh0KGZhbHNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxkaXZcbiAgW2N4Rm9jdXNdPVwiZm9jdXNDb25maWdcIlxuICAoZXNjKT1cImNsb3NlKCdFc2NhcGUgY2xpY2tlZCcpXCJcbiAgY2xhc3M9XCJjeC1jdXN0b21lci10aWNrZXQtZm9ybS1kaWFsb2dcIlxuPlxuICA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1cIiBjbGFzcz1cImN4LWN1c3RvbWVyLXRpY2tldC1mb3JtLWNvbnRhaW5lclwiPlxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1oZWFkZXIgY3gtY3VzdG9tZXItdGlja2V0LWZvcm0taGVhZGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtY3VzdG9tZXItdGlja2V0LWZvcm0tdGl0bGUgbW9kYWwtdGl0bGVcIj5cbiAgICAgICAge3sgJ2N1c3RvbWVyVGlja2V0aW5nRGV0YWlscy5jbG9zZVJlcXVlc3QnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgIDwvZGl2PlxuICAgICAgPGJ1dHRvblxuICAgICAgICAoY2xpY2spPVwiY2xvc2UoJ0Nsb3NlIFJlcXVlc3QgRGlhbG9nJylcIlxuICAgICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidjb21tb24uY2xvc2UnIHwgY3hUcmFuc2xhdGVcIlxuICAgICAgICBjbGFzcz1cImN4LWN1c3RvbWVyLXRpY2tldC1mb3JtLWNsb3NlIGNsb3NlXCJcbiAgICAgID5cbiAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgICAgPGN4LWljb24gW3R5cGVdPVwiaWNvblR5cGVzLkNMT1NFXCI+PC9jeC1pY29uPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJjeC1jdXN0b21lci10aWNrZXQtZm9ybS1ib2R5XCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtY3VzdG9tZXItdGlja2V0LWZvcm0tcm93XCI+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICA8c3BhbiBjbGFzcz1cImN4LWN1c3RvbWVyLXRpY2tldC1sYWJlbCBsYWJlbC1jb250ZW50XCI+XG4gICAgICAgICAgICB7eyAnY3VzdG9tZXJUaWNrZXRpbmcubWVzc2FnZScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8dGV4dGFyZWFcbiAgICAgICAgICAgIFttYXhMZW5ndGhdPVwiaW5wdXRDaGFyYWN0ZXJzTGltaXRcIlxuICAgICAgICAgICAgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIlxuICAgICAgICAgICAgZm9ybUNvbnRyb2xOYW1lPVwibWVzc2FnZVwiXG4gICAgICAgICAgICByb3dzPVwiNVwiXG4gICAgICAgICAgPjwvdGV4dGFyZWE+XG5cbiAgICAgICAgICA8Y3gtZm9ybS1lcnJvcnMgW2NvbnRyb2xdPVwiZm9ybS5nZXQoJ21lc3NhZ2UnKVwiPjwvY3gtZm9ybS1lcnJvcnM+XG5cbiAgICAgICAgICA8cCBjbGFzcz1cImN4LWN1c3RvbWVyLXRpY2tldC1pbnB1dC1oaW50XCI+XG4gICAgICAgICAgICB7e1xuICAgICAgICAgICAgICAnY3VzdG9tZXJUaWNrZXRpbmcuY2hhcmFjdGVyc0xlZnQnXG4gICAgICAgICAgICAgICAgfCBjeFRyYW5zbGF0ZTogeyBjb3VudDogbWVzc2FnZXNDaGFyYWN0ZXJMZWZ0IH1cbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1jdXN0b21lci10aWNrZXQtZm9ybS1mb290ZXJcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIChjbGljayk9XCJjbG9zZSgnQ2xvc2UgUmVxdWVzdCBEaWFsb2cnKVwiXG4gICAgICAgICAgY2xhc3M9XCJidG4gYnRuLXNlY29uZGFyeVwiXG4gICAgICAgID5cbiAgICAgICAgICB7eyAnY3VzdG9tZXJUaWNrZXRpbmcuY2FuY2VsJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIChjbGljayk9XCJjbG9zZVJlcXVlc3QoKVwiIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCI+XG4gICAgICAgICAge3sgJ2N1c3RvbWVyVGlja2V0aW5nLnN1Ym1pdCcgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxjeC1zcGlubmVyICpuZ0lmPVwiaXNEYXRhTG9hZGluZyQgfCBhc3luY1wiIGNsYXNzPVwib3ZlcmxheVwiPjwvY3gtc3Bpbm5lcj5cbiAgPC9mb3JtPlxuPC9kaXY+XG4iXX0=