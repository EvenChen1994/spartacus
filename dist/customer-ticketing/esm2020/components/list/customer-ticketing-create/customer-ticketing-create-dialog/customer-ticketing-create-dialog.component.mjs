/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, Input, inject } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { MAX_ENTRIES_FOR_ATTACHMENT, } from '@spartacus/customer-ticketing/root';
import { FormUtils } from '@spartacus/storefront';
import { of } from 'rxjs';
import { CustomerTicketingDialogComponent } from '../../../shared/customer-ticketing-dialog/customer-ticketing-dialog.component';
import { GlobalMessageService, GlobalMessageType, HttpErrorModel, TranslationService, } from '@spartacus/core';
import { catchError, first } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/forms";
import * as i4 from "@spartacus/core";
export class CustomerTicketingCreateDialogComponent extends CustomerTicketingDialogComponent {
    constructor() {
        super(...arguments);
        this.ticketCategories$ = this.customerTicketingFacade.getTicketCategories();
        this.ticketAssociatedObjects$ = this.customerTicketingFacade.getTicketAssociatedObjects().pipe(catchError((error) => {
            this.handleError(error);
            return of([]);
        }));
        this.globalMessage = inject(GlobalMessageService);
        this.translationService = inject(TranslationService);
    }
    getCreateTicketPayload(form) {
        return {
            message: form?.get('message')?.value,
            subject: form?.get('subject')?.value,
            associatedTo: form?.get('associatedTo')?.value || undefined,
            ticketCategory: form?.get('ticketCategory')?.value,
        };
    }
    ngOnInit() {
        this.buildForm();
    }
    buildForm() {
        const form = new FormGroup({});
        form.setControl('subject', new FormControl('', [
            Validators.required,
            Validators.maxLength(this.inputCharactersForSubject),
        ]));
        form.setControl('ticketCategory', new FormControl('', [Validators.required]));
        form.setControl('associatedTo', new FormControl(''));
        form.setControl('message', new FormControl('', [
            Validators.required,
            Validators.maxLength(this.inputCharactersLimit),
        ]));
        form.setControl('file', new FormControl('', [
            this.filesFormValidators.maxSize(this.maxSize),
            this.filesFormValidators.maxEntries(MAX_ENTRIES_FOR_ATTACHMENT),
            this.filesFormValidators.allowedTypes(this.allowedTypes),
        ]));
        this.form = form;
    }
    createTicketRequest() {
        this.attachment = this.form.get('file')?.value?.[0];
        if (this.form.invalid) {
            this.form.markAllAsTouched();
            FormUtils.deepUpdateValueAndValidity(this.form);
        }
        else {
            this.subscription = this.customerTicketingFacade
                .createTicket(this.getCreateTicketPayload(this.form))
                .subscribe({
                next: (response) => {
                    if (response.id &&
                        this.attachment &&
                        response.ticketEvents?.[0].code) {
                        this.customerTicketingFacade.uploadAttachment(this.attachment, response.ticketEvents?.[0].code, response.id);
                    }
                },
                complete: () => {
                    this.onComplete();
                },
                error: (error) => {
                    this.handleError(error);
                },
            });
        }
    }
    handleError(error) {
        if (error instanceof HttpErrorModel) {
            (error.details ?? []).forEach((err) => {
                if (err.message) {
                    this.globalMessage.add({ raw: err.message }, GlobalMessageType.MSG_TYPE_ERROR);
                }
            });
        }
        else {
            this.translationService
                .translate('httpHandlers.unknownError')
                .pipe(first())
                .subscribe((text) => {
                this.globalMessage.add({ raw: text }, GlobalMessageType.MSG_TYPE_ERROR);
            });
        }
        this.onError();
    }
    onComplete() {
        this.close('Ticket created successfully');
    }
    onError() {
        this.close('Something went wrong');
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
}
CustomerTicketingCreateDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingCreateDialogComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CustomerTicketingCreateDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: CustomerTicketingCreateDialogComponent, selector: "cx-customer-ticketing-create-dialog", inputs: { selectedCategory: "selectedCategory", selectedAssociatedObject: "selectedAssociatedObject" }, usesInheritance: true, ngImport: i0, template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-customer-ticket-form-dialog\"\n>\n  <form [formGroup]=\"form\" class=\"cx-customer-ticket-form-container\">\n    <div class=\"modal-header cx-customer-ticket-form-header\">\n      <div class=\"cx-customer-ticket-form-title modal-title\">\n        {{ 'createCustomerTicket.addNewRequest' | cxTranslate }}\n      </div>\n      <button\n        (click)=\"close('Close Create Request Dialog')\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"cx-customer-ticket-form-close close\"\n        type=\"button\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <div class=\"cx-customer-ticket-form-body\">\n      <div class=\"cx-customer-ticket-form-row\">\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'createCustomerTicket.subject' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersForSubject\"\n            class=\"form-control\"\n            formControlName=\"subject\"\n            rows=\"1\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('subject')\"></cx-form-errors>\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: subjectCharacterLeft }\n            }}\n          </p>\n        </label>\n\n        <label *ngIf=\"ticketCategories$ | async as ticketCategories\">\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'createCustomerTicket.category' | cxTranslate }}\n          </span>\n          <select class=\"form-control\" formControlName=\"ticketCategory\">\n            <option value=\"\" disabled selected>\n              {{ 'createCustomerTicket.selectCategory' | cxTranslate }}\n            </option>\n            <option\n              *ngFor=\"let category of ticketCategories\"\n              [ngValue]=\"category\"\n              [selected]=\"category.id === selectedCategory?.id\"\n            >\n              {{ category.name }}\n            </option>\n          </select>\n\n          <cx-form-errors\n            [control]=\"form.get('ticketCategory')\"\n          ></cx-form-errors>\n        </label>\n\n        <ng-container\n          *ngIf=\"ticketAssociatedObjects$ | async as ticketAssociatedObjects\"\n        >\n          <label *ngIf=\"ticketAssociatedObjects.length > 0\">\n            <span class=\"cx-customer-ticket-label label-content\">\n              {{ 'createCustomerTicket.associateTo' | cxTranslate }}\n            </span>\n            <select class=\"form-control\" formControlName=\"associatedTo\">\n              <option value=\"\" disabled selected>\n                {{\n                  'createCustomerTicket.optionallySelectAssociatedObject'\n                    | cxTranslate\n                }}\n              </option>\n              <option\n                *ngFor=\"let associatedObject of ticketAssociatedObjects\"\n                [ngValue]=\"associatedObject\"\n                [selected]=\"\n                  associatedObject.code === selectedAssociatedObject?.code\n                \"\n              >\n                {{ associatedObject.type }}\n                {{ associatedObject.code }}\n              </option>\n            </select>\n          </label>\n        </ng-container>\n\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'customerTicketing.message' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersLimit\"\n            class=\"form-control\"\n            formControlName=\"message\"\n            rows=\"5\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('message')\"></cx-form-errors>\n\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: messagesCharacterLeft }\n            }}\n          </p>\n        </label>\n\n        <div>\n          <cx-file-upload\n            [formControl]=\"$any(form.get('file'))\"\n            [accept]=\"allowedTypes\"\n          >\n            <ng-template>\n              <cx-icon [type]=\"iconTypes.UPLOAD\"></cx-icon>\n              <span class=\"cx-message-footer-text\">{{\n                'customerTicketing.uploadFile' | cxTranslate\n              }}</span>\n            </ng-template>\n          </cx-file-upload>\n\n          <p class=\"cx-customer-ticket-file-upload-hint\">\n            {{\n              'customerTicketing.fileSizeLimit'\n                | cxTranslate: { count: maxSize }\n            }}\n          </p>\n          <p class=\"cx-customer-ticket-file-upload-hint\">\n            {{ 'customerTicketing.maximumAttachment' | cxTranslate }}\n          </p>\n\n          <cx-form-errors\n            [control]=\"form.get('file')\"\n            prefix=\"formErrors.file\"\n          ></cx-form-errors>\n        </div>\n      </div>\n\n      <div class=\"cx-customer-ticket-form-footer\">\n        <button\n          (click)=\"close('Close Create Request Dialog')\"\n          class=\"btn btn-secondary\"\n          type=\"button\"\n        >\n          {{ 'customerTicketing.cancel' | cxTranslate }}\n        </button>\n        <button\n          (click)=\"createTicketRequest()\"\n          class=\"btn btn-primary\"\n          type=\"button\"\n        >\n          {{ 'customerTicketing.submit' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i2.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i3.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: i2.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }, { kind: "component", type: i2.FileUploadComponent, selector: "cx-file-upload", inputs: ["accept", "multiple"], outputs: ["update"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingCreateDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-customer-ticketing-create-dialog', template: "<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-customer-ticket-form-dialog\"\n>\n  <form [formGroup]=\"form\" class=\"cx-customer-ticket-form-container\">\n    <div class=\"modal-header cx-customer-ticket-form-header\">\n      <div class=\"cx-customer-ticket-form-title modal-title\">\n        {{ 'createCustomerTicket.addNewRequest' | cxTranslate }}\n      </div>\n      <button\n        (click)=\"close('Close Create Request Dialog')\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        class=\"cx-customer-ticket-form-close close\"\n        type=\"button\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n\n    <div class=\"cx-customer-ticket-form-body\">\n      <div class=\"cx-customer-ticket-form-row\">\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'createCustomerTicket.subject' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersForSubject\"\n            class=\"form-control\"\n            formControlName=\"subject\"\n            rows=\"1\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('subject')\"></cx-form-errors>\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: subjectCharacterLeft }\n            }}\n          </p>\n        </label>\n\n        <label *ngIf=\"ticketCategories$ | async as ticketCategories\">\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'createCustomerTicket.category' | cxTranslate }}\n          </span>\n          <select class=\"form-control\" formControlName=\"ticketCategory\">\n            <option value=\"\" disabled selected>\n              {{ 'createCustomerTicket.selectCategory' | cxTranslate }}\n            </option>\n            <option\n              *ngFor=\"let category of ticketCategories\"\n              [ngValue]=\"category\"\n              [selected]=\"category.id === selectedCategory?.id\"\n            >\n              {{ category.name }}\n            </option>\n          </select>\n\n          <cx-form-errors\n            [control]=\"form.get('ticketCategory')\"\n          ></cx-form-errors>\n        </label>\n\n        <ng-container\n          *ngIf=\"ticketAssociatedObjects$ | async as ticketAssociatedObjects\"\n        >\n          <label *ngIf=\"ticketAssociatedObjects.length > 0\">\n            <span class=\"cx-customer-ticket-label label-content\">\n              {{ 'createCustomerTicket.associateTo' | cxTranslate }}\n            </span>\n            <select class=\"form-control\" formControlName=\"associatedTo\">\n              <option value=\"\" disabled selected>\n                {{\n                  'createCustomerTicket.optionallySelectAssociatedObject'\n                    | cxTranslate\n                }}\n              </option>\n              <option\n                *ngFor=\"let associatedObject of ticketAssociatedObjects\"\n                [ngValue]=\"associatedObject\"\n                [selected]=\"\n                  associatedObject.code === selectedAssociatedObject?.code\n                \"\n              >\n                {{ associatedObject.type }}\n                {{ associatedObject.code }}\n              </option>\n            </select>\n          </label>\n        </ng-container>\n\n        <label>\n          <span class=\"cx-customer-ticket-label label-content\">\n            {{ 'customerTicketing.message' | cxTranslate }}\n          </span>\n          <textarea\n            [maxLength]=\"inputCharactersLimit\"\n            class=\"form-control\"\n            formControlName=\"message\"\n            rows=\"5\"\n          ></textarea>\n\n          <cx-form-errors [control]=\"form.get('message')\"></cx-form-errors>\n\n          <p class=\"cx-customer-ticket-input-hint\">\n            {{\n              'customerTicketing.charactersLeft'\n                | cxTranslate: { count: messagesCharacterLeft }\n            }}\n          </p>\n        </label>\n\n        <div>\n          <cx-file-upload\n            [formControl]=\"$any(form.get('file'))\"\n            [accept]=\"allowedTypes\"\n          >\n            <ng-template>\n              <cx-icon [type]=\"iconTypes.UPLOAD\"></cx-icon>\n              <span class=\"cx-message-footer-text\">{{\n                'customerTicketing.uploadFile' | cxTranslate\n              }}</span>\n            </ng-template>\n          </cx-file-upload>\n\n          <p class=\"cx-customer-ticket-file-upload-hint\">\n            {{\n              'customerTicketing.fileSizeLimit'\n                | cxTranslate: { count: maxSize }\n            }}\n          </p>\n          <p class=\"cx-customer-ticket-file-upload-hint\">\n            {{ 'customerTicketing.maximumAttachment' | cxTranslate }}\n          </p>\n\n          <cx-form-errors\n            [control]=\"form.get('file')\"\n            prefix=\"formErrors.file\"\n          ></cx-form-errors>\n        </div>\n      </div>\n\n      <div class=\"cx-customer-ticket-form-footer\">\n        <button\n          (click)=\"close('Close Create Request Dialog')\"\n          class=\"btn btn-secondary\"\n          type=\"button\"\n        >\n          {{ 'customerTicketing.cancel' | cxTranslate }}\n        </button>\n        <button\n          (click)=\"createTicketRequest()\"\n          class=\"btn btn-primary\"\n          type=\"button\"\n        >\n          {{ 'customerTicketing.submit' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n" }]
        }], propDecorators: { selectedCategory: [{
                type: Input
            }], selectedAssociatedObject: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,