/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./customer-ticketing.adapter";
export class CustomerTicketingConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    getTicket(customerId, ticketId) {
        return this.adapter.getTicket(customerId, ticketId);
    }
    getTickets(customerId, pageSize, currentPage, sort) {
        return this.adapter.getTickets(customerId, pageSize, currentPage, sort);
    }
    getTicketCategories() {
        return this.adapter.getTicketCategories();
    }
    getTicketAssociatedObjects(customerId) {
        return this.adapter.getTicketAssociatedObjects(customerId);
    }
    createTicket(customerId, ticket) {
        return this.adapter.createTicket(customerId, ticket);
    }
    createTicketEvent(customerId, ticketId, ticketEvent) {
        return this.adapter.createTicketEvent(customerId, ticketId, ticketEvent);
    }
    uploadAttachment(customerId, ticketId, eventCode, file) {
        return this.adapter.uploadAttachment(customerId, ticketId, eventCode, file);
    }
    downloadAttachment(customerId, ticketId, eventCode, attachmentId) {
        return this.adapter.downloadAttachment(customerId, ticketId, eventCode, attachmentId);
    }
}
CustomerTicketingConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingConnector, deps: [{ token: i1.CustomerTicketingAdapter }], target: i0.ɵɵFactoryTarget.Injectable });
CustomerTicketingConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingConnector });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: CustomerTicketingConnector, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.CustomerTicketingAdapter }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tZXItdGlja2V0aW5nLmNvbm5lY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jdXN0b21lci10aWNrZXRpbmcvY29yZS9jb25uZWN0b3JzL2N1c3RvbWVyLXRpY2tldGluZy5jb25uZWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQWEzQyxNQUFNLE9BQU8sMEJBQTBCO0lBQ3JDLFlBQXNCLE9BQWlDO1FBQWpDLFlBQU8sR0FBUCxPQUFPLENBQTBCO0lBQUcsQ0FBQztJQUVwRCxTQUFTLENBQ2QsVUFBa0IsRUFDbEIsUUFBZ0I7UUFFaEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVNLFVBQVUsQ0FDZixVQUFrQixFQUNsQixRQUFpQixFQUNqQixXQUFvQixFQUNwQixJQUFhO1FBRWIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRU0sbUJBQW1CO1FBQ3hCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO0lBQzVDLENBQUM7SUFFTSwwQkFBMEIsQ0FDL0IsVUFBa0I7UUFFbEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLDBCQUEwQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFTSxZQUFZLENBQ2pCLFVBQWtCLEVBQ2xCLE1BQXFCO1FBRXJCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFTSxpQkFBaUIsQ0FDdEIsVUFBa0IsRUFDbEIsUUFBZ0IsRUFDaEIsV0FBd0I7UUFFeEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVNLGdCQUFnQixDQUNyQixVQUFrQixFQUNsQixRQUFnQixFQUNoQixTQUFpQixFQUNqQixJQUFVO1FBRVYsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFTSxrQkFBa0IsQ0FDdkIsVUFBa0IsRUFDbEIsUUFBZ0IsRUFDaEIsU0FBaUIsRUFDakIsWUFBb0I7UUFFcEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLGtCQUFrQixDQUNwQyxVQUFVLEVBQ1YsUUFBUSxFQUNSLFNBQVMsRUFDVCxZQUFZLENBQ2IsQ0FBQztJQUNKLENBQUM7O3VIQWpFVSwwQkFBMEI7MkhBQTFCLDBCQUEwQjsyRkFBMUIsMEJBQTBCO2tCQUR0QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQXNzb2NpYXRlZE9iamVjdCxcbiAgQ2F0ZWdvcnksXG4gIFRpY2tldERldGFpbHMsXG4gIFRpY2tldEV2ZW50LFxuICBUaWNrZXRMaXN0LFxuICBUaWNrZXRTdGFydGVyLFxufSBmcm9tICdAc3BhcnRhY3VzL2N1c3RvbWVyLXRpY2tldGluZy9yb290JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEN1c3RvbWVyVGlja2V0aW5nQWRhcHRlciB9IGZyb20gJy4vY3VzdG9tZXItdGlja2V0aW5nLmFkYXB0ZXInO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ3VzdG9tZXJUaWNrZXRpbmdDb25uZWN0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYWRhcHRlcjogQ3VzdG9tZXJUaWNrZXRpbmdBZGFwdGVyKSB7fVxuXG4gIHB1YmxpYyBnZXRUaWNrZXQoXG4gICAgY3VzdG9tZXJJZDogc3RyaW5nLFxuICAgIHRpY2tldElkOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxUaWNrZXREZXRhaWxzPiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5nZXRUaWNrZXQoY3VzdG9tZXJJZCwgdGlja2V0SWQpO1xuICB9XG5cbiAgcHVibGljIGdldFRpY2tldHMoXG4gICAgY3VzdG9tZXJJZDogc3RyaW5nLFxuICAgIHBhZ2VTaXplPzogbnVtYmVyLFxuICAgIGN1cnJlbnRQYWdlPzogbnVtYmVyLFxuICAgIHNvcnQ/OiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxUaWNrZXRMaXN0PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5nZXRUaWNrZXRzKGN1c3RvbWVySWQsIHBhZ2VTaXplLCBjdXJyZW50UGFnZSwgc29ydCk7XG4gIH1cblxuICBwdWJsaWMgZ2V0VGlja2V0Q2F0ZWdvcmllcygpOiBPYnNlcnZhYmxlPENhdGVnb3J5W10+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmdldFRpY2tldENhdGVnb3JpZXMoKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRUaWNrZXRBc3NvY2lhdGVkT2JqZWN0cyhcbiAgICBjdXN0b21lcklkOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxBc3NvY2lhdGVkT2JqZWN0W10+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmdldFRpY2tldEFzc29jaWF0ZWRPYmplY3RzKGN1c3RvbWVySWQpO1xuICB9XG5cbiAgcHVibGljIGNyZWF0ZVRpY2tldChcbiAgICBjdXN0b21lcklkOiBzdHJpbmcsXG4gICAgdGlja2V0OiBUaWNrZXRTdGFydGVyXG4gICk6IE9ic2VydmFibGU8VGlja2V0U3RhcnRlcj4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIuY3JlYXRlVGlja2V0KGN1c3RvbWVySWQsIHRpY2tldCk7XG4gIH1cblxuICBwdWJsaWMgY3JlYXRlVGlja2V0RXZlbnQoXG4gICAgY3VzdG9tZXJJZDogc3RyaW5nLFxuICAgIHRpY2tldElkOiBzdHJpbmcsXG4gICAgdGlja2V0RXZlbnQ6IFRpY2tldEV2ZW50XG4gICk6IE9ic2VydmFibGU8VGlja2V0RXZlbnQ+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmNyZWF0ZVRpY2tldEV2ZW50KGN1c3RvbWVySWQsIHRpY2tldElkLCB0aWNrZXRFdmVudCk7XG4gIH1cblxuICBwdWJsaWMgdXBsb2FkQXR0YWNobWVudChcbiAgICBjdXN0b21lcklkOiBzdHJpbmcsXG4gICAgdGlja2V0SWQ6IHN0cmluZyxcbiAgICBldmVudENvZGU6IHN0cmluZyxcbiAgICBmaWxlOiBGaWxlXG4gICk6IE9ic2VydmFibGU8dW5rbm93bj4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIudXBsb2FkQXR0YWNobWVudChjdXN0b21lcklkLCB0aWNrZXRJZCwgZXZlbnRDb2RlLCBmaWxlKTtcbiAgfVxuXG4gIHB1YmxpYyBkb3dubG9hZEF0dGFjaG1lbnQoXG4gICAgY3VzdG9tZXJJZDogc3RyaW5nLFxuICAgIHRpY2tldElkOiBzdHJpbmcsXG4gICAgZXZlbnRDb2RlOiBzdHJpbmcsXG4gICAgYXR0YWNobWVudElkOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTx1bmtub3duPiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5kb3dubG9hZEF0dGFjaG1lbnQoXG4gICAgICBjdXN0b21lcklkLFxuICAgICAgdGlja2V0SWQsXG4gICAgICBldmVudENvZGUsXG4gICAgICBhdHRhY2htZW50SWRcbiAgICApO1xuICB9XG59XG4iXX0=