/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { EMPTY, using } from 'rxjs';
import { distinctUntilKeyChanged, filter, map, shareReplay, switchMap, take, tap, } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "./merchandising-carousel.component.service";
import * as i3 from "@spartacus/core";
import * as i4 from "@angular/common";
import * as i5 from "../directives/attributes/attributes.directive";
import * as i6 from "@angular/router";
export class MerchandisingCarouselComponent {
    constructor(componentData, merchandisingCarouselComponentService, routingService, intersectionService, el) {
        this.componentData = componentData;
        this.merchandisingCarouselComponentService = merchandisingCarouselComponentService;
        this.routingService = routingService;
        this.intersectionService = intersectionService;
        this.el = el;
        /**
         * returns an Observable string for the title.
         */
        this.title$ = this.componentData.data$.pipe(filter((data) => Boolean(data)), map((data) => data.title));
        this.fetchProducts$ = this.componentData.data$.pipe(filter((data) => Boolean(data)), distinctUntilKeyChanged('strategy'), switchMap((data) => this.merchandisingCarouselComponentService.getMerchandisingCarouselModel(data)), tap((data) => {
            if (typeof data.backgroundColor === 'string') {
                this.el.nativeElement.style.setProperty('--cx-color-background', data.backgroundColor);
            }
            if (typeof data.textColor === 'string') {
                this.el.nativeElement.style.setProperty('--cx-color-text', data.textColor);
            }
        }), shareReplay({ bufferSize: 1, refCount: true }));
        this.intersection$ = this.fetchProducts$.pipe(take(1), switchMap(() => this.routingService.getPageContext().pipe(switchMap(() => this.componentData.data$), map((data) => this.merchandisingCarouselComponentService.getMerchandisingCaourselViewportThreshold(data)), switchMap((threshold) => this.intersectionService
            .isIntersected(this.el.nativeElement, {
            threshold,
        })
            .pipe(filter((carouselIsVisible) => carouselIsVisible), switchMap((_) => {
            return this.merchandisingCarouselComponentService
                .sendCarouselViewEvent(this.lastEventModelId, this.fetchProducts$)
                .pipe(tap((model) => {
                this.lastEventModelId = model.id;
            }), switchMap(() => EMPTY));
        }))))));
        this.merchandisingCarouselModel$ = using(() => this.intersection$.subscribe(), () => this.fetchProducts$);
        this.lastEventModelId = '';
    }
    onMerchandisingCarouselItemClick(merchandisingCarouselModel, clickedProduct) {
        this.merchandisingCarouselComponentService.sendCarouselItemClickedEvent(merchandisingCarouselModel, clickedProduct);
    }
}
MerchandisingCarouselComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: MerchandisingCarouselComponent, deps: [{ token: i1.CmsComponentData }, { token: i2.MerchandisingCarouselComponentService }, { token: i3.RoutingService }, { token: i1.IntersectionService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
MerchandisingCarouselComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: MerchandisingCarouselComponent, selector: "cx-merchandising-carousel", ngImport: i0, template: "<ng-container\n  *ngIf=\"merchandisingCarouselModel$ | async as merchandisingCarouselModel\"\n>\n  <div\n    class=\"data-cx-merchandising-carousel\"\n    [cxAttributes]=\"merchandisingCarouselModel.metadata\"\n    [cxAttributesNamePrefix]=\"'data-cx-merchandising-carousel'\"\n  ></div>\n  <cx-carousel\n    [items]=\"merchandisingCarouselModel.items$\"\n    [title]=\"title$ | async\"\n    [template]=\"carouselItem\"\n    itemWidth=\"285px\"\n  >\n  </cx-carousel>\n\n  <ng-template #carouselItem let-item=\"item\">\n    <div\n      class=\"data-cx-merchandising-product\"\n      [cxAttributes]=\"item.metadata\"\n      [cxAttributesNamePrefix]=\"'data-cx-merchandising-product'\"\n    ></div>\n    <a\n      tabindex=\"0\"\n      [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\"\n      (click)=\"\n        onMerchandisingCarouselItemClick(merchandisingCarouselModel, item)\n      \"\n    >\n      <cx-media\n        *ngIf=\"item.images?.PRIMARY\"\n        [container]=\"item.images.PRIMARY\"\n        format=\"product\"\n      >\n      </cx-media>\n      <h4>{{ item.name }}</h4>\n      <div class=\"price\">\n        {{ item.price?.formattedValue }}\n      </div>\n      <div class=\"price\" *ngIf=\"item.stock?.stockLevel > 0; else outOfStock\">\n        {{ item.stock?.stockLevelStatus }} : {{ item.stock?.stockLevel }}\n      </div>\n      <ng-template #outOfStock>\n        <div class=\"price\">\n          {{ item.stock?.stockLevelStatus }}\n        </div>\n      </ng-template>\n    </a>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.AttributesDirective, selector: "[cxAttributes]", inputs: ["cxAttributes", "cxAttributesNamePrefix"] }, { kind: "component", type: i1.CarouselComponent, selector: "cx-carousel", inputs: ["title", "items", "template", "itemWidth", "hideIndicators", "indicatorIcon", "previousIcon", "nextIcon"] }, { kind: "component", type: i1.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "directive", type: i6.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: MerchandisingCarouselComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-merchandising-carousel', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container\n  *ngIf=\"merchandisingCarouselModel$ | async as merchandisingCarouselModel\"\n>\n  <div\n    class=\"data-cx-merchandising-carousel\"\n    [cxAttributes]=\"merchandisingCarouselModel.metadata\"\n    [cxAttributesNamePrefix]=\"'data-cx-merchandising-carousel'\"\n  ></div>\n  <cx-carousel\n    [items]=\"merchandisingCarouselModel.items$\"\n    [title]=\"title$ | async\"\n    [template]=\"carouselItem\"\n    itemWidth=\"285px\"\n  >\n  </cx-carousel>\n\n  <ng-template #carouselItem let-item=\"item\">\n    <div\n      class=\"data-cx-merchandising-product\"\n      [cxAttributes]=\"item.metadata\"\n      [cxAttributesNamePrefix]=\"'data-cx-merchandising-product'\"\n    ></div>\n    <a\n      tabindex=\"0\"\n      [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\"\n      (click)=\"\n        onMerchandisingCarouselItemClick(merchandisingCarouselModel, item)\n      \"\n    >\n      <cx-media\n        *ngIf=\"item.images?.PRIMARY\"\n        [container]=\"item.images.PRIMARY\"\n        format=\"product\"\n      >\n      </cx-media>\n      <h4>{{ item.name }}</h4>\n      <div class=\"price\">\n        {{ item.price?.formattedValue }}\n      </div>\n      <div class=\"price\" *ngIf=\"item.stock?.stockLevel > 0; else outOfStock\">\n        {{ item.stock?.stockLevelStatus }} : {{ item.stock?.stockLevel }}\n      </div>\n      <ng-template #outOfStock>\n        <div class=\"price\">\n          {{ item.stock?.stockLevelStatus }}\n        </div>\n      </ng-template>\n    </a>\n  </ng-template>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.CmsComponentData }, { type: i2.MerchandisingCarouselComponentService }, { type: i3.RoutingService }, { type: i1.IntersectionService }, { type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,