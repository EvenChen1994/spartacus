/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import { Config } from '../../config/config-tokens';
import * as i0 from "@angular/core";
export class I18nConfig {
}
I18nConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: I18nConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
I18nConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: I18nConfig, providedIn: 'root', useExisting: Config });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: I18nConfig, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                    useExisting: Config,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi1jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9pMThuL2NvbmZpZy9pMThuLWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7O0FBVXBELE1BQU0sT0FBZ0IsVUFBVTs7dUdBQVYsVUFBVTsyR0FBVixVQUFVLGNBSGxCLE1BQU0sZUFDTCxNQUFNOzJGQUVDLFVBQVU7a0JBSi9CLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07b0JBQ2xCLFdBQVcsRUFBRSxNQUFNO2lCQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZyB9IGZyb20gJy4uLy4uL2NvbmZpZy9jb25maWctdG9rZW5zJztcbmltcG9ydCB7XG4gIFRyYW5zbGF0aW9uUmVzb3VyY2VLZXksXG4gIFRyYW5zbGF0aW9uUmVzb3VyY2VzLFxufSBmcm9tICcuLi90cmFuc2xhdGlvbi1yZXNvdXJjZXMnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290JyxcbiAgdXNlRXhpc3Rpbmc6IENvbmZpZyxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSTE4bkNvbmZpZyB7XG4gIGkxOG4/OiB7XG4gICAgLyoqXG4gICAgICogV2hlbiB0aGVyZSBhcmUgbWlzc2luZyB0cmFuc2xhdGlvbiByZXNvdXJjZXMgZm9yIHRoZSBhY3RpdmUgbGFuZ3VhZ2UsIHRoZSBmYWxsYmFjayBsYW5ndWFnZSB3aWxsIGJlIHVzZWQuXG4gICAgICovXG4gICAgZmFsbGJhY2tMYW5nPzogc3RyaW5nIHwgZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBDb25maWd1cmF0aW9uIGZvciBsYXp5IGxvYWRpbmcgb2YgdHJhbnNsYXRpb24gZmlsZXMuXG4gICAgICogRm9yIGVhZ2VyIGxvYWRpbmcgb2YgdHJhbnNsYXRpb25zIHBsZWFzZSB1c2UgY29uZmlnIG9wdGlvbiBgaTE4bi5yZXNvdXJjZXNgXG4gICAgICovXG5cbiAgICBiYWNrZW5kPzoge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgcGF0aCBmb3IgbG9hZGluZyBKU09OIHRyYW5zbGF0aW9ucyB2aWEgSFRUUCByZXF1ZXN0cy5cbiAgICAgICAqIFRoZSBwYXRoIHNob3VsZCBjb250YWluIHRoZSBmb2xsb3dpbmcgcGxhY2Vob2xkZXJzOlxuICAgICAgICogLSBge3tsbmd9fWAgZm9yIGxhbmd1YWdlXG4gICAgICAgKiAtIGB7e25zfX1gIGZvciB0aGUgbmFtZSBvZiBjaHVuay5cbiAgICAgICAqXG4gICAgICAgKiBFeGFtcGxlOlxuICAgICAgICogYGBgdHNcbiAgICAgICAqIGxvYWRQYXRoOiAnYXNzZXRzL2kxOG4tYXNzZXRzL3t7bG5nfX0ve3tuc319Lmpzb24nXG4gICAgICAgKiBgYGBcbiAgICAgICAqXG4gICAgICAgKiAqKk5PVEUqKjpcbiAgICAgICAqIFRoaXMgb3B0aW9uIGlzIE5PVCByZWNvbW1lbmRlZCBmb3IgbG9hZGluZyB0cmFuc2xhdGlvbnMgZnJvbSBsb2NhbCBhc3NldHMuXG4gICAgICAgKiBGb3IgdGhpcyBjYXNlLCB1c2UgdGhlIGNvbmZpZyBvcHRpb24gYGkxOG4uYmFja2VuZC5sb2FkZXJgIGluc3RlYWQsXG4gICAgICAgKiB3aGljaCBpcyBtb3JlIHBlcmZvcm1hbnQgKGVzcGVjaWFsbHkgaW4gU1NSKS5cbiAgICAgICAqXG4gICAgICAgKiBUaGlzIG9wdGlvbiBpcyByZWNvbW1lbmRlZCBPTkxZIGZvciBsb2FkaW5nIHRyYW5zbGF0aW9ucyByZXNvdXJjZXNcbiAgICAgICAqIGZyb20gYW4gZXh0ZXJuYWwgc2VydmVyLlxuICAgICAgICovXG5cbiAgICAgIGxvYWRQYXRoPzogc3RyaW5nO1xuXG4gICAgICAvKipcbiAgICAgICAqIEZ1bmN0aW9uIHRoYXQgbG9hZCB0cmFuc2xhdGlvbiByZXNvdXJjZXMgYXN5bmNocm9ub3VzbHkuXG4gICAgICAgKlxuICAgICAgICogUmV0dXJucyBhIFByb21pc2Ugd2l0aCB0cmFuc2xhdGlvbiByZXNvdXJjZXMgZm9yIHRoZSBnaXZlbiBsYW5ndWFnZSBhbmQgdGhlIGNodW5rIG5hbWUuXG4gICAgICAgKlxuICAgICAgICogVGhpcyBmdW5jdGlvbiBjYW4gdXNlIGUuZy4gYSBkeW5hbWljIGltcG9ydCgpIHRvIGNvZGUtc3BsaXQgYW5kIGxhenkgbG9hZFxuICAgICAgICogdGhlIHRyYW5zbGF0aW9uIHJlc291cmNlcy5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0gbG5nIGxhbmd1YWdlXG4gICAgICAgKiBAcGFyYW0gbnMgIHRyYW5zbGF0aW9uJ3MgY2h1bmsgbmFtZSAobmFtZXNwYWNlKVxuICAgICAgICogQGV4YW1wbGVcbiAgICAgICAqIGBgYHRzXG4gICAgICAgKiBsb2FkZXI6IChsYW5ndWFnZSwgY2h1bmtOYW1lKSA9PiBpbXBvcnQoYC4uLy4uL2Fzc2V0cy9pMThuLWFzc2V0cy8ke2xhbmd1YWdlfS8ke2NodW5rTmFtZX0uanNvbmApXG4gICAgICAgKiBgYGBcbiAgICAgICAqL1xuICAgICAgbG9hZGVyPzogKFxuICAgICAgICBsYW5ndWFnZTogc3RyaW5nLFxuICAgICAgICBjaHVua05hbWU6IHN0cmluZ1xuICAgICAgKSA9PiBQcm9taXNlPFRyYW5zbGF0aW9uUmVzb3VyY2VLZXk+O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZWZlcmVuY2UgdG8gdHJhbnNsYXRpb24gcmVzb3VyY2VzIHRoYXQgYXJlIGVhZ2VybHkgYnVuZGxlZCB3aXRoIEpTIGFwcC5cbiAgICAgKiBGb3IgbGF6eSBsb2FkaW5nIG9mIHRyYW5zbGF0aW9ucyBwbGVhc2UgdXNlIGNvbmZpZyBvcHRpb24gYGkxOG4uYmFja2VuZGAgaW5zdGVhZC5cbiAgICAgKi9cbiAgICByZXNvdXJjZXM/OiBUcmFuc2xhdGlvblJlc291cmNlcztcblxuICAgIC8qKlxuICAgICAqIExvZ3MgaTE4biBldmVudHMgKGxpa2UgbG9hZGluZyB0cmFuc2xhdGlvbiByZXNvdXJjZXMpIHRvIHRoZSBjb25zb2xlLiBEb24ndCB1c2UgaW4gcHJvZHVjdGlvbiFcbiAgICAgKi9cbiAgICBkZWJ1Zz86IGJvb2xlYW47XG5cbiAgICAvKipcbiAgICAgKiBNYXBwaW5nIHRoYXQgYXNzaWducyBrZXlzJyBuYW1lc3BhY2VzIHRvIHNwZWNpZmljIGNodW5rcy4gVGhlIG1haW4gcHVycG9zZSBvZiBjaHVua3MgaXMgdG8gbGF6eSBsb2FkIHRoZW0uXG4gICAgICovXG4gICAgY2h1bmtzPzoge1xuICAgICAgW2NodW5rOiBzdHJpbmddOiBzdHJpbmdbXTtcbiAgICB9O1xuICB9O1xufVxuXG5kZWNsYXJlIG1vZHVsZSAnLi4vLi4vY29uZmlnL2NvbmZpZy10b2tlbnMnIHtcbiAgaW50ZXJmYWNlIENvbmZpZyBleHRlbmRzIEkxOG5Db25maWcge31cbn1cbiJdfQ==