/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component } from '@angular/core';
import { take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "../services";
import * as i3 from "@spartacus/core";
export var SWITCH_CUSTOMER_DIALOG_ACTION;
(function (SWITCH_CUSTOMER_DIALOG_ACTION) {
    SWITCH_CUSTOMER_DIALOG_ACTION["CANCEL"] = "CANCEL";
    SWITCH_CUSTOMER_DIALOG_ACTION["SWITCH"] = "SWITCH";
})(SWITCH_CUSTOMER_DIALOG_ACTION || (SWITCH_CUSTOMER_DIALOG_ACTION = {}));
export class AsmSwitchCustomerDialogComponent {
    constructor(launchDialogService, asmComponentService) {
        this.launchDialogService = launchDialogService;
        this.asmComponentService = asmComponentService;
        this.SWITCH_CUSTOMER_DIALOG_ACTION = SWITCH_CUSTOMER_DIALOG_ACTION;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: true,
            focusOnEscape: true,
        };
    }
    ngOnInit() {
        this.launchDialogService.data$
            .pipe(take(1))
            .subscribe((data) => {
            this.curCustomerName = data.curCustomer.name || '';
            this.switchCustomerName = data.switchCustomer.name || '';
        });
    }
    closeModal(reason) {
        if (reason === SWITCH_CUSTOMER_DIALOG_ACTION.SWITCH) {
            this.asmComponentService.logoutCustomer();
        }
        this.launchDialogService.closeDialog(reason);
    }
}
AsmSwitchCustomerDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmSwitchCustomerDialogComponent, deps: [{ token: i1.LaunchDialogService }, { token: i2.AsmComponentService }], target: i0.ɵɵFactoryTarget.Component });
AsmSwitchCustomerDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmSwitchCustomerDialogComponent, selector: "cx-asm-switch-customer-dialog", ngImport: i0, template: "<div\n  class=\"cx-asm-switch-customer-dialog cx-modal-container cx-asm-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.CANCEL)\"\n>\n  <div class=\"cx-modal-content\">\n    <!-- Modal Header -->\n    <div class=\"cx-dialog-header modal-header\">\n      <div>\n        <span>\n          <cx-icon type=\"WARNING\"></cx-icon>\n        </span>\n        <span id=\"asm-switch-customer-dialog-title\" class=\"title modal-title\">\n          {{ 'asm.switchCustomer.dialog.title' | cxTranslate }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-dialog-row switch-customer-content\">\n        <div class=\"cx-dialog-item\">\n          {{\n            'asm.switchCustomer.dialog.body'\n              | cxTranslate\n                : {\n                    customerA: curCustomerName,\n                    customerB: switchCustomerName\n                  }\n          }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal Footer -->\n    <div class=\"cx-dialog-footer modal-footer\">\n      <button\n        (click)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.SWITCH)\"\n        [attr.aria-label]=\"\n          'asm.switchCustomer.dialog.actions.switch' | cxTranslate\n        \"\n        class=\"btn btn-primary\"\n        type=\"button\"\n      >\n        {{ 'asm.switchCustomer.dialog.actions.switch' | cxTranslate }}\n      </button>\n\n      <button\n        (click)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.CANCEL)\"\n        [attr.aria-label]=\"'common.cancel' | cxTranslate\"\n        class=\"btn btn-secondary\"\n        type=\"button\"\n      >\n        {{ 'common.cancel' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i1.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i1.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmSwitchCustomerDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-asm-switch-customer-dialog', template: "<div\n  class=\"cx-asm-switch-customer-dialog cx-modal-container cx-asm-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.CANCEL)\"\n>\n  <div class=\"cx-modal-content\">\n    <!-- Modal Header -->\n    <div class=\"cx-dialog-header modal-header\">\n      <div>\n        <span>\n          <cx-icon type=\"WARNING\"></cx-icon>\n        </span>\n        <span id=\"asm-switch-customer-dialog-title\" class=\"title modal-title\">\n          {{ 'asm.switchCustomer.dialog.title' | cxTranslate }}\n        </span>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-dialog-row switch-customer-content\">\n        <div class=\"cx-dialog-item\">\n          {{\n            'asm.switchCustomer.dialog.body'\n              | cxTranslate\n                : {\n                    customerA: curCustomerName,\n                    customerB: switchCustomerName\n                  }\n          }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal Footer -->\n    <div class=\"cx-dialog-footer modal-footer\">\n      <button\n        (click)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.SWITCH)\"\n        [attr.aria-label]=\"\n          'asm.switchCustomer.dialog.actions.switch' | cxTranslate\n        \"\n        class=\"btn btn-primary\"\n        type=\"button\"\n      >\n        {{ 'asm.switchCustomer.dialog.actions.switch' | cxTranslate }}\n      </button>\n\n      <button\n        (click)=\"closeModal(SWITCH_CUSTOMER_DIALOG_ACTION.CANCEL)\"\n        [attr.aria-label]=\"'common.cancel' | cxTranslate\"\n        class=\"btn btn-secondary\"\n        type=\"button\"\n      >\n        {{ 'common.cancel' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.LaunchDialogService }, { type: i2.AsmComponentService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLXN3aXRjaC1jdXN0b21lci1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL2FzbS9jb21wb25lbnRzL2FzbS1zd2l0Y2gtY3VzdG9tZXItZGlhbG9nL2FzbS1zd2l0Y2gtY3VzdG9tZXItZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9hc20vY29tcG9uZW50cy9hc20tc3dpdGNoLWN1c3RvbWVyLWRpYWxvZy9hc20tc3dpdGNoLWN1c3RvbWVyLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUdsRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7O0FBR3RDLE1BQU0sQ0FBTixJQUFZLDZCQUdYO0FBSEQsV0FBWSw2QkFBNkI7SUFDdkMsa0RBQWlCLENBQUE7SUFDakIsa0RBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUhXLDZCQUE2QixLQUE3Qiw2QkFBNkIsUUFHeEM7QUFXRCxNQUFNLE9BQU8sZ0NBQWdDO0lBYzNDLFlBQ1ksbUJBQXdDLEVBQ3hDLG1CQUF3QztRQUR4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO1FBQ3hDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFmcEQsa0NBQTZCLEdBQUcsNkJBQTZCLENBQUM7UUFFOUQsZ0JBQVcsR0FBZ0I7WUFDekIsSUFBSSxFQUFFLElBQUk7WUFDVixLQUFLLEVBQUUsSUFBSTtZQUNYLFNBQVMsRUFBRSxJQUFJO1lBQ2YsYUFBYSxFQUFFLElBQUk7U0FDcEIsQ0FBQztJQVNDLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUs7YUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNiLFNBQVMsQ0FBQyxDQUFDLElBQXdCLEVBQUUsRUFBRTtZQUN0QyxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNuRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQzNELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELFVBQVUsQ0FBQyxNQUFxQztRQUM5QyxJQUFJLE1BQU0sS0FBSyw2QkFBNkIsQ0FBQyxNQUFNLEVBQUU7WUFDbkQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQzNDO1FBQ0QsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDOzs2SEFqQ1UsZ0NBQWdDO2lIQUFoQyxnQ0FBZ0MscUVDMUI3Qyx3dkRBMERBOzJGRGhDYSxnQ0FBZ0M7a0JBSjVDLFNBQVM7K0JBQ0UsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjMgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgRm9jdXNDb25maWcsIExhdW5jaERpYWxvZ1NlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgdGFrZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IEFzbUNvbXBvbmVudFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcyc7XG5cbmV4cG9ydCBlbnVtIFNXSVRDSF9DVVNUT01FUl9ESUFMT0dfQUNUSU9OIHtcbiAgQ0FOQ0VMID0gJ0NBTkNFTCcsXG4gIFNXSVRDSCA9ICdTV0lUQ0gnLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN3aXRjaEN1c3RvbWVyRGF0YSB7XG4gIGN1ckN1c3RvbWVyOiBVc2VyO1xuICBzd2l0Y2hDdXN0b21lcjogVXNlcjtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtYXNtLXN3aXRjaC1jdXN0b21lci1kaWFsb2cnLFxuICB0ZW1wbGF0ZVVybDogJy4vYXNtLXN3aXRjaC1jdXN0b21lci1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBBc21Td2l0Y2hDdXN0b21lckRpYWxvZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIFNXSVRDSF9DVVNUT01FUl9ESUFMT0dfQUNUSU9OID0gU1dJVENIX0NVU1RPTUVSX0RJQUxPR19BQ1RJT047XG5cbiAgZm9jdXNDb25maWc6IEZvY3VzQ29uZmlnID0ge1xuICAgIHRyYXA6IHRydWUsXG4gICAgYmxvY2s6IHRydWUsXG4gICAgYXV0b2ZvY3VzOiB0cnVlLFxuICAgIGZvY3VzT25Fc2NhcGU6IHRydWUsXG4gIH07XG5cbiAgY3VyQ3VzdG9tZXJOYW1lOiBzdHJpbmc7XG4gIHN3aXRjaEN1c3RvbWVyTmFtZTogc3RyaW5nO1xuICBpY29uVHlwZXM6IGFueTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgbGF1bmNoRGlhbG9nU2VydmljZTogTGF1bmNoRGlhbG9nU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgYXNtQ29tcG9uZW50U2VydmljZTogQXNtQ29tcG9uZW50U2VydmljZVxuICApIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5sYXVuY2hEaWFsb2dTZXJ2aWNlLmRhdGEkXG4gICAgICAucGlwZSh0YWtlKDEpKVxuICAgICAgLnN1YnNjcmliZSgoZGF0YTogU3dpdGNoQ3VzdG9tZXJEYXRhKSA9PiB7XG4gICAgICAgIHRoaXMuY3VyQ3VzdG9tZXJOYW1lID0gZGF0YS5jdXJDdXN0b21lci5uYW1lIHx8ICcnO1xuICAgICAgICB0aGlzLnN3aXRjaEN1c3RvbWVyTmFtZSA9IGRhdGEuc3dpdGNoQ3VzdG9tZXIubmFtZSB8fCAnJztcbiAgICAgIH0pO1xuICB9XG5cbiAgY2xvc2VNb2RhbChyZWFzb246IFNXSVRDSF9DVVNUT01FUl9ESUFMT0dfQUNUSU9OKTogdm9pZCB7XG4gICAgaWYgKHJlYXNvbiA9PT0gU1dJVENIX0NVU1RPTUVSX0RJQUxPR19BQ1RJT04uU1dJVENIKSB7XG4gICAgICB0aGlzLmFzbUNvbXBvbmVudFNlcnZpY2UubG9nb3V0Q3VzdG9tZXIoKTtcbiAgICB9XG4gICAgdGhpcy5sYXVuY2hEaWFsb2dTZXJ2aWNlLmNsb3NlRGlhbG9nKHJlYXNvbik7XG4gIH1cbn1cbiIsIjxkaXZcbiAgY2xhc3M9XCJjeC1hc20tc3dpdGNoLWN1c3RvbWVyLWRpYWxvZyBjeC1tb2RhbC1jb250YWluZXIgY3gtYXNtLWRpYWxvZ1wiXG4gIFtjeEZvY3VzXT1cImZvY3VzQ29uZmlnXCJcbiAgKGVzYyk9XCJjbG9zZU1vZGFsKFNXSVRDSF9DVVNUT01FUl9ESUFMT0dfQUNUSU9OLkNBTkNFTClcIlxuPlxuICA8ZGl2IGNsYXNzPVwiY3gtbW9kYWwtY29udGVudFwiPlxuICAgIDwhLS0gTW9kYWwgSGVhZGVyIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjeC1kaWFsb2ctaGVhZGVyIG1vZGFsLWhlYWRlclwiPlxuICAgICAgPGRpdj5cbiAgICAgICAgPHNwYW4+XG4gICAgICAgICAgPGN4LWljb24gdHlwZT1cIldBUk5JTkdcIj48L2N4LWljb24+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gaWQ9XCJhc20tc3dpdGNoLWN1c3RvbWVyLWRpYWxvZy10aXRsZVwiIGNsYXNzPVwidGl0bGUgbW9kYWwtdGl0bGVcIj5cbiAgICAgICAgICB7eyAnYXNtLnN3aXRjaEN1c3RvbWVyLmRpYWxvZy50aXRsZScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDwhLS0gTW9kYWwgQm9keSAtLT5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtZGlhbG9nLWJvZHkgbW9kYWwtYm9keVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImN4LWRpYWxvZy1yb3cgc3dpdGNoLWN1c3RvbWVyLWNvbnRlbnRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImN4LWRpYWxvZy1pdGVtXCI+XG4gICAgICAgICAge3tcbiAgICAgICAgICAgICdhc20uc3dpdGNoQ3VzdG9tZXIuZGlhbG9nLmJvZHknXG4gICAgICAgICAgICAgIHwgY3hUcmFuc2xhdGVcbiAgICAgICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tZXJBOiBjdXJDdXN0b21lck5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGN1c3RvbWVyQjogc3dpdGNoQ3VzdG9tZXJOYW1lXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDwhLS0gTW9kYWwgRm9vdGVyIC0tPlxuICAgIDxkaXYgY2xhc3M9XCJjeC1kaWFsb2ctZm9vdGVyIG1vZGFsLWZvb3RlclwiPlxuICAgICAgPGJ1dHRvblxuICAgICAgICAoY2xpY2spPVwiY2xvc2VNb2RhbChTV0lUQ0hfQ1VTVE9NRVJfRElBTE9HX0FDVElPTi5TV0lUQ0gpXCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJcbiAgICAgICAgICAnYXNtLnN3aXRjaEN1c3RvbWVyLmRpYWxvZy5hY3Rpb25zLnN3aXRjaCcgfCBjeFRyYW5zbGF0ZVxuICAgICAgICBcIlxuICAgICAgICBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiXG4gICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgPlxuICAgICAgICB7eyAnYXNtLnN3aXRjaEN1c3RvbWVyLmRpYWxvZy5hY3Rpb25zLnN3aXRjaCcgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgPC9idXR0b24+XG5cbiAgICAgIDxidXR0b25cbiAgICAgICAgKGNsaWNrKT1cImNsb3NlTW9kYWwoU1dJVENIX0NVU1RPTUVSX0RJQUxPR19BQ1RJT04uQ0FOQ0VMKVwiXG4gICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiJ2NvbW1vbi5jYW5jZWwnIHwgY3hUcmFuc2xhdGVcIlxuICAgICAgICBjbGFzcz1cImJ0biBidG4tc2Vjb25kYXJ5XCJcbiAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICA+XG4gICAgICAgIHt7ICdjb21tb24uY2FuY2VsJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==