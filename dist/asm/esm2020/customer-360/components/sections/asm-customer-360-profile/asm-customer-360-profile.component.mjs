/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { combineLatest } from 'rxjs';
import { map } from 'rxjs/operators';
import { PaymentCardCode, } from '@spartacus/asm/customer-360/root';
import * as i0 from "@angular/core";
import * as i1 from "../asm-customer-360-section-context.model";
import * as i2 from "@spartacus/core";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
export class AsmCustomer360ProfileComponent {
    constructor(sectionContext, translation) {
        this.sectionContext = sectionContext;
        this.translation = translation;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: 'customer-list-selector',
            focusOnEscape: true,
        };
        this.iconTypes = ICON_TYPE;
    }
    ngOnInit() {
        this.customerProfileData$ = this.sectionContext.data$.pipe(map((data) => {
            return data?.profile;
        }));
    }
    getCardContent({ defaultPayment, expiryMonth, expiryYear, cardNumber, cardType, }) {
        return combineLatest([
            this.translation.translate('paymentCard.expires', {
                month: expiryMonth,
                year: expiryYear,
            }),
            this.translation.translate('paymentCard.defaultPaymentMethod'),
        ]).pipe(map(([textExpires, textDefaultPaymentMethod]) => {
            const card = {
                role: 'region',
                header: defaultPayment ? textDefaultPaymentMethod : undefined,
                text: [cardNumber ?? '', textExpires],
                img: this.getCardIcon(cardType?.code ?? ''),
                label: defaultPayment
                    ? 'paymentCard.defaultPaymentLabel'
                    : 'paymentCard.additionalPaymentLabel',
            };
            return card;
        }));
    }
    getCardIcon(code) {
        let ccIcon;
        if (code === PaymentCardCode.VISA) {
            ccIcon = this.iconTypes.VISA;
        }
        else if (code === PaymentCardCode.MASTER ||
            code === PaymentCardCode.MASTERCARD_EUROCARD) {
            ccIcon = this.iconTypes.MASTER_CARD;
        }
        else if (code === PaymentCardCode.DINERS) {
            ccIcon = this.iconTypes.DINERS_CLUB;
        }
        else if (code === PaymentCardCode.AMEX) {
            ccIcon = this.iconTypes.AMEX;
        }
        else {
            ccIcon = this.iconTypes.CREDIT_CARD;
        }
        return ccIcon;
    }
}
AsmCustomer360ProfileComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ProfileComponent, deps: [{ token: i1.AsmCustomer360SectionContext }, { token: i2.TranslationService }], target: i0.ɵɵFactoryTarget.Component });
AsmCustomer360ProfileComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmCustomer360ProfileComponent, selector: "cx-asm-customer-360-profile", ngImport: i0, template: "<div class=\"cx-asm-customer-360-profile\">\n  <ng-container *ngIf=\"customerProfileData$ | async as customerProfileData\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <h4 class=\"mt-4 mb-3\">\n            {{ 'asmCustomer360.profile.address' | cxTranslate }}\n          </h4>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.billingAddress' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container billing-address\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                address;\n                context: { address: customerProfileData?.billingAddress }\n              \"\n            ></ng-container>\n          </div>\n        </div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.deliveryAddress' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container delivery-address\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                address;\n                context: { address: customerProfileData?.deliveryAddress }\n              \"\n            ></ng-container>\n          </div>\n        </div>\n        <div class=\"w-100 d-lg-none\"></div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.phone1' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container profile-phone1\">\n            {{ customerProfileData?.phone1 }}\n          </div>\n        </div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.phone2' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container profile-phone2\">\n            {{ customerProfileData?.phone2 }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <h4 class=\"mt-4 mb-4\">\n      {{ 'asmCustomer360.profile.paymentMethodHeader' | cxTranslate }}\n    </h4>\n    <div class=\"cx-asm-profile-cards\">\n      <div\n        class=\"cx-asm-profile-card\"\n        *ngFor=\"\n          let paymentInfoList of customerProfileData.paymentDetails;\n          let i = index\n        \"\n      >\n        <cx-card\n          [index]=\"i\"\n          [border]=\"true\"\n          [fitToContainer]=\"true\"\n          [content]=\"getCardContent(paymentInfoList) | async\"\n        ></cx-card>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #address let-address=\"address\">\n    <div class=\"cx-asm-profile-address-cell\">\n      <div class=\"address-line1\">\n        {{ address?.line1 }}\n      </div>\n      <div class=\"address-line2\">\n        {{ address?.line2 }}\n      </div>\n      <div>\n        <span class=\"address-town\" *ngIf=\"address?.town\"\n          >{{ address.town }},\n        </span>\n        <span class=\"address-region\" *ngIf=\"address?.region?.name\"\n          >{{ address.region.name }},\n        </span>\n        <span class=\"address-country\">{{ address?.country?.name }}</span>\n      </div>\n    </div>\n  </ng-template>\n</div>\n", dependencies: [{ kind: "component", type: i3.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ProfileComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-asm-customer-360-profile', template: "<div class=\"cx-asm-customer-360-profile\">\n  <ng-container *ngIf=\"customerProfileData$ | async as customerProfileData\">\n    <div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <h4 class=\"mt-4 mb-3\">\n            {{ 'asmCustomer360.profile.address' | cxTranslate }}\n          </h4>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.billingAddress' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container billing-address\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                address;\n                context: { address: customerProfileData?.billingAddress }\n              \"\n            ></ng-container>\n          </div>\n        </div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.deliveryAddress' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container delivery-address\">\n            <ng-container\n              *ngTemplateOutlet=\"\n                address;\n                context: { address: customerProfileData?.deliveryAddress }\n              \"\n            ></ng-container>\n          </div>\n        </div>\n        <div class=\"w-100 d-lg-none\"></div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.phone1' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container profile-phone1\">\n            {{ customerProfileData?.phone1 }}\n          </div>\n        </div>\n        <div class=\"col\">\n          <h5 class=\"cx-asm-profile-subheader\">\n            {{ 'asmCustomer360.profile.phone2' | cxTranslate }}\n          </h5>\n          <div class=\"cx-asm-profile-container profile-phone2\">\n            {{ customerProfileData?.phone2 }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <h4 class=\"mt-4 mb-4\">\n      {{ 'asmCustomer360.profile.paymentMethodHeader' | cxTranslate }}\n    </h4>\n    <div class=\"cx-asm-profile-cards\">\n      <div\n        class=\"cx-asm-profile-card\"\n        *ngFor=\"\n          let paymentInfoList of customerProfileData.paymentDetails;\n          let i = index\n        \"\n      >\n        <cx-card\n          [index]=\"i\"\n          [border]=\"true\"\n          [fitToContainer]=\"true\"\n          [content]=\"getCardContent(paymentInfoList) | async\"\n        ></cx-card>\n      </div>\n    </div>\n  </ng-container>\n  <ng-template #address let-address=\"address\">\n    <div class=\"cx-asm-profile-address-cell\">\n      <div class=\"address-line1\">\n        {{ address?.line1 }}\n      </div>\n      <div class=\"address-line2\">\n        {{ address?.line2 }}\n      </div>\n      <div>\n        <span class=\"address-town\" *ngIf=\"address?.town\"\n          >{{ address.town }},\n        </span>\n        <span class=\"address-region\" *ngIf=\"address?.region?.name\"\n          >{{ address.region.name }},\n        </span>\n        <span class=\"address-country\">{{ address?.country?.name }}</span>\n      </div>\n    </div>\n  </ng-template>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AsmCustomer360SectionContext }, { type: i2.TranslationService }]; } });
//# sourceMappingURL=data:application/json;base64,