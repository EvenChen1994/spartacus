/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { forkJoin, of } from 'rxjs';
import { concatMap, filter, map, take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../asm-customer-360-section-context.model";
import * as i2 from "@spartacus/core";
import * as i3 from "@angular/common";
import * as i4 from "../../asm-customer-360-product-listing/asm-customer-360-product-listing.component";
export class AsmCustomer360ActiveCartComponent {
    constructor(sectionContext, productService) {
        this.sectionContext = sectionContext;
        this.productService = productService;
        this.activeCart$ = this.sectionContext.data$.pipe(map((activeCart) => {
            return activeCart.cart;
        }));
        this.productItems$ = this.activeCart$.pipe(concatMap((cart) => {
            if (!cart?.entries?.length) {
                return of([]);
            }
            else {
                return forkJoin(cart.entries.map((entry) => {
                    return this.productService
                        .get(entry.productCode, "details" /* ProductScope.DETAILS */)
                        .pipe(filter((product) => Boolean(product)), map((product) => {
                        return {
                            ...product,
                            quantity: entry.quantity,
                            basePrice: entry.basePrice,
                            totalPrice: entry.totalPrice,
                        };
                    }), take(1));
                }));
            }
        }));
    }
}
AsmCustomer360ActiveCartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ActiveCartComponent, deps: [{ token: i1.AsmCustomer360SectionContext }, { token: i2.ProductService }], target: i0.ɵɵFactoryTarget.Component });
AsmCustomer360ActiveCartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmCustomer360ActiveCartComponent, selector: "cx-asm-customer-360-active-cart", ngImport: i0, template: "<cx-asm-customer-360-product-listing\n  *ngIf=\"productItems$ | async as productItems\"\n  [emptyResultDescription]=\"\n    'asmCustomer360.activeCart.emptyDescription' | cxTranslate\n  \"\n  [headerInactive]=\"true\"\n  [headerTemplate]=\"headerTemplate\"\n  [headerText]=\"'asmCustomer360.activeCart.header' | cxTranslate\"\n  [products]=\"productItems\"\n  (selectProduct)=\"\n    sectionContext.navigate$.next({ cxRoute: 'product', params: $event })\n  \"\n>\n</cx-asm-customer-360-product-listing>\n\n<ng-template #headerTemplate>\n  <ng-container *ngIf=\"activeCart$ | async as activeCart\">\n    <button\n      [attr.aria-label]=\"\n        'asmCustomer360.activeCart.aria.linkLabel'\n          | cxTranslate: { code: activeCart.code }\n      \"\n      class=\"cx-overview-title-link link\"\n      (click)=\"sectionContext.navigate$.next({ cxRoute: 'cart' })\"\n    >\n      {{ activeCart.code }}\n    </button>\n    <div class=\"cart-total-no-items\">\n      {{\n        'asmCustomer360.productListing.totalNoItems'\n          | cxTranslate: { count: activeCart.totalItemCount }\n      }}\n    </div>\n    <div class=\"cart-divider\"></div>\n    <div class=\"cart-total-price\">\n      {{\n        'asmCustomer360.productListing.totalPrice'\n          | cxTranslate: { price: activeCart.totalPrice }\n      }}\n    </div>\n  </ng-container>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.AsmCustomer360ProductListingComponent, selector: "cx-asm-customer-360-product-listing", inputs: ["emptyResultDescription", "headerInactive", "headerText", "products", "headerTemplate"], outputs: ["clickHeader", "selectProduct"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ActiveCartComponent, decorators: [{
            type: Component,
            args: [{ changeDetection: ChangeDetectionStrategy.OnPush, selector: 'cx-asm-customer-360-active-cart', template: "<cx-asm-customer-360-product-listing\n  *ngIf=\"productItems$ | async as productItems\"\n  [emptyResultDescription]=\"\n    'asmCustomer360.activeCart.emptyDescription' | cxTranslate\n  \"\n  [headerInactive]=\"true\"\n  [headerTemplate]=\"headerTemplate\"\n  [headerText]=\"'asmCustomer360.activeCart.header' | cxTranslate\"\n  [products]=\"productItems\"\n  (selectProduct)=\"\n    sectionContext.navigate$.next({ cxRoute: 'product', params: $event })\n  \"\n>\n</cx-asm-customer-360-product-listing>\n\n<ng-template #headerTemplate>\n  <ng-container *ngIf=\"activeCart$ | async as activeCart\">\n    <button\n      [attr.aria-label]=\"\n        'asmCustomer360.activeCart.aria.linkLabel'\n          | cxTranslate: { code: activeCart.code }\n      \"\n      class=\"cx-overview-title-link link\"\n      (click)=\"sectionContext.navigate$.next({ cxRoute: 'cart' })\"\n    >\n      {{ activeCart.code }}\n    </button>\n    <div class=\"cart-total-no-items\">\n      {{\n        'asmCustomer360.productListing.totalNoItems'\n          | cxTranslate: { count: activeCart.totalItemCount }\n      }}\n    </div>\n    <div class=\"cart-divider\"></div>\n    <div class=\"cart-total-price\">\n      {{\n        'asmCustomer360.productListing.totalPrice'\n          | cxTranslate: { price: activeCart.totalPrice }\n      }}\n    </div>\n  </ng-container>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AsmCustomer360SectionContext }, { type: i2.ProductService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWN1c3RvbWVyLTM2MC1hY3RpdmUtY2FydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvYXNtL2N1c3RvbWVyLTM2MC9jb21wb25lbnRzL3NlY3Rpb25zL2FzbS1jdXN0b21lci0zNjAtYWN0aXZlLWNhcnQvYXNtLWN1c3RvbWVyLTM2MC1hY3RpdmUtY2FydC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvYXNtL2N1c3RvbWVyLTM2MC9jb21wb25lbnRzL3NlY3Rpb25zL2FzbS1jdXN0b21lci0zNjAtYWN0aXZlLWNhcnQvYXNtLWN1c3RvbWVyLTM2MC1hY3RpdmUtY2FydC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVuRSxPQUFPLEVBQUUsUUFBUSxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNoRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQWE5RCxNQUFNLE9BQU8saUNBQWlDO0lBSTVDLFlBQ1MsY0FBc0UsRUFDbkUsY0FBOEI7UUFEakMsbUJBQWMsR0FBZCxjQUFjLENBQXdEO1FBQ25FLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUV4QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLElBQUksQ0FDL0MsR0FBRyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUU7WUFDakIsT0FBTyxVQUFVLENBQUMsSUFBSSxDQUFDO1FBQ3pCLENBQUMsQ0FBQyxDQUNILENBQUM7UUFDRixJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUN4QyxTQUFTLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNqQixJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUU7Z0JBQzFCLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2FBQ2Y7aUJBQU07Z0JBQ0wsT0FBTyxRQUFRLENBQ2IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtvQkFDekIsT0FBTyxJQUFJLENBQUMsY0FBYzt5QkFDdkIsR0FBRyxDQUFDLEtBQUssQ0FBQyxXQUFXLHVDQUF1Qjt5QkFDNUMsSUFBSSxDQUNILE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBc0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUN6RCxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTt3QkFDZCxPQUFPOzRCQUNMLEdBQUcsT0FBTzs0QkFDVixRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7NEJBQ3hCLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUzs0QkFDMUIsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVO3lCQUNkLENBQUM7b0JBQ25CLENBQUMsQ0FBQyxFQUNGLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDUixDQUFDO2dCQUNOLENBQUMsQ0FBQyxDQUNILENBQUM7YUFDSDtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzs4SEF2Q1UsaUNBQWlDO2tIQUFqQyxpQ0FBaUMsdUVDdEI5Qyx3MUNBMENBOzJGRHBCYSxpQ0FBaUM7a0JBTDdDLFNBQVM7c0NBQ1MsdUJBQXVCLENBQUMsTUFBTSxZQUNyQyxpQ0FBaUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMyBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm9kdWN0LCBQcm9kdWN0U2NvcGUsIFByb2R1Y3RTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IGZvcmtKb2luLCBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgY29uY2F0TWFwLCBmaWx0ZXIsIG1hcCwgdGFrZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IFByb2R1Y3RJdGVtIH0gZnJvbSAnLi4vLi4vYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWxpc3RpbmcvcHJvZHVjdC1pdGVtLm1vZGVsJztcbmltcG9ydCB7IEFzbUN1c3RvbWVyMzYwU2VjdGlvbkNvbnRleHQgfSBmcm9tICcuLi9hc20tY3VzdG9tZXItMzYwLXNlY3Rpb24tY29udGV4dC5tb2RlbCc7XG5pbXBvcnQge1xuICBBc21DdXN0b21lcjM2MEFjdGl2ZUNhcnQsXG4gIEN1c3RvbWVyQ2FydCxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9hc20vY3VzdG9tZXItMzYwL3Jvb3QnO1xuXG5AQ29tcG9uZW50KHtcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHNlbGVjdG9yOiAnY3gtYXNtLWN1c3RvbWVyLTM2MC1hY3RpdmUtY2FydCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hc20tY3VzdG9tZXItMzYwLWFjdGl2ZS1jYXJ0LmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQXNtQ3VzdG9tZXIzNjBBY3RpdmVDYXJ0Q29tcG9uZW50IHtcbiAgcHJvZHVjdEl0ZW1zJDogT2JzZXJ2YWJsZTxBcnJheTxQcm9kdWN0SXRlbT4+O1xuICBhY3RpdmVDYXJ0JDogT2JzZXJ2YWJsZTxDdXN0b21lckNhcnQgfCB1bmRlZmluZWQ+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBzZWN0aW9uQ29udGV4dDogQXNtQ3VzdG9tZXIzNjBTZWN0aW9uQ29udGV4dDxBc21DdXN0b21lcjM2MEFjdGl2ZUNhcnQ+LFxuICAgIHByb3RlY3RlZCBwcm9kdWN0U2VydmljZTogUHJvZHVjdFNlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5hY3RpdmVDYXJ0JCA9IHRoaXMuc2VjdGlvbkNvbnRleHQuZGF0YSQucGlwZShcbiAgICAgIG1hcCgoYWN0aXZlQ2FydCkgPT4ge1xuICAgICAgICByZXR1cm4gYWN0aXZlQ2FydC5jYXJ0O1xuICAgICAgfSlcbiAgICApO1xuICAgIHRoaXMucHJvZHVjdEl0ZW1zJCA9IHRoaXMuYWN0aXZlQ2FydCQucGlwZShcbiAgICAgIGNvbmNhdE1hcCgoY2FydCkgPT4ge1xuICAgICAgICBpZiAoIWNhcnQ/LmVudHJpZXM/Lmxlbmd0aCkge1xuICAgICAgICAgIHJldHVybiBvZihbXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGZvcmtKb2luKFxuICAgICAgICAgICAgY2FydC5lbnRyaWVzLm1hcCgoZW50cnkpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvZHVjdFNlcnZpY2VcbiAgICAgICAgICAgICAgICAuZ2V0KGVudHJ5LnByb2R1Y3RDb2RlLCBQcm9kdWN0U2NvcGUuREVUQUlMUylcbiAgICAgICAgICAgICAgICAucGlwZShcbiAgICAgICAgICAgICAgICAgIGZpbHRlcigocHJvZHVjdCk6IHByb2R1Y3QgaXMgUHJvZHVjdCA9PiBCb29sZWFuKHByb2R1Y3QpKSxcbiAgICAgICAgICAgICAgICAgIG1hcCgocHJvZHVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgIC4uLnByb2R1Y3QsXG4gICAgICAgICAgICAgICAgICAgICAgcXVhbnRpdHk6IGVudHJ5LnF1YW50aXR5LFxuICAgICAgICAgICAgICAgICAgICAgIGJhc2VQcmljZTogZW50cnkuYmFzZVByaWNlLFxuICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUHJpY2U6IGVudHJ5LnRvdGFsUHJpY2UsXG4gICAgICAgICAgICAgICAgICAgIH0gYXMgUHJvZHVjdEl0ZW07XG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIHRha2UoMSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIjxjeC1hc20tY3VzdG9tZXItMzYwLXByb2R1Y3QtbGlzdGluZ1xuICAqbmdJZj1cInByb2R1Y3RJdGVtcyQgfCBhc3luYyBhcyBwcm9kdWN0SXRlbXNcIlxuICBbZW1wdHlSZXN1bHREZXNjcmlwdGlvbl09XCJcbiAgICAnYXNtQ3VzdG9tZXIzNjAuYWN0aXZlQ2FydC5lbXB0eURlc2NyaXB0aW9uJyB8IGN4VHJhbnNsYXRlXG4gIFwiXG4gIFtoZWFkZXJJbmFjdGl2ZV09XCJ0cnVlXCJcbiAgW2hlYWRlclRlbXBsYXRlXT1cImhlYWRlclRlbXBsYXRlXCJcbiAgW2hlYWRlclRleHRdPVwiJ2FzbUN1c3RvbWVyMzYwLmFjdGl2ZUNhcnQuaGVhZGVyJyB8IGN4VHJhbnNsYXRlXCJcbiAgW3Byb2R1Y3RzXT1cInByb2R1Y3RJdGVtc1wiXG4gIChzZWxlY3RQcm9kdWN0KT1cIlxuICAgIHNlY3Rpb25Db250ZXh0Lm5hdmlnYXRlJC5uZXh0KHsgY3hSb3V0ZTogJ3Byb2R1Y3QnLCBwYXJhbXM6ICRldmVudCB9KVxuICBcIlxuPlxuPC9jeC1hc20tY3VzdG9tZXItMzYwLXByb2R1Y3QtbGlzdGluZz5cblxuPG5nLXRlbXBsYXRlICNoZWFkZXJUZW1wbGF0ZT5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImFjdGl2ZUNhcnQkIHwgYXN5bmMgYXMgYWN0aXZlQ2FydFwiPlxuICAgIDxidXR0b25cbiAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiXG4gICAgICAgICdhc21DdXN0b21lcjM2MC5hY3RpdmVDYXJ0LmFyaWEubGlua0xhYmVsJ1xuICAgICAgICAgIHwgY3hUcmFuc2xhdGU6IHsgY29kZTogYWN0aXZlQ2FydC5jb2RlIH1cbiAgICAgIFwiXG4gICAgICBjbGFzcz1cImN4LW92ZXJ2aWV3LXRpdGxlLWxpbmsgbGlua1wiXG4gICAgICAoY2xpY2spPVwic2VjdGlvbkNvbnRleHQubmF2aWdhdGUkLm5leHQoeyBjeFJvdXRlOiAnY2FydCcgfSlcIlxuICAgID5cbiAgICAgIHt7IGFjdGl2ZUNhcnQuY29kZSB9fVxuICAgIDwvYnV0dG9uPlxuICAgIDxkaXYgY2xhc3M9XCJjYXJ0LXRvdGFsLW5vLWl0ZW1zXCI+XG4gICAgICB7e1xuICAgICAgICAnYXNtQ3VzdG9tZXIzNjAucHJvZHVjdExpc3RpbmcudG90YWxOb0l0ZW1zJ1xuICAgICAgICAgIHwgY3hUcmFuc2xhdGU6IHsgY291bnQ6IGFjdGl2ZUNhcnQudG90YWxJdGVtQ291bnQgfVxuICAgICAgfX1cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY2FydC1kaXZpZGVyXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImNhcnQtdG90YWwtcHJpY2VcIj5cbiAgICAgIHt7XG4gICAgICAgICdhc21DdXN0b21lcjM2MC5wcm9kdWN0TGlzdGluZy50b3RhbFByaWNlJ1xuICAgICAgICAgIHwgY3hUcmFuc2xhdGU6IHsgcHJpY2U6IGFjdGl2ZUNhcnQudG90YWxQcmljZSB9XG4gICAgICB9fVxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=