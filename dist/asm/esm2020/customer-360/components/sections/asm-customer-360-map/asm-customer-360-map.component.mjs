/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { combineLatest, of, Subscription } from 'rxjs';
import { concatMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../asm-customer-360-section-context.model";
import * as i2 from "@spartacus/storefinder/core";
import * as i3 from "@spartacus/core";
import * as i4 from "@angular/common";
export class AsmCustomer360MapComponent {
    constructor(source, changeDetectorRef, storeFinderService, translationService, storeFinderConfig) {
        this.source = source;
        this.changeDetectorRef = changeDetectorRef;
        this.storeFinderService = storeFinderService;
        this.translationService = translationService;
        this.storeFinderConfig = storeFinderConfig;
        this.subscription = new Subscription();
    }
    ngOnInit() {
        this.dataSource$ = combineLatest([this.source.config$, this.source.data$]);
        this.subscription.add(this.dataSource$
            .pipe(concatMap(([config, data]) => {
            this.storeFinderService.findStoresAction(data.address, {
                pageSize: config.pageSize,
            }, undefined, undefined, undefined, this.storeFinderConfig.googleMaps?.radius);
            return this.storeFinderService.getFindStoresEntities();
        }), concatMap((storeSearchData) => {
            if (storeSearchData) {
                this.storeData = storeSearchData;
                this.selectedStore = this.storeData.stores?.[0];
            }
            return of(undefined);
        }))
            .subscribe(() => this.changeDetectorRef.detectChanges()));
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    selectStore(store) {
        this.selectedStore = store;
    }
    getStoreOpening(opening) {
        const { closed, openingTime, closingTime } = opening;
        if (closed) {
            return this.translationService.translate('asmCustomer360.maps.storeClosed');
        }
        else if (openingTime) {
            let storeOpening = `${openingTime.formattedHour}`;
            if (closingTime) {
                storeOpening = `${storeOpening} - ${closingTime.formattedHour}`;
            }
            return of(storeOpening);
        }
        else {
            return of('');
        }
    }
}
AsmCustomer360MapComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360MapComponent, deps: [{ token: i1.AsmCustomer360SectionContext }, { token: i0.ChangeDetectorRef }, { token: i2.StoreFinderService }, { token: i3.TranslationService }, { token: i2.StoreFinderConfig }], target: i0.ɵɵFactoryTarget.Component });
AsmCustomer360MapComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmCustomer360MapComponent, selector: "cx-asm-customer-360-map", ngImport: i0, template: "<ng-container *ngIf=\"storeData\">\n  <div class=\"store-count\">\n    {{\n      'asmCustomer360.maps.storesFound'\n        | cxTranslate\n          : {\n              initial: 1,\n              end: storeData.pagination?.pageSize,\n              total: storeData.pagination?.totalResults\n            }\n    }}\n  </div>\n\n  <div>\n    <button\n      class=\"store-listing-item\"\n      [class.selected]=\"selectedStore === store\"\n      *ngFor=\"let store of storeData.stores\"\n      [attr.aria-label]=\"store.displayName\"\n      (click)=\"selectStore(store)\"\n    >\n      <div class=\"store-listing-item-details\">\n        <div class=\"store-listing-item-text\">{{ store.displayName }}</div>\n        <div class=\"store-listing-item-text\">\n          {{ store.address?.line1 }}, {{ store.address?.line2 }}\n        </div>\n        <div class=\"store-listing-item-text\">{{ store.address?.town }}</div>\n      </div>\n      <div class=\"store-listing-item-distance store-listing-item-text\">\n        {{ store.formattedDistance }}\n      </div>\n    </button>\n  </div>\n\n  <div *ngIf=\"selectedStore\">\n    <div class=\"store-details\">\n      <img\n        *ngIf=\"selectedStore.storeImages?.[0]\"\n        [src]=\"selectedStore.storeImages?.[0]?.url\"\n        alt=\"{{ selectedStore.displayName }}\"\n        width=\"110px\"\n        height=\"110px\"\n      />\n      <div class=\"store-details-info\">\n        <div class=\"bold\">{{ selectedStore.displayName }}</div>\n        <div>{{ selectedStore.address?.line1 }}</div>\n        <div>{{ selectedStore.address?.line2 }}</div>\n        <div>{{ selectedStore.address?.town }}</div>\n      </div>\n    </div>\n    <div\n      class=\"store-openings\"\n      *ngIf=\"selectedStore?.openingHours as openingHours\"\n    >\n      <div\n        class=\"store-openings-dates\"\n        *ngIf=\"openingHours.weekDayOpeningList as weekDayOpeningList\"\n      >\n        <div\n          class=\"store-openings-date\"\n          *ngFor=\"let opening of weekDayOpeningList\"\n        >\n          <span class=\"store-openings-day bold\">{{ opening.weekDay }}</span\n          >{{ getStoreOpening(opening) | async }}\n        </div>\n      </div>\n      <div\n        class=\"store-openings-dates\"\n        *ngIf=\"openingHours.specialDayOpeningList as specialDayOpeningList\"\n      >\n        <div\n          class=\"store-openings-date\"\n          *ngFor=\"let opening of specialDayOpeningList\"\n        >\n          <span class=\"store-openings-day bold\">{{ opening.name }}</span\n          >{{ getStoreOpening(opening) | async }}\n        </div>\n      </div>\n      <div class=\"store-openings-features\">\n        <div *ngFor=\"let feature of selectedStore.features?.entry\">\n          {{ feature.value }}\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360MapComponent, decorators: [{
            type: Component,
            args: [{ changeDetection: ChangeDetectionStrategy.OnPush, selector: 'cx-asm-customer-360-map', template: "<ng-container *ngIf=\"storeData\">\n  <div class=\"store-count\">\n    {{\n      'asmCustomer360.maps.storesFound'\n        | cxTranslate\n          : {\n              initial: 1,\n              end: storeData.pagination?.pageSize,\n              total: storeData.pagination?.totalResults\n            }\n    }}\n  </div>\n\n  <div>\n    <button\n      class=\"store-listing-item\"\n      [class.selected]=\"selectedStore === store\"\n      *ngFor=\"let store of storeData.stores\"\n      [attr.aria-label]=\"store.displayName\"\n      (click)=\"selectStore(store)\"\n    >\n      <div class=\"store-listing-item-details\">\n        <div class=\"store-listing-item-text\">{{ store.displayName }}</div>\n        <div class=\"store-listing-item-text\">\n          {{ store.address?.line1 }}, {{ store.address?.line2 }}\n        </div>\n        <div class=\"store-listing-item-text\">{{ store.address?.town }}</div>\n      </div>\n      <div class=\"store-listing-item-distance store-listing-item-text\">\n        {{ store.formattedDistance }}\n      </div>\n    </button>\n  </div>\n\n  <div *ngIf=\"selectedStore\">\n    <div class=\"store-details\">\n      <img\n        *ngIf=\"selectedStore.storeImages?.[0]\"\n        [src]=\"selectedStore.storeImages?.[0]?.url\"\n        alt=\"{{ selectedStore.displayName }}\"\n        width=\"110px\"\n        height=\"110px\"\n      />\n      <div class=\"store-details-info\">\n        <div class=\"bold\">{{ selectedStore.displayName }}</div>\n        <div>{{ selectedStore.address?.line1 }}</div>\n        <div>{{ selectedStore.address?.line2 }}</div>\n        <div>{{ selectedStore.address?.town }}</div>\n      </div>\n    </div>\n    <div\n      class=\"store-openings\"\n      *ngIf=\"selectedStore?.openingHours as openingHours\"\n    >\n      <div\n        class=\"store-openings-dates\"\n        *ngIf=\"openingHours.weekDayOpeningList as weekDayOpeningList\"\n      >\n        <div\n          class=\"store-openings-date\"\n          *ngFor=\"let opening of weekDayOpeningList\"\n        >\n          <span class=\"store-openings-day bold\">{{ opening.weekDay }}</span\n          >{{ getStoreOpening(opening) | async }}\n        </div>\n      </div>\n      <div\n        class=\"store-openings-dates\"\n        *ngIf=\"openingHours.specialDayOpeningList as specialDayOpeningList\"\n      >\n        <div\n          class=\"store-openings-date\"\n          *ngFor=\"let opening of specialDayOpeningList\"\n        >\n          <span class=\"store-openings-day bold\">{{ opening.name }}</span\n          >{{ getStoreOpening(opening) | async }}\n        </div>\n      </div>\n      <div class=\"store-openings-features\">\n        <div *ngFor=\"let feature of selectedStore.features?.entry\">\n          {{ feature.value }}\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AsmCustomer360SectionContext }, { type: i0.ChangeDetectorRef }, { type: i2.StoreFinderService }, { type: i3.TranslationService }, { type: i2.StoreFinderConfig }]; } });
//# sourceMappingURL=data:application/json;base64,