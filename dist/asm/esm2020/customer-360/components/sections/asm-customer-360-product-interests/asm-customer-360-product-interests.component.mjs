/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { forkJoin, of } from 'rxjs';
import { concatMap, filter, take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../asm-customer-360-section-context.model";
import * as i2 from "@spartacus/core";
import * as i3 from "@angular/common";
import * as i4 from "../../asm-customer-360-product-listing/asm-customer-360-product-listing.component";
export class AsmCustomer360ProductInterestsComponent {
    constructor(sectionContext, productService) {
        this.sectionContext = sectionContext;
        this.productService = productService;
        this.products$ = this.sectionContext.data$.pipe(concatMap((interestList) => {
            if (!interestList?.customerProductInterests?.length) {
                return of([]);
            }
            else {
                return forkJoin(interestList.customerProductInterests.map((interest) => {
                    return this.productService
                        .get(interest.product.code, "details" /* ProductScope.DETAILS */)
                        .pipe(filter((product) => Boolean(product)), take(1));
                }));
            }
        }));
    }
}
AsmCustomer360ProductInterestsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ProductInterestsComponent, deps: [{ token: i1.AsmCustomer360SectionContext }, { token: i2.ProductService }], target: i0.ɵɵFactoryTarget.Component });
AsmCustomer360ProductInterestsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmCustomer360ProductInterestsComponent, selector: "cx-asm-customer-360-product-interests", ngImport: i0, template: "<cx-asm-customer-360-product-listing\n  *ngIf=\"products$ | async as products\"\n  [emptyResultDescription]=\"\n    'asmCustomer360.productInterests.emptyDescription' | cxTranslate\n  \"\n  [headerText]=\"'asmCustomer360.productInterests.header' | cxTranslate\"\n  [products]=\"products\"\n  (clickHeader)=\"sectionContext.navigate$.next({ cxRoute: 'myInterests' })\"\n  (selectProduct)=\"\n    sectionContext.navigate$.next({ cxRoute: 'product', params: $event })\n  \"\n>\n</cx-asm-customer-360-product-listing>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.AsmCustomer360ProductListingComponent, selector: "cx-asm-customer-360-product-listing", inputs: ["emptyResultDescription", "headerInactive", "headerText", "products", "headerTemplate"], outputs: ["clickHeader", "selectProduct"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360ProductInterestsComponent, decorators: [{
            type: Component,
            args: [{ changeDetection: ChangeDetectionStrategy.OnPush, selector: 'cx-asm-customer-360-product-interests', template: "<cx-asm-customer-360-product-listing\n  *ngIf=\"products$ | async as products\"\n  [emptyResultDescription]=\"\n    'asmCustomer360.productInterests.emptyDescription' | cxTranslate\n  \"\n  [headerText]=\"'asmCustomer360.productInterests.header' | cxTranslate\"\n  [products]=\"products\"\n  (clickHeader)=\"sectionContext.navigate$.next({ cxRoute: 'myInterests' })\"\n  (selectProduct)=\"\n    sectionContext.navigate$.next({ cxRoute: 'product', params: $event })\n  \"\n>\n</cx-asm-customer-360-product-listing>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AsmCustomer360SectionContext }, { type: i2.ProductService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWludGVyZXN0cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvYXNtL2N1c3RvbWVyLTM2MC9jb21wb25lbnRzL3NlY3Rpb25zL2FzbS1jdXN0b21lci0zNjAtcHJvZHVjdC1pbnRlcmVzdHMvYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWludGVyZXN0cy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvYXNtL2N1c3RvbWVyLTM2MC9jb21wb25lbnRzL3NlY3Rpb25zL2FzbS1jdXN0b21lci0zNjAtcHJvZHVjdC1pbnRlcmVzdHMvYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWludGVyZXN0cy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUduRSxPQUFPLEVBQUUsUUFBUSxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNoRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7O0FBU3pELE1BQU0sT0FBTyx1Q0FBdUM7SUFHbEQsWUFDUyxjQUErRSxFQUM1RSxjQUE4QjtRQURqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBaUU7UUFDNUUsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBRXhDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUM3QyxTQUFTLENBQUMsQ0FBQyxZQUFZLEVBQUUsRUFBRTtZQUN6QixJQUFJLENBQUMsWUFBWSxFQUFFLHdCQUF3QixFQUFFLE1BQU0sRUFBRTtnQkFDbkQsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDZjtpQkFBTTtnQkFDTCxPQUFPLFFBQVEsQ0FDYixZQUFZLENBQUMsd0JBQXdCLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7b0JBQ3JELE9BQU8sSUFBSSxDQUFDLGNBQWM7eUJBQ3ZCLEdBQUcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksdUNBQXVCO3lCQUNoRCxJQUFJLENBQ0gsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFzQixFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQ3pELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDRyxDQUFDO2dCQUNqQixDQUFDLENBQUMsQ0FDSCxDQUFDO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQzs7b0lBekJVLHVDQUF1Qzt3SEFBdkMsdUNBQXVDLDZFQ25CcEQscWdCQWFBOzJGRE1hLHVDQUF1QztrQkFMbkQsU0FBUztzQ0FDUyx1QkFBdUIsQ0FBQyxNQUFNLFlBQ3JDLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFzbUN1c3RvbWVyMzYwUHJvZHVjdEludGVyZXN0TGlzdCB9IGZyb20gJ0BzcGFydGFjdXMvYXNtL2N1c3RvbWVyLTM2MC9yb290JztcbmltcG9ydCB7IFByb2R1Y3QsIFByb2R1Y3RTY29wZSwgUHJvZHVjdFNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgZm9ya0pvaW4sIE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBjb25jYXRNYXAsIGZpbHRlciwgdGFrZSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgQXNtQ3VzdG9tZXIzNjBTZWN0aW9uQ29udGV4dCB9IGZyb20gJy4uL2FzbS1jdXN0b21lci0zNjAtc2VjdGlvbi1jb250ZXh0Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzZWxlY3RvcjogJ2N4LWFzbS1jdXN0b21lci0zNjAtcHJvZHVjdC1pbnRlcmVzdHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWludGVyZXN0cy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEFzbUN1c3RvbWVyMzYwUHJvZHVjdEludGVyZXN0c0NvbXBvbmVudCB7XG4gIHByb2R1Y3RzJDogT2JzZXJ2YWJsZTxBcnJheTxQcm9kdWN0Pj47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHNlY3Rpb25Db250ZXh0OiBBc21DdXN0b21lcjM2MFNlY3Rpb25Db250ZXh0PEFzbUN1c3RvbWVyMzYwUHJvZHVjdEludGVyZXN0TGlzdD4sXG4gICAgcHJvdGVjdGVkIHByb2R1Y3RTZXJ2aWNlOiBQcm9kdWN0U2VydmljZVxuICApIHtcbiAgICB0aGlzLnByb2R1Y3RzJCA9IHRoaXMuc2VjdGlvbkNvbnRleHQuZGF0YSQucGlwZShcbiAgICAgIGNvbmNhdE1hcCgoaW50ZXJlc3RMaXN0KSA9PiB7XG4gICAgICAgIGlmICghaW50ZXJlc3RMaXN0Py5jdXN0b21lclByb2R1Y3RJbnRlcmVzdHM/Lmxlbmd0aCkge1xuICAgICAgICAgIHJldHVybiBvZihbXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGZvcmtKb2luKFxuICAgICAgICAgICAgaW50ZXJlc3RMaXN0LmN1c3RvbWVyUHJvZHVjdEludGVyZXN0cy5tYXAoKGludGVyZXN0KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2R1Y3RTZXJ2aWNlXG4gICAgICAgICAgICAgICAgLmdldChpbnRlcmVzdC5wcm9kdWN0LmNvZGUsIFByb2R1Y3RTY29wZS5ERVRBSUxTKVxuICAgICAgICAgICAgICAgIC5waXBlKFxuICAgICAgICAgICAgICAgICAgZmlsdGVyKChwcm9kdWN0KTogcHJvZHVjdCBpcyBQcm9kdWN0ID0+IEJvb2xlYW4ocHJvZHVjdCkpLFxuICAgICAgICAgICAgICAgICAgdGFrZSgxKVxuICAgICAgICAgICAgICAgICkgYXMgUHJvZHVjdDtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCI8Y3gtYXNtLWN1c3RvbWVyLTM2MC1wcm9kdWN0LWxpc3RpbmdcbiAgKm5nSWY9XCJwcm9kdWN0cyQgfCBhc3luYyBhcyBwcm9kdWN0c1wiXG4gIFtlbXB0eVJlc3VsdERlc2NyaXB0aW9uXT1cIlxuICAgICdhc21DdXN0b21lcjM2MC5wcm9kdWN0SW50ZXJlc3RzLmVtcHR5RGVzY3JpcHRpb24nIHwgY3hUcmFuc2xhdGVcbiAgXCJcbiAgW2hlYWRlclRleHRdPVwiJ2FzbUN1c3RvbWVyMzYwLnByb2R1Y3RJbnRlcmVzdHMuaGVhZGVyJyB8IGN4VHJhbnNsYXRlXCJcbiAgW3Byb2R1Y3RzXT1cInByb2R1Y3RzXCJcbiAgKGNsaWNrSGVhZGVyKT1cInNlY3Rpb25Db250ZXh0Lm5hdmlnYXRlJC5uZXh0KHsgY3hSb3V0ZTogJ215SW50ZXJlc3RzJyB9KVwiXG4gIChzZWxlY3RQcm9kdWN0KT1cIlxuICAgIHNlY3Rpb25Db250ZXh0Lm5hdmlnYXRlJC5uZXh0KHsgY3hSb3V0ZTogJ3Byb2R1Y3QnLCBwYXJhbXM6ICRldmVudCB9KVxuICBcIlxuPlxuPC9jeC1hc20tY3VzdG9tZXItMzYwLXByb2R1Y3QtbGlzdGluZz5cbiJdfQ==