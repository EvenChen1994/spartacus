/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostBinding, ViewChildren, } from '@angular/core';
import { getAsmDialogActionEvent } from '@spartacus/asm/customer-360/core';
import { AsmDialogActionType, AsmCustomer360Type, KeyBoardEventCode, } from '@spartacus/asm/customer-360/root';
import { GlobalMessageType, isNotUndefined, } from '@spartacus/core';
import { DirectionMode, ICON_TYPE, } from '@spartacus/storefront';
import { BehaviorSubject, Subscription, of } from 'rxjs';
import { catchError, distinctUntilChanged, filter, map } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../config/asm-customer-360-config";
import * as i2 from "@spartacus/asm/customer-360/root";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@spartacus/asm/root";
import * as i5 from "@angular/common";
import * as i6 from "../sections/asm-customer-360-section/asm-customer-360-section.component";
import * as i7 from "@spartacus/core";
import * as i8 from "@spartacus/asm/core";
export class AsmCustomer360Component {
    constructor(asmCustomer360Config, asmCustomer360Facade, launchDialogService, csAgentAuthService, directionService) {
        this.asmCustomer360Config = asmCustomer360Config;
        this.asmCustomer360Facade = asmCustomer360Facade;
        this.launchDialogService = launchDialogService;
        this.csAgentAuthService = csAgentAuthService;
        this.directionService = directionService;
        this.role = 'dialog';
        this.modal = true;
        this.labelledby = 'asm-customer-360-title';
        this.describedby = 'asm-customer-360-desc';
        this.cartIcon = ICON_TYPE.CART;
        this.closeIcon = ICON_TYPE.CLOSE;
        this.orderIcon = ICON_TYPE.ORDER;
        this.ticketIcon = ICON_TYPE.FILE;
        this.globalMessageType = GlobalMessageType;
        this.focusConfig = {
            trap: true,
            block: true,
            autofocus: '.close',
            focusOnEscape: true,
        };
        this.activeTab = 0;
        this.subscription = new Subscription();
        this.showErrorAlert$ = new BehaviorSubject(false);
        this.showErrorTab$ = new BehaviorSubject(false);
        this.errorAlert$ = this.showErrorAlert$.asObservable();
        this.errorTab$ = this.showErrorTab$.asObservable();
        this.customerOverview$ = this.asmCustomer360Facade
            .get360Data([
            {
                requestData: { type: AsmCustomer360Type.OVERVIEW },
            },
        ])
            .pipe(map((response) => {
            const overviewItem = response?.value?.find((item) => item.type === AsmCustomer360Type.OVERVIEW);
            return overviewItem?.overview || undefined;
        }), catchError(() => {
            this.showErrorAlert$.next(true);
            return of(undefined);
        }));
        this.tabs = asmCustomer360Config?.asmCustomer360?.tabs ?? [];
        this.currentTab = this.tabs[0];
    }
    ngOnInit() {
        this.subscription.add(this.csAgentAuthService
            .isCustomerSupportAgentLoggedIn()
            .pipe(distinctUntilChanged())
            .subscribe((loggedIn) => {
            if (!loggedIn) {
                this.launchDialogService.closeDialog('logout');
            }
        }));
        this.subscription.add(this.launchDialogService.data$.subscribe((data) => {
            this.customer = data.customer;
        }));
        this.setTabData();
    }
    ngOnDestroy() {
        this.subscription.unsubscribe();
    }
    /**
     * Triggered when a tab is selected.
     * @param {number} selectedTab selected tab index
     */
    selectTab(selectedTab) {
        this.activeTab = selectedTab;
        this.currentTab = this.tabs[selectedTab];
        this.updateTabIndex(selectedTab);
        this.setTabData();
    }
    /**
     *  Update tab focus when key is pressed
     * @param {KeyboardEvent} event
     * @param {number} selectedIndex current tab index
     */
    switchTab(event, selectedIndex) {
        const maxTab = this.tabs.length - 1;
        let flag = true;
        if (this.isBackNavigation(event)) {
            selectedIndex--;
            if (selectedIndex < 0) {
                selectedIndex = maxTab;
            }
        }
        else if (this.isForwardsNavigation(event)) {
            selectedIndex++;
            if (selectedIndex > maxTab) {
                selectedIndex = 0;
            }
        }
        else if (event.code === KeyBoardEventCode.HOME) {
            selectedIndex = 0;
        }
        else if (event.code === KeyBoardEventCode.END) {
            selectedIndex = maxTab;
        }
        else {
            flag = false;
        }
        if (flag) {
            this.updateTabIndex(selectedIndex);
            event.stopPropagation();
            event.preventDefault();
        }
    }
    /**
     * If there is a link within the modal, use this method to redirect the user and close the modal.
     */
    navigateTo(route) {
        const event = getAsmDialogActionEvent(this.customer, AsmDialogActionType.NAVIGATE, route);
        this.closeModal(event);
    }
    closeErrorAlert() {
        this.showErrorAlert$.next(false);
    }
    closeModal(reason) {
        this.launchDialogService.closeDialog(reason);
    }
    getAvatarText(customer) {
        customer = customer ?? {};
        const { firstName = '', lastName = '' } = customer;
        return `${firstName.charAt(0)}${lastName.charAt(0)}`;
    }
    getAvatarImage(overview) {
        return overview?.userAvatar?.url
            ? {
                altText: overview.name,
                url: overview.userAvatar.url,
                format: overview.userAvatar.format,
            }
            : undefined;
    }
    /**
     * Update tabIndex for each tab: select tab becomes 0 and other tabs will be -1
     * this is for prevent tabbing within tabs
     * @param {number} selectedIndex - selected tab index
     */
    updateTabIndex(selectedIndex) {
        this.tabHeaderItems.toArray().forEach((tabHeaderItem, index) => {
            if (index === selectedIndex) {
                tabHeaderItem.nativeElement.tabIndex = 0;
                tabHeaderItem.nativeElement.focus();
            }
            else {
                tabHeaderItem.nativeElement.tabIndex = -1;
            }
        });
    }
    setTabData() {
        this.showErrorTab$.next(false);
        const get360Data = this.asmCustomer360Facade
            .get360Data(this.currentTab.components)
            .pipe(catchError(() => {
            this.showErrorTab$.next(true);
            this.showErrorAlert$.next(true);
            return of(undefined);
        }));
        this.asmCustomer360Tabs$ = get360Data.pipe(filter(isNotUndefined), map((response) => {
            return this.currentTab.components.map((component) => {
                const requestData = component.requestData;
                if (requestData) {
                    return response.value.find((data) => data.type === requestData.type);
                }
                else {
                    return undefined;
                }
            });
        }));
    }
    /**
     * Verifies whether the user navigates into a subgroup of the main group menu.
     *
     * @param {KeyboardEvent} event - Keyboard event
     * @returns {boolean} -'true' if the user navigates into the subgroup, otherwise 'false'.
     * @protected
     */
    isForwardsNavigation(event) {
        return ((event.code === 'ArrowRight' && this.isLTRDirection()) ||
            (event.code === 'ArrowLeft' && this.isRTLDirection()));
    }
    /**
     * Verifies whether the user navigates from a subgroup back to the main group menu.
     *
     * @param {KeyboardEvent} event - Keyboard event
     * @returns {boolean} -'true' if the user navigates back into the main group menu, otherwise 'false'.
     * @protected
     */
    isBackNavigation(event) {
        return ((event.code === KeyBoardEventCode.ARROW_LEFT && this.isLTRDirection()) ||
            (event.code === KeyBoardEventCode.ARROW_RIGHT && this.isRTLDirection()));
    }
    isLTRDirection() {
        return this.directionService.getDirection() === DirectionMode.LTR;
    }
    isRTLDirection() {
        return this.directionService.getDirection() === DirectionMode.RTL;
    }
}
AsmCustomer360Component.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360Component, deps: [{ token: i1.AsmCustomer360Config }, { token: i2.AsmCustomer360Facade }, { token: i3.LaunchDialogService }, { token: i4.CsAgentAuthService }, { token: i3.DirectionService }], target: i0.ɵɵFactoryTarget.Component });
AsmCustomer360Component.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: AsmCustomer360Component, selector: "cx-asm-customer-360", host: { properties: { "attr.role": "this.role", "attr.aria-modal": "this.modal", "attr.aria-labelledby": "this.labelledby", "attr.aria-describedby": "this.describedby" } }, viewQueries: [{ propertyName: "tabHeaderItems", predicate: ["tabHeaderItem"], descendants: true }], ngImport: i0, template: "<div\n  class=\"cx-asm-customer-360 cx-modal-container cx-asm-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal('Escape clicked')\"\n>\n  <!-- Modal Header -->\n  <div class=\"cx-modal-content\">\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"header-title\">\n        <h3 id=\"asm-customer-360-title\" class=\"modal-title\">\n          {{ 'asmCustomer360.header.title' | cxTranslate }}\n        </h3>\n        <div id=\"asm-customer-360-desc\" class=\"cx-visually-hidden\">\n          {{\n            'asmCustomer360.header.subTitle'\n              | cxTranslate: { name: customer.firstName }\n          }}\n        </div>\n        <ng-template *ngTemplateOutlet=\"closeButton\"></ng-template>\n      </div>\n      <cx-message\n        *ngIf=\"errorAlert$ | async\"\n        [text]=\"'asmCustomer360.alertErrorMessage' | cxTranslate\"\n        [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n        (closeMessage)=\"closeErrorAlert()\"\n      >\n      </cx-message>\n      <div\n        class=\"header-content\"\n        *ngIf=\"customerOverview$ | async as customerOverview\"\n      >\n        <div class=\"header-profile-details\">\n          <div class=\"header-profile-details-info\">\n            <ng-container\n              *ngIf=\"\n                getAvatarImage | cxArgs: customerOverview as avatarImage;\n                else customerTextAvatar\n              \"\n            >\n              <div class=\"cx-avatar-image\">\n                <cx-media [container]=\"avatarImage\"></cx-media>\n              </div>\n            </ng-container>\n\n            <ng-template #customerTextAvatar>\n              <div class=\"cx-avatar\">\n                {{ getAvatarText | cxArgs: customer }}\n              </div>\n            </ng-template>\n            <div class=\"cx-asm-customer-info ml-3\">\n              <div class=\"cx-asm-customer-name\">\n                {{\n                  'asmCustomer360.header.subTitle'\n                    | cxTranslate: { name: customerOverview?.name }\n                }}\n              </div>\n              <div class=\"cx-asm-customer-email\">\n                {{ customerOverview?.email }}\n              </div>\n              <div\n                class=\"cx-asm-customer-address\"\n                *ngIf=\"customerOverview?.address?.town\"\n              >\n                {{ customerOverview.address.town }}\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"header-profile-details-log\"\n            *ngIf=\"customerOverview?.signedUpAt\"\n          >\n            {{\n              'asmCustomer360.header.signedUpAt'\n                | cxTranslate\n                  : {\n                      date:\n                        customerOverview.signedUpAt\n                        | cxDate\n                          : asmCustomer360Config?.asmCustomer360?.dateFormat\n                    }\n            }}\n          </div>\n        </div>\n        <div class=\"header-account-details\">\n          <span\n            class=\"header-account-details-active-cart\"\n            *ngIf=\"customerOverview?.cartCode\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"cartIcon\"></cx-icon>\n            {{\n              'asmCustomer360.header.activeCartLabel'\n                | cxTranslate: { cartSize: customerOverview?.cartSize }\n            }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.activeCartCode'\n                  | cxTranslate: { code: customerOverview.cartCode }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"navigateTo({ cxRoute: 'cart' })\"\n            >\n              {{ customerOverview.cartCode }}\n            </button>\n          </span>\n          <span\n            class=\"header-account-details-recent-order\"\n            *ngIf=\"customerOverview?.latestOrderCode\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"orderIcon\"></cx-icon>\n            {{\n              'asmCustomer360.header.recentOrderLabel'\n                | cxTranslate: { price: customerOverview?.latestOrderTotal }\n            }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.recentOrderCode'\n                  | cxTranslate: { code: customerOverview.latestOrderCode }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"\n                navigateTo({\n                  cxRoute: 'orderDetails',\n                  params: { code: customerOverview.latestOrderCode }\n                })\n              \"\n            >\n              {{ customerOverview.latestOrderCode }}</button\n            >,\n            {{\n              customerOverview?.latestOrderTime\n                | cxDate: asmCustomer360Config?.asmCustomer360?.dateFormat\n            }}\n          </span>\n          <span\n            class=\"header-account-details-recent-ticket\"\n            *ngIf=\"customerOverview?.latestOpenedTicketId\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"ticketIcon\"></cx-icon>\n            {{ 'asmCustomer360.header.recentTicketLabel' | cxTranslate }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.recentOrderCode'\n                  | cxTranslate: { code: customerOverview.latestOpenedTicketId }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"\n                navigateTo({\n                  cxRoute: 'supportTicketDetails',\n                  params: { ticketCode: customerOverview.latestOpenedTicketId }\n                })\n              \"\n            >\n              {{ customerOverview.latestOpenedTicketId }}</button\n            >,\n            {{\n              customerOverview?.latestOpenedTicketCreatedAt\n                | cxDate: asmCustomer360Config?.asmCustomer360?.dateFormat\n            }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body\">\n      <div class=\"cx-tab-headers\" role=\"tablist\">\n        <button\n          #tabHeaderItem\n          *ngFor=\"let tabHeader of tabs; let i = index\"\n          class=\"cx-tab-header\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTab === i\"\n          attr.aria-controls=\"asm-customer-360-tab-panel\"\n          (click)=\"selectTab(i)\"\n          [class.active]=\"activeTab === i\"\n          (keydown)=\"switchTab($event, i)\"\n        >\n          {{ tabHeader.i18nNameKey | cxTranslate }}\n        </button>\n      </div>\n      <div id=\"asm-customer-360-tab-panel\" class=\"cx-tab-content modal-body\">\n        <ng-container *ngIf=\"showErrorTab$ | async; else tabContent\">\n          <div class=\"cx-tab-error\">\n            <div class=\"cx-tab-error-image\"></div>\n            <div class=\"cx-tab-error-header\">\n              {{ 'asmCustomer360.errorMessageHeader' | cxTranslate }}\n            </div>\n            <div class=\"cx-tab-error-message\">\n              {{ 'asmCustomer360.alertErrorMessage' | cxTranslate }}\n            </div>\n          </div>\n        </ng-container>\n        <ng-template #tabContent>\n          <ng-container\n            *ngIf=\"asmCustomer360Tabs$ | async as asmCustomer360Tabs\"\n          >\n            <cx-asm-customer-360-section\n              *ngFor=\"let config of currentTab?.components; let i = index\"\n              [component]=\"config.component\"\n              [config]=\"config.config\"\n              [data]=\"asmCustomer360Tabs?.[i]\"\n              (navigate)=\"navigateTo($event)\"\n            ></cx-asm-customer-360-section>\n          </ng-container>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #closeButton>\n  <button\n    type=\"button\"\n    class=\"close\"\n    attr.aria-label=\"{{ 'common.close' | cxTranslate }}\"\n    (click)=\"closeModal('Cross click')\"\n  >\n    <cx-icon [type]=\"closeIcon\"></cx-icon>\n  </button>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i5.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: i3.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "directive", type: i3.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "component", type: i3.MessageComponent, selector: "cx-message", inputs: ["text", "actionButtonText", "actionButtonMessage", "accordionText", "showBody", "isVisibleCloseButton", "type"], outputs: ["closeMessage", "buttonAction"] }, { kind: "component", type: i6.AsmCustomer360SectionComponent, selector: "cx-asm-customer-360-section", inputs: ["component", "customer", "config", "data"], outputs: ["navigate"] }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i7.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i7.CxDatePipe, name: "cxDate" }, { kind: "pipe", type: i8.ArgsPipe, name: "cxArgs" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: AsmCustomer360Component, decorators: [{
            type: Component,
            args: [{ changeDetection: ChangeDetectionStrategy.OnPush, selector: 'cx-asm-customer-360', template: "<div\n  class=\"cx-asm-customer-360 cx-modal-container cx-asm-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"closeModal('Escape clicked')\"\n>\n  <!-- Modal Header -->\n  <div class=\"cx-modal-content\">\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"header-title\">\n        <h3 id=\"asm-customer-360-title\" class=\"modal-title\">\n          {{ 'asmCustomer360.header.title' | cxTranslate }}\n        </h3>\n        <div id=\"asm-customer-360-desc\" class=\"cx-visually-hidden\">\n          {{\n            'asmCustomer360.header.subTitle'\n              | cxTranslate: { name: customer.firstName }\n          }}\n        </div>\n        <ng-template *ngTemplateOutlet=\"closeButton\"></ng-template>\n      </div>\n      <cx-message\n        *ngIf=\"errorAlert$ | async\"\n        [text]=\"'asmCustomer360.alertErrorMessage' | cxTranslate\"\n        [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n        (closeMessage)=\"closeErrorAlert()\"\n      >\n      </cx-message>\n      <div\n        class=\"header-content\"\n        *ngIf=\"customerOverview$ | async as customerOverview\"\n      >\n        <div class=\"header-profile-details\">\n          <div class=\"header-profile-details-info\">\n            <ng-container\n              *ngIf=\"\n                getAvatarImage | cxArgs: customerOverview as avatarImage;\n                else customerTextAvatar\n              \"\n            >\n              <div class=\"cx-avatar-image\">\n                <cx-media [container]=\"avatarImage\"></cx-media>\n              </div>\n            </ng-container>\n\n            <ng-template #customerTextAvatar>\n              <div class=\"cx-avatar\">\n                {{ getAvatarText | cxArgs: customer }}\n              </div>\n            </ng-template>\n            <div class=\"cx-asm-customer-info ml-3\">\n              <div class=\"cx-asm-customer-name\">\n                {{\n                  'asmCustomer360.header.subTitle'\n                    | cxTranslate: { name: customerOverview?.name }\n                }}\n              </div>\n              <div class=\"cx-asm-customer-email\">\n                {{ customerOverview?.email }}\n              </div>\n              <div\n                class=\"cx-asm-customer-address\"\n                *ngIf=\"customerOverview?.address?.town\"\n              >\n                {{ customerOverview.address.town }}\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"header-profile-details-log\"\n            *ngIf=\"customerOverview?.signedUpAt\"\n          >\n            {{\n              'asmCustomer360.header.signedUpAt'\n                | cxTranslate\n                  : {\n                      date:\n                        customerOverview.signedUpAt\n                        | cxDate\n                          : asmCustomer360Config?.asmCustomer360?.dateFormat\n                    }\n            }}\n          </div>\n        </div>\n        <div class=\"header-account-details\">\n          <span\n            class=\"header-account-details-active-cart\"\n            *ngIf=\"customerOverview?.cartCode\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"cartIcon\"></cx-icon>\n            {{\n              'asmCustomer360.header.activeCartLabel'\n                | cxTranslate: { cartSize: customerOverview?.cartSize }\n            }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.activeCartCode'\n                  | cxTranslate: { code: customerOverview.cartCode }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"navigateTo({ cxRoute: 'cart' })\"\n            >\n              {{ customerOverview.cartCode }}\n            </button>\n          </span>\n          <span\n            class=\"header-account-details-recent-order\"\n            *ngIf=\"customerOverview?.latestOrderCode\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"orderIcon\"></cx-icon>\n            {{\n              'asmCustomer360.header.recentOrderLabel'\n                | cxTranslate: { price: customerOverview?.latestOrderTotal }\n            }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.recentOrderCode'\n                  | cxTranslate: { code: customerOverview.latestOrderCode }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"\n                navigateTo({\n                  cxRoute: 'orderDetails',\n                  params: { code: customerOverview.latestOrderCode }\n                })\n              \"\n            >\n              {{ customerOverview.latestOrderCode }}</button\n            >,\n            {{\n              customerOverview?.latestOrderTime\n                | cxDate: asmCustomer360Config?.asmCustomer360?.dateFormat\n            }}\n          </span>\n          <span\n            class=\"header-account-details-recent-ticket\"\n            *ngIf=\"customerOverview?.latestOpenedTicketId\"\n          >\n            <cx-icon class=\"account-icon\" [type]=\"ticketIcon\"></cx-icon>\n            {{ 'asmCustomer360.header.recentTicketLabel' | cxTranslate }}\n            <button\n              [attr.aria-label]=\"\n                'asmCustomer360.aria.recentOrderCode'\n                  | cxTranslate: { code: customerOverview.latestOpenedTicketId }\n              \"\n              class=\"cx-overview-title-link link\"\n              (click)=\"\n                navigateTo({\n                  cxRoute: 'supportTicketDetails',\n                  params: { ticketCode: customerOverview.latestOpenedTicketId }\n                })\n              \"\n            >\n              {{ customerOverview.latestOpenedTicketId }}</button\n            >,\n            {{\n              customerOverview?.latestOpenedTicketCreatedAt\n                | cxDate: asmCustomer360Config?.asmCustomer360?.dateFormat\n            }}\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body\">\n      <div class=\"cx-tab-headers\" role=\"tablist\">\n        <button\n          #tabHeaderItem\n          *ngFor=\"let tabHeader of tabs; let i = index\"\n          class=\"cx-tab-header\"\n          role=\"tab\"\n          [attr.aria-selected]=\"activeTab === i\"\n          attr.aria-controls=\"asm-customer-360-tab-panel\"\n          (click)=\"selectTab(i)\"\n          [class.active]=\"activeTab === i\"\n          (keydown)=\"switchTab($event, i)\"\n        >\n          {{ tabHeader.i18nNameKey | cxTranslate }}\n        </button>\n      </div>\n      <div id=\"asm-customer-360-tab-panel\" class=\"cx-tab-content modal-body\">\n        <ng-container *ngIf=\"showErrorTab$ | async; else tabContent\">\n          <div class=\"cx-tab-error\">\n            <div class=\"cx-tab-error-image\"></div>\n            <div class=\"cx-tab-error-header\">\n              {{ 'asmCustomer360.errorMessageHeader' | cxTranslate }}\n            </div>\n            <div class=\"cx-tab-error-message\">\n              {{ 'asmCustomer360.alertErrorMessage' | cxTranslate }}\n            </div>\n          </div>\n        </ng-container>\n        <ng-template #tabContent>\n          <ng-container\n            *ngIf=\"asmCustomer360Tabs$ | async as asmCustomer360Tabs\"\n          >\n            <cx-asm-customer-360-section\n              *ngFor=\"let config of currentTab?.components; let i = index\"\n              [component]=\"config.component\"\n              [config]=\"config.config\"\n              [data]=\"asmCustomer360Tabs?.[i]\"\n              (navigate)=\"navigateTo($event)\"\n            ></cx-asm-customer-360-section>\n          </ng-container>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #closeButton>\n  <button\n    type=\"button\"\n    class=\"close\"\n    attr.aria-label=\"{{ 'common.close' | cxTranslate }}\"\n    (click)=\"closeModal('Cross click')\"\n  >\n    <cx-icon [type]=\"closeIcon\"></cx-icon>\n  </button>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.AsmCustomer360Config }, { type: i2.AsmCustomer360Facade }, { type: i3.LaunchDialogService }, { type: i4.CsAgentAuthService }, { type: i3.DirectionService }]; }, propDecorators: { role: [{
                type: HostBinding,
                args: ['attr.role']
            }], modal: [{
                type: HostBinding,
                args: ['attr.aria-modal']
            }], labelledby: [{
                type: HostBinding,
                args: ['attr.aria-labelledby']
            }], describedby: [{
                type: HostBinding,
                args: ['attr.aria-describedby']
            }], tabHeaderItems: [{
                type: ViewChildren,
                args: ['tabHeaderItem']
            }] } });
//# sourceMappingURL=data:application/json;base64,