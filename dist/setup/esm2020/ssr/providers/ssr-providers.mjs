/*
 * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { REQUEST } from '@nguniversal/express-engine/tokens';
import { LoggerService, SERVER_REQUEST_ORIGIN, SERVER_REQUEST_URL, } from '@spartacus/core';
import { getRequestOrigin } from '../express-utils/express-request-origin';
import { getRequestUrl } from '../express-utils/express-request-url';
import { serverLoggerServiceFactory } from '../logger';
import { serverRequestOriginFactory } from './server-request-origin';
import { serverRequestUrlFactory } from './server-request-url';
/**
 * Returns the providers used for SSR and pre-rendering processes.
 */
export function provideServer(options) {
    return [
        {
            provide: SERVER_REQUEST_ORIGIN,
            useFactory: serverRequestOriginFactory(options),
        },
        {
            provide: SERVER_REQUEST_URL,
            useFactory: serverRequestUrlFactory(options),
        },
        {
            provide: LoggerService,
            useFactory: serverLoggerServiceFactory,
        },
    ];
}
/**
 * Returns Spartacus providers to be passed to the Angular express engine (in SSR)
 *
 * @param options
 */
export function getServerRequestProviders() {
    return [
        {
            provide: SERVER_REQUEST_ORIGIN,
            useFactory: getRequestOrigin,
            deps: [REQUEST],
        },
        {
            provide: SERVER_REQUEST_URL,
            useFactory: getRequestUrl,
            deps: [REQUEST],
        },
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3NyLXByb3ZpZGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUtbGlicy9zZXR1cC9zc3IvcHJvdmlkZXJzL3Nzci1wcm92aWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUdILE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUM3RCxPQUFPLEVBQ0wsYUFBYSxFQUNiLHFCQUFxQixFQUNyQixrQkFBa0IsR0FDbkIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDckUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXZELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBRS9EOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGFBQWEsQ0FBQyxPQUF1QjtJQUNuRCxPQUFPO1FBQ0w7WUFDRSxPQUFPLEVBQUUscUJBQXFCO1lBQzlCLFVBQVUsRUFBRSwwQkFBMEIsQ0FBQyxPQUFPLENBQUM7U0FDaEQ7UUFDRDtZQUNFLE9BQU8sRUFBRSxrQkFBa0I7WUFDM0IsVUFBVSxFQUFFLHVCQUF1QixDQUFDLE9BQU8sQ0FBQztTQUM3QztRQUNEO1lBQ0UsT0FBTyxFQUFFLGFBQWE7WUFDdEIsVUFBVSxFQUFFLDBCQUEwQjtTQUN2QztLQUNGLENBQUM7QUFDSixDQUFDO0FBQ0Q7Ozs7R0FJRztBQUNILE1BQU0sVUFBVSx5QkFBeUI7SUFDdkMsT0FBTztRQUNMO1lBQ0UsT0FBTyxFQUFFLHFCQUFxQjtZQUM5QixVQUFVLEVBQUUsZ0JBQWdCO1lBQzVCLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQztTQUNoQjtRQUNEO1lBQ0UsT0FBTyxFQUFFLGtCQUFrQjtZQUMzQixVQUFVLEVBQUUsYUFBYTtZQUN6QixJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7U0FDaEI7S0FDRixDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIzIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IFN0YXRpY1Byb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSRVFVRVNUIH0gZnJvbSAnQG5ndW5pdmVyc2FsL2V4cHJlc3MtZW5naW5lL3Rva2Vucyc7XG5pbXBvcnQge1xuICBMb2dnZXJTZXJ2aWNlLFxuICBTRVJWRVJfUkVRVUVTVF9PUklHSU4sXG4gIFNFUlZFUl9SRVFVRVNUX1VSTCxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IGdldFJlcXVlc3RPcmlnaW4gfSBmcm9tICcuLi9leHByZXNzLXV0aWxzL2V4cHJlc3MtcmVxdWVzdC1vcmlnaW4nO1xuaW1wb3J0IHsgZ2V0UmVxdWVzdFVybCB9IGZyb20gJy4uL2V4cHJlc3MtdXRpbHMvZXhwcmVzcy1yZXF1ZXN0LXVybCc7XG5pbXBvcnQgeyBzZXJ2ZXJMb2dnZXJTZXJ2aWNlRmFjdG9yeSB9IGZyb20gJy4uL2xvZ2dlcic7XG5pbXBvcnQgeyBTZXJ2ZXJPcHRpb25zIH0gZnJvbSAnLi9tb2RlbCc7XG5pbXBvcnQgeyBzZXJ2ZXJSZXF1ZXN0T3JpZ2luRmFjdG9yeSB9IGZyb20gJy4vc2VydmVyLXJlcXVlc3Qtb3JpZ2luJztcbmltcG9ydCB7IHNlcnZlclJlcXVlc3RVcmxGYWN0b3J5IH0gZnJvbSAnLi9zZXJ2ZXItcmVxdWVzdC11cmwnO1xuXG4vKipcbiAqIFJldHVybnMgdGhlIHByb3ZpZGVycyB1c2VkIGZvciBTU1IgYW5kIHByZS1yZW5kZXJpbmcgcHJvY2Vzc2VzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZVNlcnZlcihvcHRpb25zPzogU2VydmVyT3B0aW9ucyk6IFN0YXRpY1Byb3ZpZGVyW10ge1xuICByZXR1cm4gW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IFNFUlZFUl9SRVFVRVNUX09SSUdJTixcbiAgICAgIHVzZUZhY3Rvcnk6IHNlcnZlclJlcXVlc3RPcmlnaW5GYWN0b3J5KG9wdGlvbnMpLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogU0VSVkVSX1JFUVVFU1RfVVJMLFxuICAgICAgdXNlRmFjdG9yeTogc2VydmVyUmVxdWVzdFVybEZhY3Rvcnkob3B0aW9ucyksXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBMb2dnZXJTZXJ2aWNlLFxuICAgICAgdXNlRmFjdG9yeTogc2VydmVyTG9nZ2VyU2VydmljZUZhY3RvcnksXG4gICAgfSxcbiAgXTtcbn1cbi8qKlxuICogUmV0dXJucyBTcGFydGFjdXMgcHJvdmlkZXJzIHRvIGJlIHBhc3NlZCB0byB0aGUgQW5ndWxhciBleHByZXNzIGVuZ2luZSAoaW4gU1NSKVxuICpcbiAqIEBwYXJhbSBvcHRpb25zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTZXJ2ZXJSZXF1ZXN0UHJvdmlkZXJzKCk6IFN0YXRpY1Byb3ZpZGVyW10ge1xuICByZXR1cm4gW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IFNFUlZFUl9SRVFVRVNUX09SSUdJTixcbiAgICAgIHVzZUZhY3Rvcnk6IGdldFJlcXVlc3RPcmlnaW4sXG4gICAgICBkZXBzOiBbUkVRVUVTVF0sXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBTRVJWRVJfUkVRVUVTVF9VUkwsXG4gICAgICB1c2VGYWN0b3J5OiBnZXRSZXF1ZXN0VXJsLFxuICAgICAgZGVwczogW1JFUVVFU1RdLFxuICAgIH0sXG4gIF07XG59XG4iXX0=