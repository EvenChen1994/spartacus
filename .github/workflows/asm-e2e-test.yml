name: asm-e2e-test

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - develop
      - develop-*
      - release/**
  workflow_dispatch:
    inputs:
      ccv2_branch:
        description: Branch on ccv2 to update
        default: spa_p4
        required: true
      source_branch_to_deploy:
        description: source branch to deploy on ccv2 (repo default branch if left empty)

env:
  CYPRESS_KEY: ${{ secrets.CYPRESS_KEY }}
  NODE_VERSION: '16'

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  no_retries:
    name: Verify re-run of all jobs
    runs-on: ubuntu-latest
    steps:
      - name: Forcefully fail build if jobs are all retried
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Please push a commit to trigger the build. To push an empty commit you can use `git commit --allow-empty -m "Trigger Build"`')
        if: ${{ github.run_attempt > 1 }}

  validate_e2e_execution:
    name: Validate pull_request files
    runs-on: ubuntu-latest
    outputs:
      SHOULD_RUN_E2E: ${{ steps.save-e2e-output-result.outputs.SHOULD_RUN_E2E }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Determine whether to run e2es
        id: save-e2e-output-result
        run: |
          source ci-scripts/validate-e2e-execution.sh
          echo "::set-output name=SHOULD_RUN_E2E::$(echo $RUN_E2E)"

  b2c_e2e_tests:
    needs: [no_retries, validate_e2e_execution]
    name: E2E tests for B2C
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: [1, 2, 3, 4, 5]
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || needs.validate_e2e_execution.outputs.SHOULD_RUN_E2E == 'true' }}
    steps:
      - name: Forcefully fail build if e2e job is retried
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Please push a commit to trigger the build. To push an empty commit you can use `git commit --allow-empty -m "Trigger Build"`')
        if: ${{ github.run_attempt > 1 }}
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            projects/storefrontapp-e2e-cypress/node_modules
            ~/.cache/Cypress
          key: nodemodules-${{ github.event.pull_request.base.sha }}
          restore-keys: nodemodules-${{ github.event.pull_request.base.sha }}
      - name: Run e2es
        env:
          SPA_ENV: ci,b2c
          BUILD_NUMBER: ci-build-number-${{ github.event.pull_request.head.sha || github.run_id }}
        run: |
          ci-scripts/e2e-cypress-asm.sh

  build_conclusion:
    needs: [no_retries, b2c_e2e_tests]
    name: Build Conclusion
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Required build failed
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Build failed')
        if: |
          needs.no_retries.result == 'failure' || needs.no_retries.result == 'cancelled' ||
          needs.b2c_e2e_tests.result == 'failure' || needs.b2c_e2e_tests.result == 'cancelled'
